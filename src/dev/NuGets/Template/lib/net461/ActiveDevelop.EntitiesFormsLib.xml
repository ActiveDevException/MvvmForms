<?xml version="1.0"?>
<doc>
<assembly>
<name>
ActiveDevelop.EntitiesFormsLib
</name>
</assembly>
<members>
<member name="T:ActiveDevelop.EntitiesFormsLib.My.Resources.Resources">
<summary>
  A strongly-typed resource class, for looking up localized strings, etc.
</summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.My.Resources.Resources.ResourceManager">
<summary>
  Returns the cached ResourceManager instance used by this class.
</summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.My.Resources.Resources.Culture">
<summary>
  Overrides the current thread's CurrentUICulture property for all
  resource lookups using this strongly typed resource class.
</summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.My.Resources.Resources._70_row_add_16">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.My.Resources.Resources._92_cancel_16">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.My.Resources.Resources._92_cancel_16_sel">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.My.Resources.Resources.delete">
<summary>
  Looks up a localized resource of type System.Drawing.Bitmap.
</summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.DisplayIndicatorAttribute.#ctor(System.Int32,System.String,System.String,System.Boolean,System.String)">
 <summary>
 Definiert die Ausgabesteuerung für ToString oder bei der Darstellung in Tabellen oder Listen.
 </summary>
 <param name="order"></param>
 <param name="formatString"></param>
 <param name="seperatorString"></param>
 <param name="SuppresInToString"></param>
 <param name="schemaName"></param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.AttributeControlledComparableBase">
 <summary>
 Basisklasse, für durch Attribute gesteuerte Equal-Implementierung und ToString-Überschreibungen.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BooleanEx">
 <summary>
 Stellt einen Boolean-Datentypen mit erweiterten Konvertierungsmöglichkeiten in andere und von anderen Datentypen zur Verfügung.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.HistoricalBoolean">
 <summary>
 Stellt einen Boolean-Datentyp zur Verfügung, der erst dann wieder FALSE zurückliefert, 
 wenn ihm FALSE sooft zugewiesen wurde, wie ihm zuvor TRUE zugewiesen wurde (und umgekehrt).
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser">
 <summary>
 Kapselt Funktionalität, um aus einer beliebigen Datenklasse (dataSource) über String-Funktionalitäten (DisplayMember) 
 Werte von Eigenschaften in bestimmten Formaten innerhalb von Listen zur Verfügung zu stellen.
 </summary>
 <remarks>Verwenden Sie die statische <see cref="M:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.ObjectToString(System.Object,System.String)">ObjectToString-Methode</see>, um eine Eigenschaft eines bestimmten Objektes 
 in seine Zeichenkettenrepräsentation mit einem bestimmten Format umzuwandeln.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.ObjectWrapper">
 <summary>
 Interne Hilfsklasse für die ObjectAnalyser-Klasse - nicht für die öffentlichen Verwendung gedacht.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.ObjectWrapper.SchemaControlDisabled">
 <summary>
 Bestimmt oder ermittelt, ob das DataBoundItem ausgetauscht werden darf, wobei hier aus Performance-Gründen keine Schemaüberprüfung (kein Test auf homogenität) durchgeführt wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.#ctor">
 <summary>
 Erstellt eine Instanz dieser Klasse, ohne DataSource und DisplayMember-Eigenschaften zu bestimmen.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.#ctor(System.Collections.IEnumerable,System.String)">
 <summary>
 Erstellt eine Instanz dieser Klasse und bestimmt DataSource und DisplayMember-Eigenschaften.
 </summary>
 <param name="datasource"></param>
 <param name="displayMember"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.ObjectToString(System.Object,System.String)">
 <summary>
 Ermittelt die formatierte String-Repräsentation eines Objektes, der sich aus verschiedenen Eigenschaftenwerten zusammensetzen kann.
 </summary>
 <param name="theObject"></param>
 <param name="FormatString"></param>
 <returns></returns>
 <remarks><para>Der DisplayMember wird aus mindestens zwei Teilen als Zeichenfolge angegeben werden, 
 die durch Komma getrennt werden. Der erste Teil - in Anführungszeichen - definiert die Formatierung, 
 der zweite Teil, welche Eigenschaften der Datenquelle angezeigt werden sollen. 
 Eigenschaftennamen werden in geschwifte Klammern gesetzt. Das ist wichtig, um zu einem späteren Zeitpunkt 
 hier noch um Formelauswertungsfunktioanlitäten zu erweitern.
 </para>
 <para>Beispiel: Kundennummer 6-stellig und Betrag mit zwei Nachkomma, Tausendertrennzeichen und Euro-Symbol darstellen:</para>
 <code>
 Me.DisplayMember = """{0:000000}: {1:#,##0.00} €"", {Kundennummer},{Betrag}"
 </code>
 <para>Beispiel: Kundennummer 6-stellig, mit anschließendem Doppelpüunkt, Leerzeichen,
 dann Nachname, Komma und Vorname:</para>
 <code>
 Me.DisplayMember = """{0:000000}: {1}, {2}"", {Kundennummer},{Nachname},{Vorname}"
 </code>
 </remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.ObjectToFunctionWrapper(System.Object,System.String)">
 <summary>
 Liefert den ObjectWrapper, der die Liste der Func-Delegates für die einzelnen DisplayMember-Auswerter hält, auf Basis des Objektes und des Formatstrings zurück.
 </summary>
 <param name="theObject"></param>
 <param name="formatString"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.PropertyInfoFromNestedPropertyName(System.Object,System.String)">
 <summary>
 Liefert Wert und PropertyInfo-Objekt eines Objektes auf Basis einer geschachteteln Eigenschaften-Zeichenketten angabe zurück (e.g.: control.parent.Anchor)
 </summary>
 <param name="theObject">Objekt, dessen Wert und Eigenschafteninfo ermittelt werden soll.</param>
 <param name="NestedPropertyName">String, der den Eigenschaftenpfad bestimmt: (e.g.: "Parent.Anchor" für den Wert der Anchor-Eigenschaft des Parents von theObject, wenn theObjekt ein Steuerelement darstellt)</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ObjectAnalyser.SearchExpression(System.String,System.Boolean)">
 <summary>
 Liefert eine Liste mit Objekten auf Basis eines Suchstringszurück.
 </summary>
 <param name="searchString">Der Suchstring mit dem Text, nachdem in der formatierten Werteliste gesucht werden soll.</param>
 <param name="ignoreCaseSensitivity">Bestimmt, ob die Suche Groß-Kleinschreibung berücksichtigen soll, oder nicht.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BindingChangedEventArgs">
 <summary>
 Stellt Ereignisparameter für das BindingChanged-Ereignis zur Verfügung.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ObservableBindingList`1">
 <summary>
 Can be used for collections which are supposed to be used in WinForms and WPF. 
 Not working in portable class libraries. For those use ObservableCollection and 
 ObservableCollectionToBindingListConverter on binding.
 </summary>
 <typeparam name="T"></typeparam>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IRecyclableParameters">
 <summary>
 Interface für die Parameter des Recyclable-Interfaces
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IRecyclable">
 <summary>
 Interface, dass implementiert werden muss, um ein Object recycclingfähig zu machen
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IRecyclable.Parent">
 <summary>
 der Parent ist die Instanz, die diese Parameterklasse (also die Klasse, die dieses Interface implementiert) verwendet
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IRecyclable.AllocateRessource(ActiveDevelop.EntitiesFormsLib.IRecyclableParameters)">
 <summary>
 Legt die Ressourcen eines Recyclables an. Diese Methode wird nur einmal beim Anlegen der 
 Instanz aufgerufen. Die Parameter wurden bereits gesetzt
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IRecyclable.InitializeRecyclable">
 <summary>
 Initialisiert die Instanz anhand der bei AllocateRessource übergebenen RecyclableParameters
 Entgegen AllocateRessource, welche nur einmal aufgerufen wird, wird InitializeRecyclable 
 bei jeder Verwendung der Instanz augerufen (durch GetFreeObject)
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IRecyclable.Recycle">
 <summary>
 gibt diese Instanz für die Wiederverwendung frei.
 Muss "Parent.Free(me)" aufrufen
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IRecycle">
 <summary>
 Stellt die Recycle-Methode zuur Verfügung
 Sie Muss als Seperates Interface implementiert werden !
 Grund: Bei IRecyclables. Parent könnte auch die Recyclables zuurückgeliefert werden. 
 Leider stören hier jedoch die Generics, denn Parent müsste Recyclables (of type) zurückgeben. 
 Der ist jedoch im Interface nicht bekannt
 (man kann ihn auch bekannt geben, es funktioniert trotzdem nicht)
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.Recyclables`1">
 <summary>
 Verwaltungsklasse für Recyclables.
 Pro RecyclableType und Parameterliste muss eine Instanz diese Klasse existieren
 </summary>
 <typeparam name="RecyclableType"></typeparam>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.Recyclables`1.#ctor(System.Int32,ActiveDevelop.EntitiesFormsLib.IRecyclableParameters)">
 <summary>
 Legt die angebene Anzahl der Instanzen an. Es müssen hier die Parameter angebene werden, da für jede angelegte Instanz
 die Methode AllocateRessource aufgerufen wird
 </summary>
 <param name="count"></param>
 <param name="parameters"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.Recyclables`1.Recycle(ActiveDevelop.EntitiesFormsLib.IRecyclable)">
 <summary>
 Gibt eine Instanz als Recyclefähig frei
 </summary>
 <param name="o"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.Recyclables`1.GetFreeObject">
 <summary>
 Liefert eine wiederverwendbare Instanz aus dem Pool zurück
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NoFreeObjectException">
 <summary>
 Exception, falls kein freies Objekt mehr vorhanden ist.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.RecyclableBase">
 <summary>
 Stellt eine Standardimplementierung der IRecyclable-Schnittstelle bereit
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.RecyclableBase._parentQueue">
 <summary>
 Verwaltunginstanz für dieses Objekt
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.RecyclableBase.AllocateRessource(ActiveDevelop.EntitiesFormsLib.IRecyclableParameters)">
 <summary>
 AllocateRessource muss überschrieben werden um die notwendigen Ressourcen anzulegen
 z.B. Bitmaps
 Als Hilfestellung wird die Parameterliste übergeben
 Die Parameterliste ist für die Lebensdauer des Objektes fest.
 </summary>
 <param name="parameter"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.RecyclableBase.InitializeRecyclable">
 <summary>
 Initialisiert ein Recyclable
 Diese Standardimplementierung führt keine Aktion durch.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.RecyclableBase.Parent">
 <summary>
 Liefert die Verwaltungsinstanz des Objekts zurck oder legt diese fest.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.RecyclableParametersBase">
 <summary>
 StandardImplementierung der IRecyclableParameters-Schnittstelle
 Verwendet für den Parametervergleich den Hashcode
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.RecyclableParametersBase.CompareTo(System.Object)">
 <summary>
 Implementierung der CompareTo-Methode 
 Verleicht die Hashwerte der Objekte
 </summary>
 <param name="obj"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.RecyclableParametersBase.GetHashCode">
 <summary>
 Liefert den Hashcode für das Object
 Diese Standardimplemeniterung liefert den HashCode der Basisklasse zurück
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ReflectionHelper.CreateSubPropsAsList(System.Type,System.String,System.Collections.Generic.List{ActiveDevelop.EntitiesFormsLib.PropertyCheckBoxItemController},System.Int32,System.Boolean,System.ComponentModel.Design.IDesignerHost,System.Boolean)">
 <summary>
 Creates a list with all properties and sub properties of the ViewModel (former Business Class Objects) recursively. This function is 
 for creating the property pathes for binding in the MvvmForms PropertyBindings Designer UI.
 </summary>
 <param name="t">The type whose properties are discovered including its sub properties for building property pathes.</param>
 <param name="propRoot">Since this method is called recusively, here is the current property path root where to begin.</param>
 <param name="proplist">The current list of allready discovered property pathes. Pass an empty but instanciated list at the beginning.</param>
 <param name="depthCountLimit">The maximum property path depth, if it should be limitted.</param>
 <param name="excludePropertiesByDefault">For business class objects, if this is set, only those 
 properties are taken into account when they are marked with BusinessPropertyAttribute.IncludeProperty. 
 This is legacy a legacy feature. Don't use.</param>
 <param name="enableRecursion">Flag which describes whether recursion is turned on or not.</param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ReflectionHelper.CreateFlatSubPropAsList(System.Type,System.String,System.Collections.Generic.List{ActiveDevelop.EntitiesFormsLib.PropertyCheckBoxItemController},System.Boolean,System.ComponentModel.Design.IDesignerHost)">
 <summary>
 Creates a list with all properties of the ViewModel (former Business Class Objects) flat. This function is 
 for creating the property pathes for binding in the MvvmForms PropertyBindings Designer UI.
 </summary>
 <param name="t">The type whose properties are discovered including its sub properties for building property pathes.</param>
 <param name="propRoot">Since this method is called recusively, here is the current property path root where to begin.</param>
 <param name="proplist">The current list of allready discovered property pathes. Pass an empty but instanciated list at the beginning.</param>
 <param name="excludePropertiesByDefault">For business class objects, if this is set, only those 
 properties are taken into account when they are marked with BusinessPropertyAttribute.IncludeProperty. 
 This is legacy a legacy feature. Don't use.</param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ReflectionHelper.PopulateEmptyStrings(System.Object)">
 <summary>
 Füllt die Eigenschaften einer Klasseninstanz vom Typ String, die Null (Nothing in VB) sind, mit Leerstring.
 </summary>
 <param name="classInstance"></param>
 <remarks>Diese Funktion ist notwendig zur Abwärtskompatibilität einiger Datenbanken, 
 in denen Strings nur Emtpy aber nicht als Nothing gespeichert werden dürfen.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.PropertyCheckBoxItemController">
 <summary>
 Hilfsklasse, für den Aufbau der entsprechenden Anzeige im Selektor des Eigenschaften/Feld-Mappings.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.StackedValue`1">
 <summary>
 Stellt einen Datentyp zur Verfügung, der sich durch seine Value-Eigenschaft 
 beim Zuweisen und Auslesen wie ein Stapel verhält.
 </summary>
 <typeparam name="Type"></typeparam>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.StackedValue`1.Value">
 <summary>
 Bestimmt oder ermittelt den aktuellen Wert. Bei zweimal hintereinander durchgeführtem Zuweisen unterschiedlicher Werte, werden dieselben unterschiedlichen 
 Werte beim hintereinander durchgeführten Auslesen auch wieder zurückgegeben.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.StackedValue`1.CurrentValue">
 <summary>
 Liefert den aktuellen Wert zurück, der auch mehrfach gelesen werden kann, ohne die Stapelhistorie zu verändern (Peek-Funktion).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.AnimationFormBase.HotKeyPressed">
 <summary>
 Diesem Event wird immer die zugewiesene HotKeyID übergeben wenn eine HotKey Kombination gedrückt wurde.
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.AnimationFormBase.AddHotKey(System.Windows.Forms.Keys,ActiveDevelop.EntitiesFormsLib.HotKeyModifiers,ActiveDevelop.EntitiesFormsLib.HotKeyType,System.Guid)">
 <summary>
 Diese Funktion fügt einen Hotkey hinzu und registriert ihn auch sofort
 </summary>
 <param name="KeyCode">Den KeyCode für die Taste</param>
 <param name="Modifiers">Die Zusatztasten wie z.B. Strg oder Alt, diese können auch mit OR kombiniert werden</param>
 <param name="HotKeyID">Die ID die der Hotkey bekommen soll um diesen zu identifizieren</param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.AnimationFormBase.RemoveHotKey(ActiveDevelop.EntitiesFormsLib.HotKeyType,System.Guid)">
 <summary>
 Diese Funktion entfernt einen Hotkey und deregistriert ihn auch sofort
 </summary>
 <param name="HotKeyID">Gibt die HotkeyID an welche entfernt werden soll</param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingManager.UpdateTargetPropertyInternal(System.Object,System.Object,ActiveDevelop.EntitiesFormsLib.PropertyBindingItem,System.Globalization.CultureInfo,ActiveDevelop.EntitiesFormsLib.BindingManager)">
 <summary>
 Aktualisiert das Target (ViewModel) mti dem Wert einer Eigenschaft des Source (Control) auf Basis eines PropertyBindingItem.
 </summary>
 <param name="source">Quell-Objekt, in der Regel ein Steuerelement.</param>
 <param name="target">Zielobjekt, in der Regel ein ViewModel.</param>
 <param name="bindingInfo">Bestimmt, welche Eigenschaften auf beiden Seiten verwendet werden sollen.</param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingManager.UpdateSourcePropertyInternal(System.Object,System.Object,ActiveDevelop.EntitiesFormsLib.PropertyBindingItem,System.Boolean,System.Globalization.CultureInfo,ActiveDevelop.EntitiesFormsLib.BindingManager,System.Boolean)">
 <summary>
 Aktualisiert den Source (Control) mit dem Wert einer Eigenschaft des Target (ViewModel) auf Basis eines PropertyBindingItem.
 </summary>
 <param name="source">Quell-Objekt, in der Regel ein Steuerelement.</param>
 <param name="target">Zielobjekt, in der Regel ein ViewModel.</param>
 <param name="bindingInfo">Bestimmt, welche Eigenschaften auf beiden Seiten verwendet werden sollen.</param>
 <param name="UpdatePartPathOfProperty">True, wenn es sich um eine Teilaktualisierung handelt, und target nicht das komplette ViewModel 
 sondern nur eine Eigenschaft davon bildet, die seinerseits ein Objekt mit Eigenschaften bildet. Nur der Eigentliche PropertyName wird 
 dann verwendet, nicht der Property-Pfad. Wird verwendet, wenn sich nur ein Teilpfad der gesamten Bindung geändert hat.</param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingManager.UpdateControlsFromViewModel">
 <summary>
 Aktualisiert alle gebundenen Steuerelemente auf Basis des aktuellen Zustand des ViewModels.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingManager.GetInitialErrorInfo">
 <summary>
 Ermittelt die initialen Fehler aller gebundenen Steuerelemente auf Basis des aktuellen Zustands des ViewModels
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingManager.UpdateControlsWithNothing">
 <summary>
 Füllt alle gebundenen Steuerelemente auf Basis des aktuellen Zustands mit Nothing
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingManager.UpdateViewModelFromControls">
 <summary>
 Aktualisiert das ViewModel auf Basis aller seiner gebundenen Steuerelemente.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingManager.UpdateControlProperties(System.Object,System.Collections.Generic.IEnumerable{ActiveDevelop.EntitiesFormsLib.PropertyBindingItem})">
 <summary>
 Aktualisiert die Eigenschaften eines Controls auf Basis des gebundenen ViewModels.
 </summary>
 <param name="control"></param>
 <param name="bindingInfos"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingManager.UpdateViewModelProperties(System.Object,System.Collections.Generic.IEnumerable{ActiveDevelop.EntitiesFormsLib.PropertyBindingItem})">
 <summary>
 Aktualisiert die Eigenschaften des ViewModels auf Basis der Eigenschaften eines der gebundenen Controls.
 </summary>
 <param name="control"></param>
 <param name="bindingInfos"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindingManager.SourceObject">
 <summary>
 ONLY FOR DEBUGGING PURPOSES!!! Enthält die Liste aller Ereignisverknüpfungen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindingManager.MvvmManager">
 <summary>
 Reference to the Parent-MvvmManager
 </summary>
 <value></value>
 <returns></returns>
 <remarks>The reference to the parent MvvmManager ist needed for the 
 DataErrors able to be set. Since MvvmManager is inherited from ErrorProvider, 
 the ErrorProvider's functionality can be used to indicate errors in the 
 Views which have been set in the ViewModel by the INotifyDataError mechanism.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BindingPropertyChangedEventArgs">
 <summary>
 Provides data for the BindingPropertyChanged Event.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindingPropertyChangedEventArgs.OriginalSource">
 <summary>
 Control, which caused this event.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindingPropertyChangedEventArgs.EventProperty">
 <summary>
 BindingPath-Name of the property, which caused this event.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindingPropertyChangedEventArgs.Converter">
 <summary>
 The converter to use for data conversion, if a converter has been spacified, otherwise NULL (Nothing in VB).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ObjectEventsAssignments">
 <summary>
 Encapsulates the functionality for binding the property change events of the controls.
 </summary>
 <remarks>
 DE-INFO:
 Kapselt die Funktionalität zur Ereignisbindung der PropertyChanged-Events der Steuerelemente.
 </remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.DirtyStateManager">
 <summary>
 Komponente, die für das Überwachen des IsDirty-Status einer View (Formular, UserControl) zuständig ist.
 </summary>
 <remarks>
 <para>Als 'Dirty' bezeichnet man ein Formular oder UserControl, das zur Eingabe von Daten dient, wenn nach dem Anzeigen von Daten der 
 Anwender Änderungen irgendwo im Formular oder im UserControl vorgenommen hat, sodass diese Änderungen entweder gespeichert werden sollten 
 oder der Anwender in der Lage ist, die Änderungen wieder rückgängig zu machen. Möchte ein Programm also anzeigen, dass wenn der Anwender Eingaben 
 in einem Eingabeformular gemacht hat, es speicherbare Änderungen gibt, indem es beispielsweise eine Speicher-Schaltfläche aktiviert, muss es 
 über diese Statusänderung informiert werden (<see cref="P:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.IsDirty">IsDirty</see> ändert sich auf True, 
 das <see cref="E:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.IsDirtyChanged">IsDirtyChange-Ereignis</see> wird ausgelöst).</para> 
 <para>Wenn innerhalb einer View die DirtyStateManager-Komponente verwendet wird, hat die View die Möglichkeit, darüber informiert zu werden,
 ob der Anwender innerhalb der View Änderungen vorgenommen hat. Zu diesem Zweck braucht es innerhalb 
 der View neben dem MvvmManager auch eine DirtyStateManager-Komponente, die sämtlichen Steuerelementen in der 
 View als Property Extender die Eigenschaften 'CausesIsDirtyChanged' sowie 'IsDirtyChangedCausingEvent' verleiht. Mit diesem Eigenschaften 
 kann gesteuert werden, ob ein Steuerelement einen IsDirty-Zustand (eine Eigenschaft in der View wurde verändert) herstellen kann, 
 und welches Ereignis des Steuerelementes (beispielsweise TextChange bei einer TextBox) das erreichen soll (IsDirtyChangedCausingEvent-Eigenschaft).</para> 
 <para>Da der DirtyStateManager die Quelle der Eigenschaftenveränderungen (Benutzer, Programm) nicht unterscheiden kann, muss diese Rolle der 
 MvvmMananger übernehmen - deswegen muss die DirtyStateManager-Komponente der MvvmManager-Komponente zugewiesen werden. Bevor der MvvmManager 
 eine Eigenschaft in der View durch Updates im ViewModel verändert, schaltet er die DirtyStateManager-Komponente über ihre Enabled-Eigenschaft aus  
 und direkt danach wieder an. Im Ergebnis löst der DirtyStateManager nur noch dann ein IsDirtyChanged-Ereignis aus, wenn der Anwender selbst in der View 
 eine Änderung vorgenommen hat, da der DirtyStateManager nicht aktiv ist, wenn über das ViewModel Änderungen an der View vorgenommen wurden. 
 Sollte der Entwickler selbst Änderungen an Eigenschaften von Steuerelementen der View vornehmen, muss er zuvor selbst die 
 Enabled-Eigenschaft der DirtyStateManager-Komponent deaktivieren, um das gewünschte Ergebnis nicht zu verfälschen.</para>
 </remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.IsDirtyChanged">
 <summary>
 Ereignis, das ausgelöst wird, wenn die Komponente eine Veränderung an einer relevanten Eigenschaft im Formular feststellt. 
 Die <see cref="P:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.ObservingEnabled">ObservingEnabled-Eigenschaft</see> muss dazu aktiviert sein.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.ResetIsDirty">
 <summary>
 Setzt den IsDirty-Zustand zurück.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.ForceIsDirty(System.Windows.Forms.Control)">
 <summary>
 Erzwingt den IsDirty-Zustand für Zustände manuell, die von dieser Komponente nicht selbst entdeckt werden können.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.IsDirty">
 <summary>
 Ermittelt, ob die Komponente für eine View den IsDirty-Zustand festgestellt hat (eine relevante Eigenschaft eines Controls der View wurde verändert).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.OnIsDirtyChanged(ActiveDevelop.EntitiesFormsLib.IsDirtyChangedEventArgs)">
 <summary>
 Löst das <see cref="E:ActiveDevelop.EntitiesFormsLib.DirtyStateManager.IsDirtyChanged">IsDirtyChanged-Ereignis</see>  aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PropertyPathBoundSourceItemProxy.RemainingPath">
 <summary>
 ?Der verbleibende Teil des Property-Pfades, ab diesem Property-Knotenstück.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PropertyPathBoundSourceItemProxy.PropertyPathName">
 <summary>
 ?Der exakte Teil des Propertypfades, der von diesem Property-Knotenstück verarbeitet werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.PropertyBindingManager">
 <summary>
 Managed die Binding einer 1:1-Beziehung Control.Property - ViewModel.Path.To.Property
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.PropertyBindingManager.#ctor(System.ComponentModel.INotifyPropertyChanged,System.Windows.Forms.Control,ActiveDevelop.EntitiesFormsLib.PropertyBindingItem,ActiveDevelop.EntitiesFormsLib.BindingManager)">
 <summary>
 Erstellt eine neue Instanz dieser Klasse.
 </summary>
 <param name="ViewModelObject">Instanz des zu bindenden ViewModels.</param>
 <param name="TargetControl">Instanz des zu bindenden Controls.</param>
 <param name="bindingItem">Bindungsinformationen, die bestimmt, wie die Eigenschaften gebunden sein sollen.</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PropertyBindingManager.BindingItem">
 <summary>
 Bestimmt die Bindungseigenschaften von ViewModel und Control. Das Setzen dieser Eigenschaft richtet 
 die Infrastruktur des Bindungsmechanismusses ein (auflösen der vorherigen, setzen der neuen PropertyChange-Events).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.PropertyBindingManager.WireUpPropertyChangeEvents(System.Object,System.String,ActiveDevelop.EntitiesFormsLib.PropertyBindingItem)">
 <summary>
 Richtet die PropertyChange-Ereignisse für die Bindung dieses Elementes ein. Diese Methode 
 wird von der BindingItem-Eigenschaft verwendet.
 </summary>
 <param name="value"></param>
 <param name="PropertyPath"></param>
 <param name="bindingItem"></param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmBindingItem">
 <summary>
 Definiert eine Datenstruktur, die einem Bindungs-Set für ein Steuerelement an ein ViewModel entspricht. 
 Infrastrukturfunktion, die von der MvvmManager-Komponente verwendet wird.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ViewToViewmodelAssignments">
 <summary>
 Verwaltet eine Datenstruktur, die das Nachschlagen eines View-Types auf Basis eines ViewModel-Typs ermöglicht.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ViewToViewmodelAssignment">
 <summary>
 Repräsentiert eine Zuordnungseinheit ViewModel --> View und ermöglicht das Nachschlagen einer View auf Basis eines ViewModels.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.StringValueToStringConverter">
 <summary>
 Er - we need this internally to go from string to StringValue and vice versa because of a design decision 
 we made years ago. StringValue was invented to have a String as pure value to satisfy the need of 
 *Value*-part in NullableValueBase. It's a little bit of a hack... 
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.TypeBaseConverter`3">
 <summary>
 Kapselt IValueConverter-Funktionalität in einer Basisklasse, die dann vereinfachend mit den statischen Methoden ToThisType und ToThatType aufgerufen werden kann.
 </summary>
 <typeparam name="ThisType">Typ, von dem konvertiert wird.</typeparam>
 <typeparam name="ThatType">Typ, in den konvertiert wird.</typeparam>
 <typeparam name="t">Typ der ableitenden Klasse.</typeparam>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.PropPath">
 <summary>
 Methodensammlung, um Werte aus Property-Pfaden zu ermitteln oder zu setzen, und Null-Referenz-Exception dabei zu unterdrücken.
 </summary>
 <remarks>HINWEIS: Diese Hilfsmethoden dürfen nur im Performance-unkritischen Kontext zur Arbeitserleichterung zum Einsatz kommen. 
 Sie dienen dazu, beim Verarbeiten von Property-Pfaden zu verhindern, dass auf halben Weg eines Property-Pfades (z.B. Mitarbeiter.Adresse.Kommunikation.PrivateEmail) 
 NullReference-Exceptions auftreten, weil bereits eine Instanz "auf dem Weg" zur eigentlichen Eigenschaft Null (Nothing in VB) war. 
 Die Methoden selber fangen dabei NullReferenceException lediglich ab; sie werten den Pfad nicht wirklich aus. 
 <para>Angewendet wird diese Hilfsmethode durch Übergabe eines Lambdas, also beispielsweise:</para>
 <code>
 Dim eMailAdresse = PropPath.GetValue(Function() MitarbeiterInstanz.AdressDaten.EmailAdresse)
 </code>
 <para>Sollte in diesem Fall AdressDaten null sein (Nothing in VB), wird standardmäßig keine Exception ausgelöst. 
 Das kann geändert werden, indem die globale Variable SupressException auf False gesetzt wird (beispielsweise zu Debugging-Zwecken).</para>
 </remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BindingSettingPopup">
 <summary>
 Steuerelement zur aufklappbaren Darstellung von Elementen in DataGridView-Listen, das überdies Null-Werte verarbeitet, 
 Such- und Auto-Complete-Funktionalitäten sowie eine vereinheitlichende Value-Eigenschaft bietet, 
 Funktionen für Rechteverwaltung zur Verfügung stellt und von einer 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet werden kann.
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ConverterDisplayItem">
 <summary>
 Used to show an entry in the Converter Combo Box in the PropertyBindings Dialog.
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.frmMvvmPropertyAssignmentEx.ControlToBind">
 Hier wird das Control gespeichert, welches von diesem Formular als Bindungselement verwendet wird.
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.frmMvvmPropertyAssignment">
 <summary>
 Dialog, which is shown, when the user wants to assign a ViewModel Property to a control's view property 
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.frmMvvmPropertyAssignment.ControlToBind">
 Hier wird das Control gespeichert, welches von diesem Formular als Bindungselement verwendet wird.
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmManager">
 <summary>
 Manages the binding of a ViewModel (Class, which implements <see cref="T:System.ComponentModel.INotifyPropertyChanged">INotifyPropertyChanged</see>)
 to a View, which is represented bei a Windows Forms Form or a Windows Forms User Control, according to the Mvvm Pattern. 
 </summary>
 <remarks>
 <para>MVVM is short for <i>Model View ViewModel</i>, and is a well known and established software development pattern. It is  
 state of the art for the development of industry sized projects using the XAML-based UI-technologies WPF, Silverlight, 
 Windows 8/8.1/10 Runtime-Applications (f.k.a: Metro-Apps). It is also heavily used in cross platform development projects using Xamarin Forms 
 (for building iOS, Android, Windows 8.1 - both tablet and phone - which will later also add support for Windows Universal Apps). The main advantage 
 of using the Mvvm pattern is that ViewModel, which carry up to 80% of the UI control logic, can be reused in other projects for a complete different 
 UI stack. So, ViewModels, controlling the functionality of maintaining customers in a LOB Windows Application, can for example be reused 
 in a dedicated tablet app running Windows 10, or even on a iPhone, iPad or Android tablet.
 In Windows Forms, however, the Mvvm pattern cannot be implemented without immense effort or big compromises - Windows Forms simply lacks the required 
 base functionality. Although Windows Forms provides basic data binding functionality through its binding class, this class is missing features for 
 implementing of LOB Applications. As an example, there is no Visual Designer which allowed the binding of property pathes of ViewModels to Views 
 at design time. Also, Windows Forms lacks the concept of Value Converters or tools for controlling the exact type of binding (TwoWay, 
 OneWay, OneWayToSource, OneTime), which is essential for the reuse of ViewModels in projects with different UI technologies.</para>
 <para>MvvmForms, however, includes everything you need to build Components or even complete LOB Application in Windows Forms with the Mvvm pattern, 
 thus providing you a clear migration path away from the traditional, error prone and non-resuable Windows Forms Development paradign to Windows 10 with 
 Mobile First/Cloud First and also cross plattform development for Android and iOS.</para> 
 <para>How to use MvvmForm's MVVMManager:</para>
 <list type="number">
 <item><description>Create a View by adding a UserControls or a Windows Forms Form to your project.<b>IMPORTANT:</b>Since the MvvmManager component 
 acts as a so called property extender, you do NOT have to use the specialzed, extended data centric input controlls also provided by MvvmForms - 
 instead you can use any Windows Forms control (including those of third party vendors) as a View target in Mvvm.</description></item>
 <item><description>Create a ViewModel for controlling you Forms or UserControl based view. Your ViewModel class must at least implement  
 <see cref="T:System.ComponentModel.INotifyPropertyChanged">INotifyPropertyChanged</see>, however, it is often easier, if you inherit your ViewModel class from 
 <see cref="T:ActiveDevelop.MvvmBaseLib.BindableBase">BindableBase</see> or, for getting even more support through base class functionality, from  
 <see cref="T:ActiveDevelop.MvvmBaseLib.Mvvm.MvvmViewModelBase">MvvmBase</see>:
 <code>
 Public Class AddEditTimeCollectionItemViewModel
     Inherits MvvmBase

 </code>
 <para>
 The ViewModel controls the properties of the View through binding. But: You cannot always bind a ViewModel directly to the view. If you, e.g., what to 
 bind a decimal number to a color - the types are not compatible. Does such a binding make sense at all? Of course it does. Imagine, you want to show 
 special revenue numbers in the UI with a special background - you're helping the user at a glance that a number with a red background may be too low,
 and a number with a yellow background still has space for improvement. Since you cannot implement a UI-depending type in your viewmodel directly, 
 use a converter: The converter gets the decimal value, and returns for example the Windows Forms Colors Red, Green or Yellow according the passed value.</para>
 <para>You can create a Converter by implementing <see cref="T:System.Windows.Data.IValueConverter">IValueConverter</see> into a class. 
 As an example, take a look at the following code:</para>
 <code>
 Imports System.Windows.Data
 
 Public Class TimeSpanToStringConverter
     Implements IValueConverter
 
     Public Function Convert(value As Object, targetType As Type, parameter As Object,
                             culture As Globalization.CultureInfo) As Object Implements IValueConverter.Convert
         Dim tSpan = DirectCast(value, TimeSpan)
         Return tSpan.ToString(parameter.ToString)
     End Function
 
     Public Function ConvertBack(value As Object, targetType As Type, parameter As Object,
                                 culture As Globalization.CultureInfo) As Object Implements IValueConverter.ConvertBack
         Dim timeAsString As String = DirectCast(value, String)
         Try
             Return TimeSpan.Parse(timeAsString)
         Catch ex As Exception
             Return Date.Now.TimeOfDay
         End Try
     End Function
 End Class
 </code>
 </description></item>
 <item><description>After implementing your classes, drag the MvvmComponent from the toolbox to the Form or UserControl which acts as your view.</description></item>
 <item><description>IMPORTANT: Rebuild your solution always after you changed the ViewModel codes, so new properties will become available 
 in MvvmForm's designer.</description></item>
 <item><description>Now, assign the <see cref="P:ActiveDevelop.EntitiesFormsLib.MvvmManager.DataContextType">DataContextType-Eigenschaft</see> of the MvvmManager Component by choosing 
 the assembly, in which the designer can find the ViewModel, and the ViewMode, you want to use to control your View.</description></item>
 <item><description>The MvvmManager-Components acts, as mentioned, as a so-called property extender. 
 Each control on the form "gets" two additional properties - of whose only one is used at the moment: With each control's PropertyBindings property you
 can call a dialog at design time, with which you create the bindings between ViewModel and View (Form, UserControl).</description></item>
 </list>
 <item><description>At runtime, assign an instance of your ViewModel to the DataContext property of the MVVMManager component. 
 A good time doing this can be the FormLoad event, if your view is of type Form.</description></item>
 <para>Important for using the MvvmManager component: For a seamless communication between View and Viewmodel, 
 there are a couple of requirements which have to be met:</para>
 <list type="bullet">
 <item><description>You can only bind to those properties of a control of a view, for which an according 'PropertyChange' event exists.
 Almost all properties of almost all Windows Forms Controls meet this criteria. For custom controls: If you want to implement a new property  
 named 'TimedColor', it is not enough to just have the property code in your control's codefile. The whole property infrastructure according to the 
 Windows Forms standard (Event, OnXXXMethod) has to be implemented, as well.</description></item>
 <item><description>The ViewModel must implement INotifyPropertyChange, and the property code must raise the related event -   
 so, ideally derive all your ViewModels from <see cref="T:ActiveDevelop.MvvmBaseLib.Mvvm.MvvmViewModelBase">MvvmBase</see> - see above!. Here is an example for the property code, if you 
 derived the ViewModel class from MvvmView:
 <code>
 Public Property Firstname As String
     Get
         Return myFistname
     End Get
     Set(value As String)
         'This call takes care of raising the PropertyChanged event  
         'with 'Firstname'as parameter.
         MyBase.SetProperty(myVorname, value)
     End Set
 End Property
 </code>
 </description></item>
 </list>
 </remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmManager.ValueAssigning">
 <summary>
 Wird ausgelöst, bevor eine Wertezuweisung zwischen ViewModel und View erfolgt.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmManager.ValueAssigned">
 <summary>
 Wird ausgelöst, nachdem eine Wertezuweisung zwischen ViewModel und View erfolgt ist.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmManager.MvvmBindingException">
 <summary>
 Wird ausgelöst, wenn ein Fehler beim Wertezuweisen aufgetreten ist, und die statische Eigenschaft 
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmManager.ViewmodelPropertyChanged">
 <summary>
 Wird ausgelöst, wenn das entsprechende Viewmodel sein PropertyChanged ausgelöst hat, und dabei ist es 
 unerheblich, ob diese ViewModel-Eigeschaft zuvor gebunden wurde, oder nicht.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks>
 Mithilfe dieses Ereignisses lassen sich auch solche Ereignisse eines ViewModels aus WindowsForms heraus bearbeiten, 
 für die normalerweise keine Bindungen möglich sind. 
 </remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmManager.LoggingModeChanged">
 <summary>
 Raised, when the LoggingMode changed, which is controllable over the instance's LoggingMode property.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.#ctor">
 <summary>
 Erstellt eine neue Instanz dieser Komponente. Verwenden Sie die Toolbox im Designer, um eine Komponente dem Formular oder UserControl hinzuzufügen.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.CanExtend(System.Object)">
 <summary>
 Infrastrukturfunktion. Bestimmt, welche Steuerelemente Ziel des PropertyExtenders sind.
 </summary>
 <param name="extendee"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.GetPropertyBindings(System.Windows.Forms.Control)">
 <summary>
 Ermittelt die PropertyBinding-Eigenschaft für das entsprechende Steuerelement.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.SetPropertyBindings(System.Windows.Forms.Control,ActiveDevelop.EntitiesFormsLib.PropertyBindings)">
 <summary>
 Setzt die PropertyBinding-Eigenschaft für das entsprechende Steuerelement.
 </summary>
 <param name="ctrl"></param>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.GetEventBindings(System.Windows.Forms.Control)">
 <summary>
 Ermittelt die EventBindings-Eigenschaft für das entsprechende Steuerelement.
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.SetEventBindings(System.Windows.Forms.Control,ActiveDevelop.EntitiesFormsLib.ObservableBindingList{ActiveDevelop.EntitiesFormsLib.EventBindingItem})">
 <summary>
 Setzt die EventBindings-Eigenschaft für das entsprechende Steuerelement.
 </summary>
 <param name="ctrl"></param>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmManager.DataContextType">
 <summary>
 Bestimmt oder ermittelt, welchen Typ ViewModel die MVVMManager-Komponente später zur Laufzeit verarbeiten soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Diese Eigenschaft ist wichtig zu setzen, BEVOR Zuweisungen über die PropertyBindings- bzw. EventBindings-Eigenschaften 
 der entsprechenden Steuerelemente in der View gemacht werden können. Anhand dieser Eigenschaft erstellt die UI 
 dieser Komponente eine Liste der bindbaren Eigenschaften und Ereignisse des ViewModels, und bietet diese im Dialog an, der 
 aufgerufen wird, wenn im Eigenschaftenfenster auf die ...-Schaltfläche für die PropertyBindings-Eigenschaft bzw. 
 der EventBindings-Eigenschaft geklickt wird.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmManager.DataContext">
 <summary>
 Gets or sets the ViewModel for binding to the view (form, usercontrol). This property is supposed to be set 
 at runtime, and only if the binding assignments have been made is InitializeComponent.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmManager.LoggingMode">
 <summary>
 Gets or sets who the logging of the binding and the assigning of the values through bindung should be done at runtime.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.UpdateViewModel">
 <summary>
 Aktualisiert das ViewModel auf Basis des aktuellen Zustands der View.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.UpdateView">
 <summary>
 Aktualisiert die Anzeige der Daten in der View auf Basis des aktuellen Zustands des ViewModels.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmManager.DirtyStateManagerComponent">
 <summary>
 Bestimmt oder ermittelt die verwendete DirtyStateManager-Komponente für das Überwachen des IsDirty-Status einer View (Formular, UserControl)
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 <para>Wenn innerhalb einer View die DirtyStateManager-Komponente verwendet wird, hat die View die Möglichkeit, darüber informiert zu werden,
 ob der Anwender innerhalb der View Änderungen vorgenommen hat, damit sie beispielsweise einen Speichern-Button aktivieren kann. Zu diesem 
 Zweck braucht es innerhalb der View neben dem MvvmManager auch eine DirtyStateManager-Komponente, die sämtlichen Steuerelementen in der 
 View als Property Extender die Eigenschaften 'CausesIsDirtyChanged' sowie 'IsDirtyChangedCausingEvent' verleiht. Mit diesem Eigenschaften 
 kann gesteuert werden, ob ein Steuerelement einen IsDirty-Zustand (eine Eigenschaft in der View wurde verändert) herstellen kann, 
 und welches Ereignis des Steuerelementes (beispielsweise TextChange bei einer TextBox) das erreichen soll (IsDirtyChangedCausingEvent-Eigenschaft).</para> 
 <para>Da der DirtyStateManager die Quelle der Eigenschaftenveränderungen (Benutzer, Programm) nicht unterscheiden kann, muss diese Rolle der 
 MvvmMananger übernehmen - deswegen muss die DirtyStateManager-Komponente der MvvmManager-Komponente zugewiesen werden. Bevor der MvvmManager 
 eine Eigenschaft in der View durch Updates im ViewModel verändert, schaltet er die DirtyStateManager-Komponente über ihre Enabled-Eigenschaft aus  
 und direkt danach wieder an. Im Ergebnis löst der DirtyStateManager nur noch dann ein IsDirtyChanged-Ereignis aus, wenn der Anwender selbst in der View 
 eine Änderung vorgenommen hat, da der DirtyStateManager nicht aktiv ist, wenn über das ViewModel Änderungen an der View vorgenommen wurden. 
 Sollte der Entwickler selbst Änderungen an Eigenschaften von Steuerelementen der View vornehmen, muss er zuvor selbst die 
 Enabled-Eigenschaft der DirtyStateManager-Komponent deaktivieren, um das gewünschte Ergebnis nicht zu verfälschen.</para>
 </remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmManager.CurrentContextGuid">
 <summary>
 For futre extensions.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmManager.DataSource">
 <summary>
 Infrastructure, please do NOT use directly. Use DataContext instead.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmManager.DataSourceType">
 <summary>
 Infrastrukturfunktion. Verwenden Sie stattdessen bitte die DataContextType-Eigenschaft.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.OnMvvmBindingException(ActiveDevelop.EntitiesFormsLib.MvvmBindingExceptionEventArgs)">
 <summary>
 Löst das <see cref="E:ActiveDevelop.EntitiesFormsLib.MvvmManager.MvvmBindingException">MvvmBindingException-Ereignis aus.</see>
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.OnValueAssigning(ActiveDevelop.EntitiesFormsLib.ValueAssigningEventArgs)">
 <summary>
 Löst das <see cref="E:ActiveDevelop.EntitiesFormsLib.MvvmManager.ValueAssigning">ValueAssigning-Ereignis aus.</see>
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmManager.OnValueAssigned(ActiveDevelop.EntitiesFormsLib.ValueAssignedEventArgs)">
 <summary>
 Löst das <see cref="E:ActiveDevelop.EntitiesFormsLib.MvvmManager.ValueAssigned">ValueAssigned-Ereignis aus.</see>
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IMvvmManager">
 <summary>
 Interface welches die benoetigte Funktionalitaet fuer das 
 frmMvvmPropertyAssignment-Formular zum Bearbeiten der Bindungen kapselt
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IMvvmManager.GetPropertyBindings(System.Windows.Forms.Control)">
 <summary>
 Liefert alle Bindungen des Controls
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IMvvmManager.DataContextType">
 <summary>
 Datentyp des ViewModels, welches als Bindungsquelle verwendet werden soll
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BusinessClassAttribute">
 <summary>
 Bestimmt, dass eine Klasse eine Businesslogik enthält, und für den FormToBusinessClass-Manager verwendet werden kann.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BusinessClassAttribute.#ctor">
 <summary>
 Erstellt eine Instanz dieser Klasse.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BusinessClassAttribute.#ctor(ActiveDevelop.EntitiesFormsLib.BusinessClassAttributeOptions)">
 <summary>
 Erstellt eine Instanz dieser Klasse und bestimmt, ob alle Eigenschaften der definierenden Klasse standardmäßig einbezogen oder ausgeschlossen werden sollen.
 </summary>
 <param name="options"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BusinessClassAttribute.Options">
 <summary>
 Ermittelt oder definiert, ob alle Eigenschaften der definierenden Klasse standardmäßig einbezogen oder ausgeschlossen werden sollen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BusinessClassPropertyAttribute">
 <summary>
 Bestimmt, das eine Eigenschaft einer Businessklasse als Pfad-Wurzel für das DataBinding verwendet werden kann.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BusinessClassPropertyAttribute.#ctor">
 <summary>
 Erstellt eine Instanz dieser Klasse.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BusinessClassPropertyAttribute.#ctor(System.String)">
 <summary>
 Erstellt eine Instanz dieser Klasse und weist die Eigenschaft einer Kategorie zu.
 </summary>
 <param name="category">Kategorie, die der Eigenschaft über der dieses Attribut steht, zugewiesen wird.</param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BusinessClassPropertyAttribute.#ctor(System.String,ActiveDevelop.EntitiesFormsLib.BusinessPropertyAttributeOptions)">
 <summary>
 Erstellt eine Instanz dieser Klasse, weist die Eigenschaft einer Kategorie zu und definiert 
 zusätzliche Optionen, die bei der Steuerelementanordnung berücksichtigt werden sollen.
 </summary>
 <param name="category">Kategorie, die der Eigenschaft über der dieses Attribut steht, zugewiesen wird.</param>
 <param name="options">Definiert Optionen, über die bestimmte Regeln für die Steuerelementeerstellung codiert werden können. (Für zukünftige Erweiterungen).</param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BusinessClassPropertyAttribute.#ctor(System.String,ActiveDevelop.EntitiesFormsLib.BusinessPropertyAttributeOptions,System.Int32)">
 <summary>
 
 </summary>
 <param name="category">Kategorie, die der Eigenschaft über der dieses Attribut steht, zugewiesen wird.</param>
 <param name="options">Definiert Optionen, über die bestimmte Regeln für die Steuerelementeerstellung codiert werden können. (Für zukünftige Erweiterungen).</param>
 <param name="column">Definiert Spaltenzuweisungen, für Regeln bei Layouting der Steuerelementerstellung. (Für zukünftige Erweiterungen).</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BusinessClassPropertyAttribute.Category">
 <summary>
 Definiert einen Eigenschaften-Kategorie, um sie später bei der Codegenerierung oder 
 dynamischen Formularerstellung einfacher auf andere Container-Steuerelemente zu verteilen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BusinessClassPropertyAttribute.Options">
 <summary>
 Definiert Optionen, über die bestimmte Regeln für die Steuerelementeerstellung codiert werden können. (Für zukünftige Erweiterungen).
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Für zukünftige Erweiterungen reserviert.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BusinessClassPropertyAttribute.Column">
 <summary>
 Definiert für ein Layouting die Spaltennummer der Spalte, auf der das Steuerelement platziert werden soll. (Für zukünftige Erweiterungen).
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Für zukünftige Erweiterungen reserviert.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BusinessClassAttributeOptions">
 <summary>
 Bestimmt, ob alle Eigenschaften der definierenden Klasse standardmäßig einbezogen oder ausgeschlossen werden sollen.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BusinessPropertyAttributeOptions">
 <summary>
 Definiert eine Reihe von Optionen, die bei der Codegenerierung oder der dynamischen Erstellung von Formularen Beachtung finden sollen.
 </summary>
 <remarks>Für zukünftige Erweiterungen reserviert.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManagerDesigner.SetVerbDeps">
 <summary>
 Aktiviert oder Deaktiviert die DesignerVerbs
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ForeignKey">
 <summary>
 Dient nur als Mapping-Index um bei bestimmten Konstellationen (ID im Namen)
 anstelle der zugewiesenen Typen das RelationalPopup zu verwenden.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">
 <summary>
 LEGACY. Please consider using MvvmManager. We don't mark it obsolete, since it would hurt some build process. 
 Stellt Funktionalitäten zur Verfügung, mit denen die Daten in einem WindowsForms-Formular validiert und in eine Business-Objekt
 (POCO, EntityObject EF kleiner V5.0) (und umgekehrt) übertragen werden können.
 </summary>
 <remarks>Voraussetzung für die Validierung und Verknüpfung eines Windows Forms-Formulars an ein Business-Objekt ist, 
 dass die verwendeten Steuerelemente einen Satz von Funktionalitäten zur Verfügung stellen, über die sie vom 
 FormsToBusinessClass-Manager verarbeitet werden können. 
 <para>Um das zu gewährleiten, müssen die Steuerelemente des Formulars 
 die <see cref="T:ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding">INullableValueDataBinding-Schnittstelle</see> implementieren.</para>
 <para><b>Steuerelemente für den FormsToBusinessClass-Manager:</b>
 </para>
 <para>Die EntitiesFormsLib-Assembly bietet einige Steuerelemente an, die diese Funktionalität bereits zur Verfügung stellen, 
 und aus denen die Formulare aufgebaut werden sollten:
 </para>
 <para><list><see cref="T:ActiveDevelop.EntitiesFormsLib.NullableTextValue">NullableTextValue-Steuerelement:</see> Dient zur Eingabe von einzeiligen Textinhalten in Formularen.
 </list></para>
 <para><list><see cref="T:ActiveDevelop.EntitiesFormsLib.NullableMultilineTextValue">NullableMultilineTextValue-Steuerelement:</see> Dient zur Eingabe von mehrzeiligen Textinhalten in Formularen.
 </list></para>
 <para><list><see cref="T:ActiveDevelop.EntitiesFormsLib.NullableNumValue">NullableNumValue-Steuerelement:</see> Dient zur Eingabe formatierbaren numerischen Werten mit 
 Nachkommastelen oder berechenbaren Formeln in Formularen. Basiert auf dem Decimal-Datentyp.
 </list></para>
 <para><list><see cref="T:ActiveDevelop.EntitiesFormsLib.NullableIntValue">NullableIntValue-Steuerelement:</see> Dient zur Eingabe von formatierbaren ganzzahligen numerischen Werten 
 oder berechenbaren Formeln in Formularen. Basiert auf dem Integer-Datentyp.
 </list></para>
 <para><list><see cref="T:ActiveDevelop.EntitiesFormsLib.NullableDateValue">NullableDateValue-Steuerelement:</see> Dient zur Eingabe von formatierbaren Datumswerten 
 die alternativ auch aus einem Auswahlkalender ausgewählt werden können.
 </list></para>
 <para><list><see cref="T:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup">NullableValueRelationPopup-Steuerelement:</see> Dieses Steuerelement vereint 
 für Lookup-Table-Funktionalitäten die Darstellung von Listen als DataGridView und eine konfigurierbare Suche als ComboBox (Aufklappliste).
 </list></para>
 <para><b>HINWEIS:</b>Alle hier gelisteten Steuerelemente können - entweder durch Implementierung der 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.INullableValueControl">INullableValueControl-Schnittstelle</see> oder durch Erben von der 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2">NullableValueBase(Of NullableType, ControlType)-Klasse</see> Null-Werte verarbeiten, wie sie 
 im Umgang mit Werten aus Datenbanken häufig vorkommen. Jeder des Steuerelemente stellt zu diesem Zwecke eine NullValueString-Eigenschaft zur Verfügung, die 
 die Zeichenfolge bestimmt, mit der ein Null-Wert für die Anzeige aufbereitet wird. Standardmäßig lautet diese Zeichenfolge <bold>* - - - *</bold>. Damit hat 
 der Anwender selbst bei einem Textfeld die Möglichkeit, zwischen Null und einer leeren Zeichenfolge in einem Texteingabefeld 
 (<see cref="T:ActiveDevelop.EntitiesFormsLib.NullableTextValue">NullableTextValue-Steuerelement</see>) zu unterscheiden.
 </para>
 </remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.IsFormDirtyChanged">
 <summary>
 Wird ausgelöst, wenn sich der Inhalt eines Steuerelementes eines Formulars, 
 das eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet, geändert wird.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ValidationFailed">
 <summary>
 Wird ausgeführt, wenn die Validierung eines der Steuerelemente eines Formulars, 
 das eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet, fehlschlägt.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.BeforeFormValidating">
 <summary>
 Wird ausgelöst, bevor die Validierung der Steuerelemente, die durch eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet werden, beginnt.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.AfterFormValidated">
 <summary>
 Wird ausgelöst, nachdem die Validierung der Steuerelemente, die durch eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet werden, abgeschlossen ist.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ValueForControlReceiving">
 <summary>
 Wird nach Aufruf der <see cref="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ReceiveControlValues">ReceiveControlValues-Methode</see> für jedes Steuerelement ausgelöst, 
 das durch eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet wird, um 
 den aktuellen Wert des Steuerelementes abzufragen. DEBUG-Funktionalität.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.GetTargetObjectContext">
 <summary>
 Wird ausgelöst, wenn eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> für die Zuweisung 
 eines Relationsobjektes den aktuellen Objekt-Kontext benötigt, um die ausgewählte Entität der untergeordneten Tabelle dem entsprechenden 
 Feld zuzuweisen.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e">Ereignisparameter, mit deren Hilfe der Ziel-Objektkontext abgefragt werden kann.</param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.UnassignableValueDetected">
 <summary>
 Wird ausgelöst, wenn bei der Zuweisung der Value-Eigenschaft eines INullableValue Controls 
 ein Wert erkannt wurde, der zu einer Ausnahme führte.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e">Ereignisparameter, mit deren Hilfe der Ziel-Objektkontext abgefragt werden kann.</param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.Value">
 <summary>
 Wird ausgelöst, wenn eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> für die Zuweisung 
 eines Relationsobjektes den aktuellen Objekt-Kontext benötigt, um die ausgewählte Entität der untergeordneten Tabelle dem entsprechenden 
 Feld zuzuweisen.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e">EventArgs, mit deren Hilfe der Ziel-Objektkontext abgefragt werden kann.</param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.SaveChanges">
 <summary>
 Wird, wenn gesetzt aufgerufen, wenn die Änderungen im Formular gespeichert werden.
 </summary>
 <param name="par"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.#ctor">
 <summary>
 Erstellt eine neue Instanz dieser Klasse.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.LastSettings">
 <summary>
 Ermittelt oder bestimmt die letzten Einstellungen für die ADO-Entity-Genrierung.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ShouldSerializeLastSelection">
 <summary>
 Internal infrastructural use - don't use directly.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ResetLastSelection">
 <summary>
 Internal infrastructural use - don't use directly.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.TemplateStartPos">
 <summary>
 Bestimmt oder ermittelt das Offset für alle Steuerelemente automatischen Aufbauen der Maske auf Basis eines Datenquellen-Objektes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.TemplateLabelSize">
 <summary>
 Bestimmt oder ermittelt die Größe der Vorlage für Labels beim automatischen Aufbauen der Maske auf Basis eines Datenquellen-Objektes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.TemplateInputControlSize">
 <summary>
 Bestimmt oder ermittelt die Größe der Vorlage für Eingabefelder beim automatischen Aufbauen der Maske auf Basis eines Datenquellen-Objektes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.TemplateAnchor">
 <summary>
 Bestimmt oder ermittelt die Vorgabeeinstellungen der Anchor-Eigenschaft der Eingabefelder beim automatischen Aufbauen der Maske auf Basis eines Datenquellen-Objektes.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.DatatypeMapping">
 <summary>
 Internal infrastructural use - don't use directly.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.Site">
 <summary>
 Internal infrastructural use - don't use directly.
 </summary>
 <value></value>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.HostingForm">
 <summary>
 Bestimmt oder ermittelt das Parent-Form, das diesem FormToBusinessClassManager zugeordnet ist.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>HINWEIS: Diese Eigenschaft wird gesetzt, wenn Sie im Designer diese Komponente auf das Formular ziehen, und sie sollte 
 anschließend nicht mehr geändert werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.HostingUserControl">
 <summary>
 Bestimmt oder ermittelt das Parent-Form, das diesem FormToBusinessClassManager zugeordnet ist.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>HINWEIS: Diese Eigenschaft wird gesetzt, wenn Sie im Designer diese Komponente auf das Formular ziehen, und sie sollte 
 anschließend nicht mehr geändert werden.</remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ManagedControlValueChanged">
 <summary>
 Dieser Event wird jedesmal ausgelöst, sobald sich bei einem von dieser Instanz verwaltetes Control der Wert ändert.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.SupressIsDirtyEvent">
 <summary>
 Bestimmt oder ermittelt, ob das IsDirty-handling dieser Instanz nach außen weitergegeben werden soll, oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ReceiveControlValues">
 <summary>
 Bewirkt, dass für jedes Steuerelement, dass durch den FormToBusinessManager verwaltet wird, ein Ereignis ausgelöst wird, dass den Wert des Steuerelementes erhält.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.OnValueForControlReceiving(ActiveDevelop.EntitiesFormsLib.ValueForControlReceivingEventArgs)">
 <summary>
 Löst das ValueForControlReceiving-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.OnUnassignableValueDetected(ActiveDevelop.EntitiesFormsLib.UnassignableValueDetectedEventArgs)">
 <summary>
 Löst das UnassignableValueDetected-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.CancelButton">
 <summary>
 Bestimmt oder ermittelt die Schaltfläche auf dem Formular, der es erlaubt werden soll, 
 auch bei Fehlern im Formular den Focus zu erhalten, da sie zum Abbruch des Vorgangs führt.
 Die Validierung findet dabei - anders als bei CausesValidation = false - dennoch statt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.OnValidationFailed(ActiveDevelop.EntitiesFormsLib.ValidationFailedEventArgs)">
 <summary>
 Löst das ValidationFailed-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.OnIsFormDirtyChanged(ActiveDevelop.EntitiesFormsLib.IsFormDirtyChangedEventArgs)">
 <summary>
 Löst das IsFormDirtyChanged-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.IsFormDirty">
 <summary>
 Ermittelt, ob Änderungen an den Eingabefeldern des Formulars vorgenommen wurden.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ResetIsFormDirty(System.Boolean)">
 <summary>
 Setzt den 'Dirty'-Modus des Formulars zurück.
 </summary>
 <param name="NotifyPropertyChanged">Optionale Parameter, der bestimmt, ob im Bedarfsfall der 
 IsFormDirtyChanged-Event ausgelöst werden soll, falls der IsFormDirty-Status zuvor signalisiert war.</param>
 <remarks>Die Optionale Parameter wurde aus Abwärtskompatiblitätsgründen ergänzt.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.DataSource">
 <summary>
 Bestimmt oder ermittelt die Datenquelle für diesen FormToBusinessClassManager.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.AssignFieldsToNullableControls">
 <summary>
 Sorgt dafür, dass die Werte der Eigenschaften der DataSource den entsprechenden Feldern auf dem Formular zugeordnet werden.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.AssignFieldsToNullableControl(ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding)">
 <summary>
 Weist dem angegebenen NullableValueDataBinding-Steuerelement die entsprechende Eigenschaft der Datenquelle zu.
 </summary>
 <param name="c"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.CancelEdit">
 <summary>
 Versetzt den "geändert"-Status der Maske und aller betroffenen Steuerelemente wieder in den Ausgangsmodus.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.CancelEdit(System.Boolean)">
 <summary>
 Versetzt den "geändert"-Status der Maske und aller betroffenen Steuerelemente 
 wieder in Ausgangsmodus und stellt im Bedarfsfall die Ursprungswerte in den Steuerelementen wieder her.
 </summary>
 <param name="restoreData"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ValidateForm">
 <summary>
 Führt eine Validierung der entsprechenden Steuerelemente im Formular durch.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.OnBeforeFormValidating(System.ComponentModel.CancelEventArgs)">
 <summary>
 Löst das BeforeFormValidating-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.OnAfterFormValidated(ActiveDevelop.EntitiesFormsLib.AfterFormValidatedEventArgs)">
 <summary>
 Löst das AfterFormValidated-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.AssignFieldsFromNullableControls">
 <summary>
 Sorgt dafür, dass die Werte der entsprechenden Felder auf dem Formular wieder in die Eigenschaften der Datenquelle übertragen werden.
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.AssignFieldsFromNullableControl(ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding)">
 <summary>
 Weist den Wert des Steuerelementes der entsprechende Eigenschaft der DataSource zu.
 </summary>
 <param name="c"></param>
 <remarks>Voraussetzung dafür ist, dass die <see cref="P:ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding.DatafieldName"></see> des Steuerelementes gesetzt ist. 
 Dabei ist die Angabe verschachteleter Eigenschaften (Eigenschaftenpfade) durchaus möglich, also beispielsweise <b>Hauptadresse.Vorname</b>, falls die 
 DataSource über eine Eigenschaft <b>Hauptadresse</b> vom Typ <b>Adresse</b> verfügt, und der Adresse-Typ eine <b>Vorname</b>-Eigenschaft zur Verfügung stellt.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.OnGetTargetObjectContextEventArgs(ActiveDevelop.EntitiesFormsLib.GetTargetObjectContextEventArgs)">
 <summary>
 Löst das GetTargetObjectContext-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.NullableToObject``1(System.Nullable{``0})">
 <summary>
 Infrastructural. 
 </summary>
 <typeparam name="PrimType">Der zugrundeliegende Basistyp</typeparam>
 <param name="value">In seinen primitiven Typ zu konvertierender ADDBNullable</param>
 <returns>Object mit geboxtem primitivem Typ</returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ThrowExceptionOnMissingDataSource">
 <summary>
 Bestimmt oder ermittelt, ob eine Ausnahme ausgelöst werden soll, wenn keine Datenquelle bestimmt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.DatafieldLinkMode">
 <summary>
 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.CurrentEntityContext">
 <summary>
 Erlaubt das Speichern eines Objektcontexts zur Übergabe an das Formular und zum Zugriff über die Schnittstelle IFormToBusinessClassManager. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Diese Eigenschaft dient nur zur Übergabe eines ObjektContexts im Bedarfsfall, damit zum Beispiel mit einem selben Objektkontext
 auch Relations-Steuerelemente wie Tabellen, Listen oder ComboBoxen gefüllt werden können, bevor die Maske bearbeitet wird.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.DynamicEventHandlingList">
 <summary>
 Not implemented yet. Stellt eine Liste aller Ereignisse für die entsprechenden Steuerelemente im Formular zur Verfügung, die durch den FTBCM verwaltet werden können.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.EntityObjectSettings">
 <summary>
 Diese Klasse ist ein Zwitter. Wird vom FormToBuisnessclassManager erstellt, sind alle Werte gesetzt. 
 Wird sie jedoch durch den Deserialisierer des Designers erstellt sind nur die *Namen-Felder belegt
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.EntityObjectSettings.#ctor">
 <summary>
 ACHTUNG: Nicht verwenden, wird nur für die Deseriealisierung benötigt
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.EntityObjectSettings.#ctor(System.Windows.Forms.Control,System.Reflection.Assembly,System.Type,System.Collections.Generic.List{ActiveDevelop.EntitiesFormsLib.PropertyCheckBoxItemController})">
 <summary>
 Für die Verwendung vom Designer
 </summary>
 <param name="parentControl"></param>
 <param name="assemblyWithEntityObject"></param>
 <param name="entityObjectType"></param>
 <param name="listOfFields"></param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.DatafieldLinkModes">
 <summary>
 Einstellungen, die bestimmen, wie die Daten aus den Steuerelementen in den Datenquellen gelangen.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.DatafieldLinkModes.Manual">
 <summary>
 Das Übertragen der Werte von den Datenfeldern zur Datenquelle und umgekehrt wird mit den Methoden 
 <see cref="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.AssignFieldsFromNullableControls">AssignFieldsFromNullableControls</see> sowie 
 <see cref="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.AssignFieldsToNullableControls">AssignFieldsToNullableControls</see> durchgeführt.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.DatafieldLinkModes.Automatic">
 <summary>
 Das Übertragen der Werte von den Datenfeldern zur Datenquelle passiert automatisch, sobald das ValueChanged-Ereignis eingetreten ist.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.DatafieldLinkModes.SelectedByDatafield">
 <summary>
 Das Übertragen der Werte von den Datenfeldern zur Datenquelle passiert automatisch nur für die Steuerelemente, deren 
 <see cref="P:ActiveDevelop.EntitiesFormsLib.IAssignableFormToBusinessClassManager.SelectedForProcessing">SelectedForProcessing-Eigenschaft</see> auf true gesetzt ist.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManagerExtender">
 <summary>
 Stellt Extender-Methoden für die Zusammenarbeit mit der 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> und WindowsForms-Formularen bereit.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManagerExtender.AddNew``1(ActiveDevelop.EntitiesFormsLib.IFormToBusinessClassManagerHost)">
 <summary>
 Ruft ein Formular auf, das eine FormToBusinessClassManager-Komponente und entsprechende Eingabefelder enthält, 
 um aus den automatisch validierten Benutzereingaben eine neue Business-Objekt-Instanz zu ermitteln.
 </summary>
 <typeparam name="BusinessClassType">Der Typ der Business-Klasse (muss instanziierbar sein), der aus dem Formular erstellt werden soll.</typeparam>
 <param name="BusinessClassForm">Das Formular, dessen Eingabefelderinhalte die Eigenschaften der neuen Business-Klassenobjekt-Instanz definieren.</param>
 <returns>Eine Instanz vom Typ BusinessClassType, </returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManagerExtender.Edit``1(ActiveDevelop.EntitiesFormsLib.IFormToBusinessClassManagerHost,``0)">
 <summary>
 Ruft ein Formular auf, dass eine FormToBusinessClassManager-Komponente und entsprechende Eingabefelder enthält, die mit den Eigenschaftenwerten der übergebenen Business-Objekt-Instanz befüllt werden, 
 um aus den automatisch validierten Benutzereingaben eine neue Business-Objekt-Instanz zu ermitteln.
 </summary>
 <typeparam name="BusinessClassType"></typeparam>
 <param name="BusinessClassForm"></param>
 <param name="Entity"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IFormToBusinessClassManagerHost">
 <summary>
 Kennzeichnet ein Formular, dass mit einer Instanz einer <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet wird.
 </summary>
 <remarks>Diese Schnittstelle muss in ein Formular eingebunden werden, damit Extender-Methoden des 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManagerExtender">FormToBusinessClassManagerExtender-Modules</see> verwendet werden können.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IFormToBusinessClassManagerHost.FormToBusinessClassManager">
 <summary>
 Ermittelt die <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see>, 
 mit der dieses Formular seine Business-Klasse verwaltet.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IFormToBusinessClassManagerHost.TargetObjectContext">
 <summary>
 Bestimmt oder ermittelt den Objekt-Kontext, der benötigt wird, um Navigation-Properties aus DataFieldName-Eigenschaften zu setzen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IsFormDirtyChangedEventArgs">
 <summary>
 Beinhaltet das Steuerelement, das dazu geführt hat, dass eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> 
 das <see cref="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.IsFormDirtyChanged">IsFormDirtyChanged-Ereignis</see> ausgelöst hat.
 </summary>
 <remarks>Das <see cref="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.IsFormDirtyChanged">IsFormDirtyChanged-Ereignis</see> wird dann ausgelöst, wenn 
 der Inhalt eines der Eingabefelder eines Formulars, das durch die 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet wird, vom Anwender verändert wurde, sodass 
 der Entwickler entsprechende Maßnahmen ergreifen kann, um dem Anwender anzuzeigen, dass Änderungen am Formular noch gespeichert werden müssen.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IsFormDirtyChangedEventArgs.#ctor(System.Object)">
 <summary>
 Erstellt eine neue Instanz dieser Klasse und bestimmt das Steuerelement, das zum Auslösen des Ereignisses geführt hat.
 </summary>
 <param name="causingControl"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IsFormDirtyChangedEventArgs.CausingControl">
 <summary>
 Steuerelement, das zum Auslösen des Ereignisses geführt hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.GetTargetObjectContextEventArgs">
 <summary>
 Wird für das Ermitteln des Ziel-Objektkontextes verwendet, wenn eine 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> 
 das <see cref="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.GetTargetObjectContext">IsFormDirtyChanged-Ereignis</see> ausgelöst hat.
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GetTargetObjectContextEventArgs.#ctor">
 <summary>
 Erstellt eine neue Instanz dieser Klasse.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GetTargetObjectContextEventArgs.#ctor(System.Data.Objects.ObjectContext)">
 <summary>
 Erstellt eine neue Instanz dieser Klasse und definiert den Objekt-Context, der für das Schreiben in die Zielentität erfordelich ist.
 </summary>
 <param name="targetObjectContext"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.GetTargetObjectContextEventArgs.TargetObjectContext">
 <summary>
 Steuerelement, das zum Auslösen des Ereignisses geführt hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ValueForControlReceivingEventArgs">
 <summary>
 Kapselt die Ereignisparameter für das <see cref="E:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager.ValueForControlReceiving">ValueForControlReceiving-Ereignis</see>.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ValueForControlReceivingEventArgs.BindingControl">
 <summary>
 Steuerelement, dass den Wert zur Verfügung stellt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ValueForControlReceivingEventArgs.Value">
 <summary>
 Aktueller Wert der Value-Eigenschaft des Steuerelements.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.PropertyBindingNodeDefinition">
 <summary>
 Wrapper class around Binding Property for presentation in MVVM assignment dialog
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PropertyBindingNodeDefinition.SubProperties">
 <summary>
 SubProperties of a custom type
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PropertyBindingNodeDefinition.Description">
 <summary>
 Description for UI-Presentation
 </summary>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.PropertyBindingNodeDefinition.ToGenericTypeString(System.Type)">
 <summary>
 Generates the generic type list as String with full type params
 </summary>
 <param name="t"></param>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PropertyBindingNodeDefinition.Binding">
 <summary>
 Inner BindingProperty-Instance
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PropertyBindingNodeDefinition.PropertyName">
 <summary>
 Small Propertyname (without Path)
 </summary>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.PropertyBindingNodeDefinition.Equals(System.Object)">
 <summary>
 Overrides Equals for delegation to BindingProperty-Equals
 </summary>
 <param name="obj"></param>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.PropertyBindingNodeDefinition.GetHashCode">
 <summary>
 Overrides GetHashCode for delegation to BindingProperty-Equals
 </summary>
 <returns></returns>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ViewModelPropertyComboBox">
 <summary>
 Expansion of NullableValueComboBox with PropertyBinding-Context
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ViewModelPropertyComboBox.SelectedNode">
 <summary>
 The current selected Binding-Node
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ViewModelPropertyComboBox.NodesSource">
 <summary>
 The DataSource (Flat-ViewModel-Properties) for the Binding-Nodes
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PolarCoordinate.Cartesian">
 <summary>
 Returns the polar coordinate as Cartesian coordinate.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PolarCoordinate.Length_X">
 <summary>
 Length of X Radius.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PolarCoordinate.Length_Y">
 <summary>
 Length of Y-Radius.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PolarCoordinate.Angle">
 <summary>
 The Angle.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.PolarCoordinate.Offset">
 <summary>
 Offset by which the coordinate is moved to the right and to the bottom 
 during the conversion into the Cartesian system.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.PolarCoordinate.recalculate">
 <summary>
 Internal method for the recalculation of the Cartesian coordinates after a property change.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ShapedButton">
 <summary>
 EXPERIMENTAL, not ready for deployment.
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.RequestFocusEventArgs">
 <summary>
 Stellt Daten für das RequestFocus-Ereignis zur Verfügung, die darüber Aufschluss geben, ob das Fokussieren zum Erfolg führte oder nicht.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IGroupable.GroupName">
 <summary>
 Bestimmt oder ermittelt einen Gruppierungsnamen, um eine Möglichkeit zur Verfügung zu stellen, zentral eine Reihe von Steuerelementen zu steuern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IAssignableFormToBusinessClassManager">
 <summary>
 Definiert eine Komponente, die einem <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see> zugewiesen werden kann.
 </summary>
 <remarks>Steuerelemente, die einem <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see> zugewiesen werden können, 
 müssen diese Schnittstelle implementieren.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IAssignableFormToBusinessClassManager.AssignedManagerControl">
 <summary>
 Bestimmt oder ermittelt die <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz, dem diese Komponente zugeordnet werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IAssignableFormToBusinessClassManager.ProcessingPriority">
 <summary>
 Bestimmt oder ermittelt eine Priorität, die bestimmt, in welcher Reihenfolge eine 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz Komponenten verarbeitet. (Höherer Wert --> frühere Verarbeitung.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IAssignableFormToBusinessClassManager.SelectedForProcessing">
 <summary>
 Bestimmt oder ermittelt, ob eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz 
 diese Komponente verarbeiten soll, wenn seine AutoUpdateFields-Eigenschaft auf ProcessSelected gesetzt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.IIsDirtyChangedAware.IsDirtyChanged">
 <summary>
 Ereignis, das ausgelöst wird, wenn sich der Wert des Steuerelementes geändert hat, und sein Inhalt deswegen gespeichert werden sollte.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IIsDirtyChangedAware.IsDirty">
 <summary>
 Zeigt an, ob der Wert des Steuerelementes seit dem letzten Speichern geändert wurde, und sein Inhalt deswegen wieder zum Speichern ansteht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IIsDirtyChangedAware.ResetIsDirty">
 <summary>
 Löscht den Zustandsspeicher, der angibt, ob ein Steuerelement seit dem letzten Speichern geändert wurde.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IKeyFieldProvider">
 <summary>
 Schreibt das Vorhandensein einer IsKeyField-Eigenschaft vor, die Steuerelemente als besondere Schlüsselfelder markiert, mit
 denen Datensätze ausgewählt werden und nicht etwa angezeigte, zum Datensatz zugehörige Daten editiert werden.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.IKeyFieldProvider.IsKeyField">
 <summary>
 Bestimmt oder ermittelt, ob es sich bei einem Eingabefeld um ein Key-Feld handelt oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IRecognizableComponent">
 <summary>
 Implementiert eine GUID-Eigenschaft für eine Komponente, sodass diese eindeutig indentifiziert werden kann.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IPermissionManageableComponent">
 <summary>
 Definiert einen Satz von Eigenschaften für eine Komponente, sodass sie eine grundlegenden Rechteverwaltung untergeordnet werden kann.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IPermissionManageableUIContentElement">
 <summary>
 Definiert eine Komponente als inhaltspräsentierende Komponente, sodass ihr Inhalt (Content) rechtemäßig geregelt werden kann.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IPermissionManageableUIControlElement">
 <summary>
 Definiert eine Komponente als befehlsauslösende Komponente.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.PermissionManageableUIElementParams">
 <summary>
 Konzeptionell - wird derzeitig noch nicht verwendet.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.PermissionManageableControlInfo">
 <summary>
 Konzeptionell - wird derzeitig noch nicht verwendet.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.HasPermissionManageableUIElementsAttribute">
 <summary>
 Konzeptionell - wird derzeitig noch nicht verwendet.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IUpdatableInfoControl">
 <summary>
 Definiert Methoden für Steuerelemente, deren Inhalt von einer 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> lediglich zur Anzeige aktualisiert wird.
 </summary>
 <remarks>FUNTKIONSBESCHREIBUNG ÜBERPRÜFEN/ERGÄNZEN!</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IValidatable">
 <summary>
 Ermöglicht einer an den FormsToBusiness-Manager gebundenen Business-Class-Objektes das selbständige Validieren, wenn das Business-Objekt dieses Interface einbindet.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableOptionButton">
 <summary>
 RadioButton based Control, which can handle null values, provides a Value Property for controlling 
 its visual state and additional infrastructure so it is compatible with other Nullable controls.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.DatafieldDescription">
 <summary>
 Bestimmt oder Ermittelt den ausgeschriebenen/lolkalisierten Namen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Wenn ein bindbares Feld in einem Tabellenschema beispielsweise den Namen ZipCity trägt, könnte 
 diese Eigenschaft "Postleitzahl/Ort" lauten. Diese Eigenschaft spiegelt also die Bezeichnung des 
 Datenfeldnamens in echter Sprache wider, sodass sie verständlich für den Endanwender wird. Bei automatisierter 
 Validierung einer Eingabemaske kann dann in der UI mit diesen Namen Bezug auf das entsprechende 
 Datenfeld genommen werden. Die Bezeichnung einer Datenfeldes in der UI beispielsweise durch ein Label sollte 
 daher genauso lauten, wie diese Eigenschaft. Diese Eigenschaft sollte bei Verwendung von automatischer 
 Validierung auch auf jedenfall gesetzt sein, weil anderenfalls eine Ausnahme ausgelöst werden kann.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.DatafieldName">
 <summary>
 Bestimmt oder Ermittelt den Datenquellen-Feldnamen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.NullValueMessage">
 <summary>
 Bestimmt oder Ermittelt den Text der ausgegeben werden soll, wenn der Anwender versucht ein Feld zu verlassen, 
 dass keine Eingaben enthält. Ist der Text nicht definiert, kann das Feld verlassen werden.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Mit dieser Eigenschaft bestimmen Sie einerseits, ob ein Eingabefeld Null-Werte enthalten darf oder nicht, und 
 andererseits wird gleichzeitig festgelegt, welche Fehlermeldung für den Benutzer ausgegeben werden soll, wenn er 
 versucht, ein Eingabefeld zu verlassen, das keine Null-Werte akzeptiert, er aber keinen Wert eingegeben hat.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.Value">
 <summary>
 Bestimmt oder ermittelt den Wert, den dieses Steuerelement repräsentiert.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.IsDirty">
 <summary>
 Ermittelt ob sich der Value-Wert seit der letzten (ersten) Zuweisung geändert hat, und ein Datensatz deswegen aktualisiert werden muss.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.IsLoading">
 <summary>
 Bestimmt oder ermittelt, ob die Maske, die das Steuerelement enthält, gerade die Steuerelemente mit Daten befüllt, oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Das Setzen dieser Eigenschaft kann nur über die Schnittstelle (in der Regel von der Maskensteuerung) vorgenommen werden.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.ResetIsDirty">
 <summary>
 Setzt den Status zurück, dass dieses Feld vom Anwender geändert wurde, und sein Value in der Datenquelle aktualisiert werden sollte.
 </summary>
 <remarks>Diese Methode wird von der Infrastruktur verwendet, und sollte nicht direkt angewendet werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.AssignedManagerComponent">
 <summary>
 Bestimmt oder ermittelt die FormToBusinessClassManager-Komponente, die die Verwaltung dieses NullableValue-Controls übernimmt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.ProcessingPriority">
 <summary>
 Bestimmt oder ermittelt einen Prioritätsindex, der bestimmt, in welcher Reihenfolge 
 das Steuerelement vom FormsToBusinessClass-Manager verarbeitet wird (Höhere Nummer, frühere Verarbeitung.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.IsManageable">
 <summary>
 Bestimmt oder ermittelt, ob dieses Steuerelement rechtemäßig von einem externen Controler verwaltet werden kann oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.ContentPresentPermission">
 <summary>
 Bestimmt oder ermittelt, in welcher Form eine Komponente auf Grund von Rechten oder Lizenzausbaustufen verwendet werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.UIGuid">
 <summary>
 Bestimmt oder ermittelt eine eindeutige GUID für das Steuerelement, um beispielsweise Rechte-Mappings in Datenbanken aufzubauen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Dass diese Eigenschaft UIGuid und nicht PermissionGuid lautet, hat historische Gründe. Diese Eigenschaft implementiert 
 IPermissionManageableUIContentElement.PermissionGuid.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.PermissionReason">
 <summary>
 Bestimmt oder ermittelt einen Grund, weswegen ein Benutzer nur eingeschränkten Zugriff auf das Steuerelement hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.SelectedForProcessing">
 <summary>
 Bestimmt oder ermittelt, ob eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz 
 diese Komponente verarbeiten soll, wenn seine AutoUpdateFields-Eigenschaft auf ProcessSelected gesetzt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.GroupName">
 <summary>
 Bestimmt oder ermittelt einen Gruppierungsnamen, um eine Möglichkeit zur Verfügung zu stellen, zentral eine Reihe von Steuerelementen zu steuern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.IsKeyField">
 <summary>
 Bestimmt oder ermittelt, ob es sich bei einem Eingabefeld um ein Key-Feld handelt oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableOptionButton.ImitateTabByPageKeys">
 <summary>
 Returns or sets if the user can cycle between entry fields with Page up and Page down in addition to Tab and Shift+Tab.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableDataGridView.ItemsSourceType">
 <summary>
 Bestimmt oder ermittelt, welchen Typ ViewModel die MVVMManager-Komponente später zur Laufzeit verarbeiten soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Diese Eigenschaft ist wichtig zu setzen, BEVOR Zuweisungen über die PropertyBindings- bzw. EventBindings-Eigenschaften 
 der entsprechenden Steuerelemente in der View gemacht werden können. Anhand dieser Eigenschaft erstellt die UI 
 dieser Komponente eine Liste der bindbaren Eigenschaften und Ereignisse des ViewModels, und bietet diese im Dialog an, der 
 aufgerufen wird, wenn im Eigenschaftenfenster auf die ...-Schaltfläche für die PropertyBindings-Eigenschaft bzw. 
 der EventBindings-Eigenschaft geklickt wird.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableControlManager">
 <summary>
 Zentraler Manager der Standardwerte für alle NullableControl-Steuerelemente, der per Ereignis bindbar ist und damit eigene Standardwerte ermöglicht.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableMaskTextValue">
 <summary>
 CONCEPTIONAL, DO NOT USE, YET.
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableMaskTextValue.MaxLengthAttributeName">
 <summary>
 Bestimmt oder ermittelt, ob eine FormsToBusinessManager-Instanz die MaxLength-Eigenschaft zur Laufzeit auf Basis des Business-Objektes setzen darf.
 </summary>
 <value>Name des Attributs, dass über der zu bindenden Eigenschaft stehen muss, dass die Länge des Strings angibt.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableMaskTextValue.EliminateWhitespacesOnAssignment">
 <summary>
 Bestimmt oder ermittelt, ob WhiteSpaces (Füllzeichen) die vor oder hinter dem eigentlichen Text stehen, bei einer Zuweisung eliminiert werden sollen.
 </summary>
 <value>True, wenn WhiteSpaces bei der Zuweisung eliminiert werden sollen.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValueLabel">
 <summary>
 Steuerelement zur Erfassungs von Texten (Zeichenketten), das überdies Null-Werte verarbeitet, 
 eine vereinheitlichende Value-Eigenschaft bietet, 
 Funktionen für Rechteverwaltung zur Verfügung stellt und von einer 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet werden kann.
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueLabel.EliminateWhitespacesOnAssignment">
 <summary>
 Bestimmt oder ermittelt, ob WhiteSpaces (Füllzeichen) die vor oder hinter dem eigentlichen Text stehen, bei einer Zuweisung eliminiert werden sollen.
 </summary>
 <value>True, wenn WhiteSpaces bei der Zuweisung eliminiert werden sollen.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueLabel.Alignment">
 <summary>
 Bestimmt oder ermittelt, wie der Text innerhalb des Controls formatiert werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValuePrimalUpDownControl">
 <summary>
 Infrastruktur-Klasse. Support-Control für das <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableIntValue">NullableIntValue-Steuerelement</see>.
 </summary>
 <remarks>Sie können dieses Steuerelement direkt verwenden, sein Einsatz ist aber in erster Linie als Basis für das
 <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableIntValue">NullableIntValue-Steuerelement</see> gedacht.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.INullableValueControl">
 <summary>
 Definiert die Eigenschaft, die ein NullableValueControl-Steuerelement aufweisen muss.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueControl.Value">
 <summary>
 Bestimmt oder ermittelt den Wert, den ein Steuerelement aufweist.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueControl.NullValueMessage">
 <summary>
 Bestimmt oder ermittelt einen Meldungstext, der beispielsweise zur Darstellung einer Fehlermeldung verwendet wird, 
 wenn das Steuerelement einen Null-Wert aufweist, aber zu einem bestimmten Zeitpunkt keinen solchen haben darf oder soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.INullableValueControl.RequestValidationFailedReaction">
 <summary>
 Ereignis, das ausgelöst wird, wenn die Validierung des Steuerelements fehlgeschlagen ist, und es die weitere Vorgehensweise erfragt.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueControl.ExceptionBalloonDuration">
 <summary>
 Bestimmt die Dauer in Millisekunden, die ein Baloontip im Falle einer Fehlermeldung angezeigt wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableIntValue">
 <summary>
 Allows editing of integer values, which can be retrieved/set over the Value property, 
 and which can handle Nothing (null in CSharp) on top.
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableIntValue.HasThousandsSeperator">
 <summary>
 Bestimmt oder ermittelt, ob das Tausendertrennzeichen bei Zahlen über 999 (unter -999) angezeigt werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableIntValue.Increment">
 <summary>
 Bestimmt oder ermittelt, um welchen Wert der angegebene Wert mit den Up-/Down-Schaltflächen erhöht oder verkleinert werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableIntValue.AllowFormular">
 <summary>
 Bestimmt oder ermittelt, ob anstelle von Werten auch mathematische, berechbare Ausdrücke eingegeben werden können (Formeln).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableIntValue.MaxValueExceededMessage">
 <summary>
 Bestimmt oder ermittelt den Fehlertext, der ausgegebenen wird, wenn der Wert des Steuerelementes den Maximalwert überschreitet.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableIntValue.MinValueExceededMessage">
 <summary>
 Bestimmt oder ermittelt den Fehlertext, der ausgegebenen wird, wenn der Wert des Steuerelementes den Minimalwert unterschreitet.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableIntValue.MaxValue">
 <summary>
 Bestimmt oder ermittelt den Maximalwert, der in diesem Steuerelement erfasst werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableIntValue.MinValue">
 <summary>
 Bestimmt oder ermittelt den Minimalwert, der in diesem Steuerelement erfasst werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableIntValue.OnValueValidating(ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs{System.Nullable{System.Int32}})">
 <summary>
 Behandelt die Beachtung Min-/und Max-Eigenschaften bei der Wertevalidierung.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableMultilineTextValue">
 <summary>
 Steuerelement zur Erfassungs von mehrzeiligen Texten (Zeichenketten), das überdies Null-Werte verarbeitet, 
 eine vereinheitlichende Value-Eigenschaft bietet, 
 Funktionen für Rechteverwaltung zur Verfügung stellt und von einer 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet werden kann.
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs`1">
 <summary>
 Stellt Daten zur Verfügung, wenn das ValueValidate-Ereignis von NullableValueBase-abgeleiteten Steuerelementen ausgelöst wird.
 </summary>
 <typeparam name="NullableType"></typeparam>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs`1.#ctor(`0)">
 <summary>
 Erstellt eine Instanz dieser Klasse und bestimmt den Wert, den es zu validieren gilt.
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs`1.#ctor(`0,System.String)">
 <summary>
 Erstellt eine Instanz dieser Klasse und bestimmt den Wert, den es zu validieren gilt.
 </summary>
 <param name="value"></param>
 <param name="validationFailedUIMessage"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs`1.Value">
 <summary>
 Bestimmt oder ermittelt den Wert, der validiert werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs`1.ValidationFailedUIMessage">
 <summary>
 Bestimmt oder ermittelt einen Text, der für die Benutzeroberflächenanzeige bestimmt ist, 
 und der aussagt, warum die Validierung fehlgeschlagen ist.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.CombinedValueInfoLabel">
 <summary>
 Steuerelement, mit dessen Hilfe ein NullableValue zur Anzeige als Text mit 
 Formatierungsoptionen gebracht werden kann. Derzeit KEINE getestete Mvvm-Unterstützung!!
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.CombinedValueInfoLabel.DisplayMember">
 <summary>
 Bestimmt oder ermittelt den in der TextBox dieses Steuerelementes angezeigten Wert, 
 nachdem ein Elemente in der Liste ausgewählt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks><para>Der DisplayMember wird aus mindestens zwei Teilen als Zeichenfolge angegeben werden, 
 die durch Komma getrennt werden. Der erste Teil - in Anführungszeichen - definiert die Formatierung, 
 der zweite Teil, welche Eigenschaften der Datenquelle angezeigt werden sollen. 
 Eigenschaftennamen werden in geschwifte Klammern gesetzt. Das ist wichtig, um zu einem späteren Zeitpunkt 
 hier noch um Formelauswertungsfunktioanlitäten zu erweitern.
 </para>
 <para>Beispiel: Kundennummer 6-stellig und Betrag mit zwei Nachkomma, Tausendertrennzeichen und Euro-Symbol darstellen:</para>
 <code>
 Me.DisplayMember = """{0:000000}: {1:#,##0.00} €"", {Kundennummer},{Betrag}"
 </code>
 <para>Beispiel: Kundennummer 6-stellig, mit anschließendem Doppelpüunkt, Leerzeichen,
 dann Nachname, Komma und Vorname:</para>
 <code>
 Me.DisplayMember = """{0:000000}: {1}, {2}"", {Kundennummer},{Nachname},{Vorname}"
 </code>
 </remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.CombinedValueInfoLabel.AssignedManagerControl">
 <summary>
 Bestimmt oder ermittelt die FormToBusinessClassManager-Komponente, die die Verwaltung dieses NullableValue-Controls übernimmt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.CombinedValueInfoLabel.UpdateDisplayData(System.Object)">
 <summary>
 Aktualisiert die Darstellung.
 </summary>
 <param name="Datasource"></param>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.CombinedValueInfoLabel.ProcessingPriority">
 <summary>
 Bestimmt oder ermittelt einen Prioritätsindex, der bestimmt, in welcher Reihenfolge 
 das Steuerelement vom FormsToBusinessClass-Manager verarbeitet wird (Höhere Nummer, frühere Verarbeitung.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.CombinedValueInfoLabel.SelectedForProcessing">
 <summary>
 Bestimmt oder ermittelt, ob eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz 
 diese Komponente verarbeiten soll, wenn seine AutoUpdateFields-Eigenschaft auf ProcessSelected gesetzt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.CombinedValueInfoLabel.GroupName">
 <summary>
 Bestimmt oder ermittelt einen Gruppierungsnamen, um eine Möglichkeit zur Verfügung zu stellen, zentral eine Reihe von Steuerelementen zu steuern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.PopupClosingReason.AppClicked">
 <summary>
 Es wurde auf einen anderen Teil der Oberfläche geklickt, was zum Schließen des Popup führte.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.PopupClosingReason.AppFocusChanged">
 <summary>
 Die Anwendung wurde in den Hintergrund gestellt, weil zu einer anderen Anwendung gewechselt wurde.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.PopupClosingReason.CloseCalled">
 <summary>
 Die Popup-Close-Methode wurde aufgerufen.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.PopupClosingReason.ContentClicked">
 <summary>
 Es wurde in den geöffneten Content des Popups geklickt.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.PopupClosingReason.Keyboard">
 <summary>
 Popup wurde durch eine entsprechende Keyboard-Funktionalität geschlossen.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.PopupClosingReason.PopupOpenerClicked">
 <summary>
 Popup wurde mit dem DropDown-Button geschlossen.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.PopupClosingReason.ResetButtonClicked">
 <summary>
 Ein Reset-Button innerhalb des geöffneten Popups wurde geklickt, was das Popup anwies, sich zu schließen.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.PopupClosingReason.MiscPopupButtonClicked">
 <summary>
 Ein anderer Button des Popups in der gleichen Ebene wie der Popup-Opener/Closer-Button wurde angeklickt.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel">
 <summary>
 Stellt ein Control bereit mit dem Text farbig ausgegeben werden kann
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.DefaultColoredElementCapacity">
 <summary>
 liefert zurück oder legt fest, wieviel ColoredElemente in einer neuen Instanz von ColoredTextBox verwendet werden sollen.
 </summary>
 <value>Anzahl ALLER in der ColoredTextBox nutzbaren ColoredElemente</value>
 <returns></returns>
 <remarks>siehe auch DefaultLineCapacity.
 sind keine freien Elemente mehr vorhanden, wird die erste Zeile der ColoredTextBox gelöscht und die so gewonnenen ColoredElemente wiederverwendet.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.DefaultLineCapacity">
 <summary>
 liefert zurück oder legt fest, wieviele Zeilen in der ColoredTextBox verwendet werden können, ohne eine Zeile löschen zu müssen.
 </summary>
 <value>Anzahl der Zeilen, nach denen die ersten Zeilen wieder gelöscht werden</value>
 <returns></returns>
 <remarks>siehe auch DefaultColoredElementCapacity.
 sind keine freien Zeilen mehr vorhanden, wird die erste Zeile gelöscht.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.#ctor">
 <summary>
 Initialisiert die Instanz.
 für ColoredElementCapacity und LineCapacity werden die jeweiligen statischen DefaultXXX Werte verwendet.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.#ctor(System.Int32,System.Int32)">
 <summary>
 Initialisiert die Instanz.
 Die ColoredElementCapacity und LineCapacity können hier explizit angegeben werden (siehe im Gegensatz auch die jeweiligen statischen DefaultXXX Werte).
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.CurrentDrawFont">
 <summary>
 Ruft den aktuellen Font für die WriteLine Methode ab oder liegt diesen fest
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.CurrentDrawColor">
 <summary>
 Legt die aktuelle Farbe für die WriteLine Methode ab oder liegt diese fest
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.WriteLine(System.String)">
 <summary>
 Gibt eine Textzeile in der per CurrentDrawColor festgelegten Farbe und mit der per CurrentDrawFont festgelegten Font aus
 </summary>
 <param name="msg"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ViewWidth">
 <summary>
 Ruft die Weite des Views ab oder legt diese fest
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ViewHeight">
 <summary>
 Ruft die Höhe des Views ab oder legt diese fest
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.Clear">
 <summary>
 Löscht alle Einträge der Textbox
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ViewScroll(System.Object,System.Windows.Forms.ScrollEventArgs)">
 <summary>
 ViewScroll wird aufgrufen wenn vertikal oder horizontal gescrollt wird
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.AutoScrollToEnd">
 <summary>
 Mit AutoScrollToEnd wird festgelegt, ob Automatisch bei einem WriteLine der View zum Ende gescrollt werden soll
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.DeleteFirstElementOnNoFreeElement">
 <summary>
 Liefert oder legt fest, ob bei "Platzproblemen" (siehe Remark) die erste Zeile gelöscht werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 Falls kein Element mehr frei ist, wird die jeweils erste Zeile der Ausgabe gelöscht
 Dieses kann der Fall sein, falls der LineManager keine freien Zeilen mehr hat
 oder der ColoredElementManager keine freien Einträge mehr liefern kann
 </remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColoredTextElementManager">
 <summary>
 Ein Viewpanel stellt den farbigen Text dar 
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement">
 <summary>
 Ein ColorTextElement stellt einen einfarbigen Text dar
 Zudem kann für das ColorTextElement der Font festgelegt werden
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.#ctor">
 <summary>
 Konstuktor
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.Init(System.Drawing.Point,System.Drawing.Font,System.Drawing.Color,System.String)">
 <summary>
 
 </summary>
 <param name="pos">virtuelle Position</param>
 <param name="fnt">zu verwendender Font </param>
 <param name="col">zu verwendende Farbe</param>
 <param name="msg">Text des Elements</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.Position">
 <summary>
 ruft die Position des Textes ab
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.Font">
 <summary>
 ruft den Font des Textes ab
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.Message">
 <summary>
 ruft den eigentlichen Text ab
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.Color">
 <summary>
 Ruft die Farbe des Textes ab
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.Measure">
 <summary>
 Ruft die Größe des Textes in Pixeln ab (Liefert ein SizeF Objekt)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.IsMeasureSet">
 <summary>
 Prüft ob schon ein Measure-Wert gesetzt wurde
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement.CharPositions">
 <summary>
 Liefert eine List(of Integer), die die Endposition eines Buchstabens in Pixeln beinhalten
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.LineElement">
 <summary>
 Ein LineElement stellt eine Zeile in der ColorTextBox dar
 Sie kann aus mehreren ColorTextElement(en) bestehen
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.LineElement.#ctor">
 <summary>
 Konstruktor 
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.LineElement.Init(System.Int32,System.Collections.Generic.List{ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ColorTextElement})">
 <summary>
 
 </summary>
 <param name="y">Y Position der Zeile</param>
 <param name="elems">Liste der ColorTextElemente</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.LineElement.Y">
 <summary>
 Ruft die Y Position der Zeile ab
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.LineElement.Elements">
 <summary>
 Liefert eine Liste von ColorTextElement(en)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ViewPanel.#ctor">
 <summary>
 Konstruktor
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ViewPanel.OnPaint(System.Windows.Forms.PaintEventArgs)">
 <summary>
 Den Text per OnPaint ausgeben 
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ViewPanel.OnPaintBackground(System.Windows.Forms.PaintEventArgs)">
 <summary>
 OnPaintBackground soll nichts machen
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.ViewPanel.ViewSizeChanged(System.Object,System.EventArgs)">
 <summary>
 Bei einer Größenänderung des ViewPanels muß der Inhalt neu gezeichnet werden
 Ebenso müssen die Scrollbars angepasst werden
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.WriterStructureManager">
 <summary>
 Hilfstruktur, um die WriteMethode mit einer Queue zu verwalten
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColoredTextPanel.WriterStructure">
 <summary>
 Hilfstruktur, um die WriteMethode mit einer Queue zu verwalten
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.SimplePopupContent">
 <summary>
 Leeres User-Control als Platzhalter für den Popup-Content.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.TransparentControlBase">
 <summary>
 Experimental, not ready to deploy.
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.TransparentControlBase.Lighter(System.Drawing.Color,System.Single)">
 <summary>
 Erhöht die Helligkeit der angegebenenen Farbe (Helligkeitsbereich gesamt: 0-1)
 </summary>
 <param name="color"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.TransparentControlBase.Darker(System.Drawing.Color,System.Single)">
 <summary>
 Vermindert die Helligkeit der angegebenen Farbe (Helligkeitsbereich gesamt: 0-1)
 </summary>
 <param name="color"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.INullableValuePrimalControl">
 <summary>
 Definiert die Funktionalitäten für ein Steuerelement, damit als Basis eines neuen 
 von <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2">NullableValueBase(Of NullableType, ControlType)</see> vererbten Steuerelementes
  verwendet werden kann.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ITextBoxBasedControl">
 <summary>
 Kennzeichnet ein Steuerelement als ein TextBox-Steuerelement basierendes.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BindableDataGridView">
 <summary>
 Stellt Funktionalitäten bereit für das Anzeigen von Daten in einer DataGridView bereit, die gleichzeitig an 
 mit der <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Komponente verwaltbar sind.
 </summary>
 <remarks>Diese Komponente kann direkt verwendet werden, ist aber eigentlich eine Subkomponente des 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup">NullableValueRelationPopup-Steuerelementes.</see></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.GetColumnSchema">
 <summary>
 Wird ausgelöst, wenn das Steuerelement dem Entwickler die Möglichkeit gibt, die Schema-Informationen des angezeigten 
 Grids anzupassen.
 </summary>
 <param name="sender">Steuerelement, das das Ereignis ausgelöst hat.</param>
 <param name="e">EventArgs-Parameter, mit denen festgelegt werden kann, welche Spalten angezeigt werden sollen.</param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.BindableGridLayoutException">
 <summary>
 Raised, if ThrowLayoutException is set to false and there was an exception on auto-layouting the BindableDataGrid.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.IsDirtyChanged">
 <summary>
 Wird ausgelöst, wenn sich der Wert im Steuerelement geändert hat, um einen einbindenden Formular oder 
 User Control die Möglichkeit zu geben, den Benutzer zu informieren, dass er Änderungen speichern muss.
 </summary>
 <param name="sender">Steuerelement, dass das Ereignis ausgelöst hat.</param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ValueChanging">
 <summary>
 Wird ausgelöst, kurz bevor sich der Wert der Value-Eigenschaft ändert, sodass die Möglichkeit besteht, in die Werteänderung einzugreifen.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e">Ereignisparameter vom Typ ValueChangingEventArgs, mit denen in die Wertezuweisung eingegriffen werden kann.</param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ValueChanged">
 <summary>
 Wird ausgelöst, nachdem sich der Wert der Value-Eigenschaft geändert hat.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e">Ereignisparameter vom Typ ValueChangedEventArgs, mit denen der Grund für die Werteänderung ermittelt werden kann.</param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.SelectedValueChanged">
 <summary>
 Wird ausgelöst, wenn sich der selektierte Wert in der Liste geändert hat.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.UnassignableValueDetected">
 <summary>
 Wird ausgelöst, wenn bei der Zuweisung der Value-Eigenschaft ein Wert erkannt wurde, der es nicht ermöglich, den entsprechenden Eintrag in der Liste zu selektieren.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.FindNextVisibleRow">
 <summary>
 Findet die nächste sichtbare Zeile ausgegangen von der aktuell selektierten Zeile oder Zeile 0.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.FirstVisibleColumnInRow(System.Windows.Forms.DataGridViewRow,System.Int32)">
 <summary>
 Findet die erste sichtbare Spalte in der angegebenen Zeile oder liefert nothing (null) zurück.
 </summary>
 <param name="row">Die Zeile, in der die erste sichtbare Spalte gefunden werden soll.</param>
 <param name="startIndex">Die Spaltennummer, ab der gesucht werden soll.</param>
 <returns>Die erste sichtbare Spalte.</returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.FindPreviousVisibleRow">
 <summary>
 Findet die vorherige sichtbare Zeile ausgegangen von der aktuell selektierten Zeile oder Zeile 0.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.VisibleColumnCount">
 <summary>
 Ermittelt die Anzahl der sichtbaren Spalten.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ResetDatasource(System.Object)">
 <summary>
 Setzt die Datasource neu ohne dabei den Value zurückzusetzen
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ValueMember">
 <summary>
 Bestimmt oder ermittelt den Namen der Eigenschaft, deren Inhalt die Value-Eigenschaft 
 beim Auswählen eines Elements der Liste zurückliefert.
 </summary>
 <value></value>
 <returns></returns>
 <remarks><para>Ist diese Eigenschaft nicht gesetzt, wird das komplette Listenelement zurückgeliefert. 
 Falls keines selektiert ist, liefert diese Eigenschaft Null (Nothing in VB) zurück.  
 Falls diese Eigenschaft gesetzt ist, versucht das Steuerelement den Inhalt der entsprechenden Eigenschaft 
 zu ermitteln, und liefert diesen über die Value-Eigenschaft zurück.
 </para>
 <para>Wichtig: Die Eigenschaft, die verwendet werden soll, sollte auf jedenfall eindeutige (also keine doppelten) 
 Werte in der Liste zurückliefern, da beim Zuweisen sonst u.U. falsche Elemente in der Liste selektiert werden.</para>
 </remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ValueIsList">
 <summary>
 Bestimmt oder ermittelt, ob die Value-Eigenschaft als Navigations-Eigenschaft angesehen werden soll, 
 also die ganze DatenQuelle (DateSource) zurückliefert (true) oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Die Standardeinstellung ist false. Wenn Dieser Wert auf True gesetzt ist, 
 wird die ValueMember-Eigenschaft ignoriert.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.Value">
 <summary>
 Bestimmt oder ermittelt den Wert dieses Steuerelements, der sich aus dem seletkierten Elemente des Grids ergibt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Ist die ValueMember-Eigenschaft dieser Instanz nicht gesetzt, wird das komplette Listenelement, das selektiert ist, zurückgeliefert. 
 Falls keines selektiert ist, liefert diese Eigenschaft Null (Nothing in VB) zurück.  
 Falls die ValueMember-Eigenschaft gesetzt ist, versucht das Steuerelement den Inhalt der entsprechenden Eigenschaft 
 zu ermitteln, und liefert diesen über die Value-Eigenschaft zurück.<para></para>
 Beim Setzen der Value-Eigenschaft versucht das Steuerelement, das Element in der Liste zu selektieren, das 
 dem Eigenschaftenwert entspricht. Ist die ValueMember-Eigenschaft gesetzt, wird die gesamte Liste nach dem 
 angegebenen Wert in der durch ValueMember definierten Eigenschaft der einzelnen Elemente durchsucht.
 </remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.SelectRow(System.Windows.Forms.DataGridViewRow)">
 <summary>
 Definiert die angegebene Zeile als aktuelle Zeile (damit sie entsprechend in den sichtbaren Bereich gescrollt wird).
 </summary>
 <param name="row">Zeile, die zur aktuellen Zeile erklärt werden soll.</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.IsLoading">
 <summary>
 Bestimmt oder ermittelt, ob die Maske, die das Steuerelement enthält, gerade die Steuerelemente mit Daten befüllt, oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Das Setzen dieser Eigenschaft kann nur über die Schnittstelle (in der Regel von der Maskensteuerung) vorgenommen werden.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ResetIsDirty">
 <summary>
 Setzt den Status zurück, dass dieses Feld vom Anwender geändert wurde, und sein Value in der Datenquelle aktualisiert werden sollte.
 </summary>
 <remarks>Diese Methode wird von der Infrastruktur verwendet, und sollte nicht direkt angewendet werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.RestoreValue">
 <summary>
 Wert der Value-Eigenschaft, der galt, bevor das Window-Handle dieses Steuerelementes erstellt war.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Über dieser Eigenschaft wird der Inhalt der Value-Eigenschaft zwischengespeichert, der eingestellt war, 
 bevor das Handle dieses Steuerelementes erzeugt wurde. Auch wenn das Handle dieses Steuerelementes noch nicht erstellt 
 wurde (es also noch nicht sichtbar war), lässt sich schon auf die entsprechenden Eigenschaften zugreifen. Das Erstellen 
 des Steuerelementes sorgt aber leider dafür, dass sich die Auswahl des Steuerelementes ändert, und auf das erste Element 
 zurückgesetzt wird. Über diese Eigenschaft hat die übergeordnete Klasse EINMALIG die Möglichkeit, den Zustand seiner 
 Value-Eigenschaft vor Erstellen des Handles auszulesen.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ThrowLayoutException">
 <summary>
 Gets or sets if exceptions which are occuring while layouting the DataGrid are thrown.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.AssignedManagerComponent">
 <summary>
 Bestimmt oder ermittelt die FormToBusinessClassManager-Komponente, die die Verwaltung dieses NullableValue-Controls übernimmt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ProcessingPriority">
 <summary>
 Bestimmt oder ermittelt einen Prioritätsindex, der bestimmt, in welcher Reihenfolge 
 das Steuerelement vom FormsToBusinessClass-Manager verarbeitet wird (Höhere Nummer, frühere Verarbeitung.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.UIGuid">
 <summary>
 Bestimmt oder ermittelt eine eindeutige GUID für das Steuerelement, um beispielsweise Rechte-Mappings in Datenbanken aufzubauen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Dass diese Eigenschaft UIGuid und nicht IdentificationGuid lautet, hat historische Gründe. Diese Eigenschaft implementiert 
 IPermissionManageableUIContentElement.IdentificationGuid.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ContentPresentPermission">
 <summary>
 Bestimmt oder ermittelt, in welcher Form eine Komponente auf Grund von Rechten oder Lizenzausbaustufen verwendet werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.PermissionReason">
 <summary>
 Bestimmt oder ermittelt einen Grund, weswegen ein Benutzer nur eingeschränkten Zugriff auf das Steuerelement hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.ElementType">
 <summary>
 Definiert, um welche Art Element es sich bei dieser Komponente handelt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.EnforceValueMemberTypeSafety">
 <summary>
 Bestimmt oder ermittelt, ob bei der Zuweisung der Value-Eigenschaft Typgleichheit zwischen 
 ValueMember (entsprechende Eigenschaft des Item in der Liste) und gesetztem Wert herschen muss, 
 oder das Steuerelement versucht, eine impliziete Typkonvertierung durchzuführen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 Durch eine EnforceValueMemberTypeSafety-Eigenschaft beim BindableDataGrid sowie beim NullableValueRelationPopup-Steuerelement 
 soll durch Setzen dieser Eigenschaft auf false (Standard ist true) die Typsicherheit dabei aufgerufen werden. 
 Stellt das Control fest, dass bei der Zuweisung der Value-Eigenschaft ein anderer Typ als beim entsprechenden ValueMember vorliegt, 
 versucht es bei EnforceValueMemberTypeSafety=false selbständig eine Konvertierung in den Typ vorzunehmen. 
 Falls das nicht gelingt, wird eine ensprechende TypeMismatchException ausgelöst. 
 Bei EnforceValueMemberTypeSafety=true wird in diesem Fall per se eine TypeMismatchException ausgelöst.
 </remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.IsManageable">
 <summary>
 Bestimmt oder ermittelt, ob dieses Steuerelement rechtemäßig von einem externen Controler verwaltet werden kann oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.SelectedForProcessing">
 <summary>
 Bestimmt oder ermittelt, ob eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz 
 diese Komponente verarbeiten soll, wenn seine AutoUpdateFields-Eigenschaft auf ProcessSelected gesetzt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.GroupName">
 <summary>
 Bestimmt oder ermittelt einen Gruppierungsnamen, um eine Möglichkeit zur Verfügung zu stellen, zentral eine Reihe von Steuerelementen zu steuern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridView.IsKeyField">
 <summary>
 Bestimmt oder ermittelt, ob es sich bei einem Eingabefeld um ein Key-Feld handelt oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValuePrimalDatePicker">
 <summary>
 Infrastruktur-Klasse. Support-Control für <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableDateValue">NullableDateValue-Steuerelement</see>.
 </summary>
 <remarks>Sie können dieses Steuerelement direkt verwenden, sein Einsatz ist aber in erster Linie als Basis für das
 <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableDateValue">NullableDateValue-Steuerelement</see> gedacht.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup">
 <summary>
Control for displaying DataGridViews as ComboBox popup, which also handles null values,
provides search and auto-complete functionality and offers a unifying Value property.
</summary>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.GridLayoutException">
 <summary>
 Raised if ThrowLayoutException is set to false and there was an exception on auto-layouting the BindableDataGrid.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ValueTextChanged">
 <summary>
 Wird ausgelöst, wenn der Anwender den Text ändert, der zur Suche des Eintrages in der Liste 
 oder zur Textbestimmung bei PreserveInput = true verwendet wird.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.AddButtonClick">
 <summary>
 Wird ausgelöst, wenn der Anwender zur Laufzeit auf den AddButton klickt, der sich mit der HasAddButton-Eigenschaft einschalten lässt.
 </summary>
 <param name="sender">Steuerelement, das das Ereignis ausgelöst hat.</param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.IsDirtyChanged">
 <summary>
 Wird ausgelöst, wenn sich der Wert im Steuerelement geändert hat, um einen einbindenden Formular oder 
 User Control die Möglichkeit zu geben, den Benutzer zu informieren, dass er Änderungen speichern muss.
 </summary>
 <param name="sender">Steuerelement, das das Ereignis ausgelöst hat.</param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.DataSourceChanged">
 <summary>
 Wird ausgelöst, wenn sich die Datenquelle geändert hat, die zum Befüllen des NullableValueRelationPopup Controls mit den entsprechenden Einträgen dient.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ValueChanged">
 <summary>
 Wird ausgelöst, nachdem sich der Wert der Value-Eigenschaft geändert hat.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e">Ereignisparameter vom Typ ValueChangedEventArgs, mit denen der Grund für die Werteänderung ermittelt werden kann.</param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.GetColumnSchema">
 <summary>
 Wird ausgelöst, wenn das Steuerelement dem Entwickler die Möglichkeit gibt, die Schema-Informationen des angezeigten 
 Grids anzupassen.
 </summary>
 <param name="sender">Steuerelement, das das Ereignis ausgelöst hat.</param>
 <param name="e">EventArgs-Parameter, mit denen festgelegt werden kann, welche Spalten angezeigt werden sollen.</param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.DeferredTextChangeDelayChanged">
 <summary>
 Wird ausgelöst, wenn der Wert der Eigenschaft DeferredTextChangeDelay geändert wurde.
 Grids anzupassen.
 </summary>
 <param name="sender">Steuerelement, das das Ereignis ausgelöst hat.</param>
 <param name="e">EventArgs-Parameter, mit denen festgelegt werden kann, welche Spalten angezeigt werden sollen.</param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.UnassignableValueDetected">
 <summary>
 Wird ausgelöst, wenn bei der Zuweisung der Value-Eigenschaft ein Wert erkannt wurde, der es nicht ermöglich, den entsprechenden Eintrag in der Liste zu selektieren.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.SelectedValueChanged">
 <summary>
 Wird ausgelöst, wenn sich der selektierte Wert in der Liste geändert hat.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.HandleSelectedValueChanged(System.Boolean)">
 <summary>
 Handelt das Ändern des Wertes im Control.
 </summary>
 <param name="lateCommit">Flag, das anzeigt, ob das Commiten des Wertes früh (durch Übernahme aus der Liste) 
 oder spät und impliziet (durch FocusLost) erfolgte.</param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.CommitOnLeaveForPreserveInput">
 <summary>
 Wird bei PreserveInput=True dann aufgerufen, wenn ein LostFocus erfolgt, und der Wert spät commited werden muss.
 </summary>
 <remarks>Dieser Methodenaufruf wird wichtig, wenn ein early-commit durch direkte Werteauswahl stattgefunden hat,
 der Anwender danach das Eingabefeld gelöscht und damit die Werteauswahl deselektiert hat.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.Commit(System.Boolean)">
 <summary>
 Wird aufgerufen, wenn der Wert im Control entweder durch FocusLost oder 
 durch Auswahl des Wertes in der Liste final bestimmt wird.
 </summary>
 <param name="lateCommit">Flag, das anzeigt, ob das Commiten des Wertes früh (durch Übernahme aus der Liste) 
 oder spät und impliziet (durch FocusLost) erfolgte.</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.Text">
 <summary>
 Bestimmt oder ermittelt die Zeichenfolge im Eingabebereich des Popup-Controls.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.OnUnassignableValueAction">
 <summary>
 Bestimmt oder ermittelt, was passieren soll, wenn Value ein Wert zugewiesen wird, der in der Liste keinem Eintrag entspricht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.OnFocusColor">
 <summary>
 Bestimmt oder ermittelt, ob das Steuerelement mit FocusColor eingefärbt werden soll, wenn das Steuerelement den Fokus erhält. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.FocusColor">
 <summary>
 Bestimmt oder ermittelt die Farbe, die im Bedarfsfall vorselektiert werden soll, wenn das Steuerelement den Fokus erhält. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.NullValueString">
 <summary>
 Bestimmt oder ermittelt die Zeichenfolge, die beim Verlassen des Steuerelements angezeigt wird, wenn eine Null-Eingabe erfolgte.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ValueMember">
 <summary>
 Bestimmt oder ermittelt den Namen der Eigenschaft, deren Inhalt die Value-Eigenschaft 
 beim Auswählen eines Elements der Liste zurückliefert.
 </summary>
 <value></value>
 <returns></returns>
 <remarks><para>Ist diese Eigenschaft nicht gesetzt, wird das komplette Listenelement zurückgeliefert. 
 Falls diese Eigenschaft gesetzt ist, versucht das Steuerelement den Inhalt der entsprechenden Eigenschaft 
 zu ermitteln, und liefert diesen über die Value-Eigenschaft zurück.
 </para>
 <para>Wichtig: Die Eigenschaft, die verwendet werden soll, sollte auf jedenfall eindeutige (also keine doppelten) 
 Werte in der Liste zurückliefern, da beim Zuweisen sonst u.U. falsche Elemente in der Liste selektiert werden.</para>
 </remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.DisplayMember">
 <summary>
 Bestimmt oder ermittelt den in der TextBox dieses Steuerelementes angezeigten Wert, 
 nachdem ein Elemente in der Liste ausgewählt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks><para>Der DisplayMember wird aus mindestens zwei Teilen als Zeichenfolge angegeben werden, 
 die durch Komma getrennt werden. Der erste Teil - in Anführungszeichen - definiert die Formatierung, 
 der zweite Teil, welche Eigenschaften der Datenquelle angezeigt werden sollen. 
 Eigenschaftennamen werden in geschwifte Klammern gesetzt. Das ist wichtig, um zu einem späteren Zeitpunkt 
 hier noch um Formelauswertungsfunktioanlitäten zu erweitern.
 </para>
 <para>Beispiel: Kundennummer 6-stellig und Betrag mit zwei Nachkomma, Tausendertrennzeichen und Euro-Symbol darstellen:</para>
 <code>
 Me.DisplayMember = """{0:000000}: {1:#,##0.00} €"", {Kundennummer},{Betrag}"
 </code>
 <para>Beispiel: Kundennummer 6-stellig, mit anschließendem Doppelpüunkt, Leerzeichen,
 dann Nachname, Komma und Vorname:</para>
 <code>
 Me.DisplayMember = """{0:000000}: {1}, {2}"", {Kundennummer},{Nachname},{Vorname}"
 </code>
 </remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.SearchPattern">
 <summary>
 Bestimmt oder ermittelt die Eigenschaften, in denen in der Liste nach Begriffen gesucht werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 <para>SearchPattern wird wie DisplayMember parametrisiert und erbt leitet seine Einstellungen solange von 
 Displaymember ab, bis eigene Einstellungen für SearchPattern definiert wurden.
 </para>
 <para>Der SearchPattern-String wird aus mindestens zwei Teilen als Zeichenfolge angegeben werden, 
 die durch Komma getrennt werden. Der erste Teil - in Anführungszeichen - definiert die Formatierung, 
 der zweite Teil, welche Eigenschaften der Datenquelle angezeigt werden sollen. 
 Eigenschaftennamen werden in geschwifte Klammern gesetzt. Das ist wichtig, um zu einem späteren Zeitpunkt 
 hier noch um Formelauswertungsfunktioanlitäten zu erweitern.
 </para>
 <para>Beispiel: Kundennummer 6-stellig und Betrag mit zwei Nachkomma, Tausendertrennzeichen und Euro-Symbol darstellen:</para>
 <code>
 Me.SearchPattern = """{0:000000}: {1:#,##0.00} €"", {Kundennummer},{Betrag}"
 </code>
 <para>Beispiel: Kundennummer 6-stellig, mit anschließendem Doppelpüunkt, Leerzeichen,
 dann Nachname, Komma und Vorname:</para>
 <code>
 Me.SearchPattern = """{0:000000}: {1}, {2}"", {Kundennummer},{Nachname},{Vorname}"
 </code>
 </remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.DatafieldDescription">
 <summary>
 Bestimmt oder Ermittelt den ausgeschriebenen/lolkalisierten Namen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Wenn ein bindbares Feld in einem Tabellenschema beispielsweise den Namen ZipCity trägt, könnte 
 diese Eigenschaft "Postleitzahl/Ort" lauten. Diese Eigenschaft spiegelt also die Bezeichnung des 
 Datenfeldnamens in echter Sprache wider, sodass sie verständlich für den Endanwender wird. Bei automatisierter 
 Validierung einer Eingabemaske kann dann in der UI mit diesen Namen Bezug auf das entsprechende 
 Datenfeld genommen werden. Die Bezeichnung einer Datenfeldes in der UI beispielsweise durch ein Label sollte 
 daher genauso lauten, wie diese Eigenschaft. Diese Eigenschaft sollte bei Verwendung von automatischer 
 Validierung auch auf jedenfall gesetzt sein, weil anderenfalls eine Ausnahme ausgelöst werden kann.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.DatafieldName">
 <summary>
 Bestimmt oder Ermittelt den Datenquellen-Feldnamen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.NullValueMessage">
 <summary>
 Bestimmt oder Ermittelt den Text der ausgegeben werden soll, wenn der Anwender versucht ein Feld zu verlassen, 
 dass keine Eingaben enthält. Ist der Text nicht definiert, kann das Feld verlassen werden.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Mit dieser Eigenschaft bestimmen Sie einerseits, ob ein Eingabefeld Null-Werte enthalten darf oder nicht, und 
 andererseits wird gleichzeitig festgelegt, welche Fehlermeldung für den Benutzer ausgegeben werden soll, wenn er 
 versucht, ein Eingabefeld zu verlassen, das keine Null-Werte akzeptiert, er aber keinen Wert eingegeben hat.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.AutoResizeColumnsOnOpen">
 <summary>
 Bestimmt oder ermittelt, ob die Spaltenbreiten vor dem Öffnen 
 an die Inhalte der Überschriften/Zellen angepasst werden sollen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.DeferredTextChangeDelay">
 <summary>
 Bestimmt oder ermittelt, nach welcher Zeitspanne der verzögerte TextChange-Event eine Hintergrundsuche in den Elementen für die AutoComplete-List auslösen soll.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ValueBase">
 <summary>
 Ursprünglicher Wert der gesamten, selektierten Datenzeile auf dem die Value-Eigenschaft, gesteuert durch ValueMember, basiert.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.IsLoading">
 <summary>
 Bestimmt oder ermittelt, ob die Maske, die das Steuerelement enthält, gerade die Steuerelemente mit Daten befüllt, oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Das Setzen dieser Eigenschaft kann nur über die Schnittstelle (in der Regel von der Maskensteuerung) vorgenommen werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.AssignedManagerComponent">
 <summary>
 Bestimmt oder ermittelt die FormToBusinessClassManager-Komponente, die die Verwaltung dieses NullableValue-Controls übernimmt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.UIGuid">
 <summary>
 Bestimmt oder ermittelt eine eindeutige GUID für das Steuerelement, 
 um beispielsweise Rechte-Mappings in Datenbanken aufzubauen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ContentPresentPermission">
 <summary>
 Bestimmt oder ermittelt, in welcher Form eine Komponente auf Grund von 
 Rechten oder Lizenzausbaustufen verwendet werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.PermissionReason">
 <summary>
 Bestimmt oder ermittelt einen Grund, weswegen ein Benutzer nur eingeschränkten Zugriff auf das Steuerelement hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.IsManageable">
 <summary>
 Bestimmt oder ermittelt, ob das Steuerelement in der Rechteverwaltung eingeschlossen werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.EnforceValueMemberTypeSafety">
 <summary>
 Bestimmt oder ermittelt, ob bei der Zuweisung der Value-Eigenschaft Typgleichheit zwischen 
 ValueMember (entsprechende Eigenschaft des Item in der Liste) und gesetztem Wert herschen muss, 
 oder das Steuerelement versucht, eine impliziete Typkonvertierung durchzuführen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>
 Durch eine EnforceValueMemberTypeSafety-Eigenschaft beim BindableDataGrid sowie beim NullableValueRelationPopup-Steuerelement 
 soll durch Setzen dieser Eigenschaft auf false (Standard ist true) die Typsicherheit dabei aufgerufen werden. 
 Stellt das Control fest, dass bei der Zuweisung der Value-Eigenschaft ein anderer Typ als beim entsprechenden ValueMember vorliegt, 
 versucht es bei EnforceValueMemberTypeSafety=false selbständig eine Konvertierung in den Typ vorzunehmen. 
 Falls das nicht gelingt, wird eine ensprechende TypeMismatchException ausgelöst. 
 Bei EnforceValueMemberTypeSafety=true wird in diesem Fall per se eine TypeMismatchException ausgelöst.
 </remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ProcessingPriority">
 <summary>
 Bestimmt oder ermittelt einen Prioritätsindex, der bestimmt, in welcher Reihenfolge 
 das Steuerelement vom FormsToBusinessClass-Manager verarbeitet wird (Höhere Nummer, frühere Verarbeitung.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.SelectedForProcessing">
 <summary>
 Bestimmt oder ermittelt, ob eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz 
 diese Komponente verarbeiten soll, wenn seine AutoUpdateFields-Eigenschaft auf ProcessSelected gesetzt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.BeepOnFailedValidation">
 <summary>
 Bestimmt oder ermittelt, ob ein Warnton bei einer fehlgeschlagenen Validierung ausgegeben werden soll.  
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.GroupName">
 <summary>
 Bestimmt oder ermittelt einen Gruppierungsnamen, um eine Möglichkeit zur Verfügung zu stellen, zentral eine Reihe von Steuerelementen zu steuern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.IsKeyField">
 <summary>
 Bestimmt oder ermittelt, ob es sich bei einem Eingabefeld um ein Key-Feld handelt oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ColorSearchColumn">
 <summary>
 Bestimmt oder ermittelt, ob die Spalten, nach denen bei eingeschalteter Suche gesucht werden kann, 
 mit der SearchColumnBackgroundColor eingefärbt werden sollen (True) oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.SearchColumnHeaderFont">
 <summary>
 Bestimmt oder ermittelt den Font, mit dem die Titel der Spalten, nach denen bei eingeschalteter Suche 
 gesucht werden kann, ausgezeichnet werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.SearchColumnBackgroundColor">
 <summary>
 Bestimmt oder ermittelt die Farbe, mit dem der Hintergrund der Spalten, nach denen bei eingeschalteter Suche 
 gesucht werden kann, ausgezeichnet werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.SearchColumnHeaderBackgroundColor">
 <summary>
 Bestimmt oder ermittelt die Farbe, mit dem der Hintergrund der Spaltenköpfe, nach denen bei eingeschalteter Suche 
 gesucht werden kann, ausgezeichnet werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.HasAddButton">
 <summary>
 Bestimmt oder ermittelt, ob das RelationalPopup über einen Hinzufüge-Button verfügt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.PreserveInput">
 <summary>
 Bestimmt oder ermittelt, ob das RelationalPopup seine Texteingabe behält, wenn ein entsprechender Wert nicht in der Lookup-Tabelle gefunden wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Wenn PreserveInput ausgeschaltet ist, können im Eingabebereich nur Werte zu sehen sein, die einer Auswahl in der Liste entsprechen. 
 Die Formatierung des ausgewählten Wertes der Liste wird dabei durch die DisplayPattern-Eigenschaft definiert. Werte aus der Liste können dabei 
 mit TAB oder mit Return ausgewählt werden, wobei TAB auch gleichzeitig zum nächsten Feld springt (Fokusänderung). Neueingaben im Eingabebereich sind nur 
 möglich, wenn PreserveInput auf True gesetzt wurde. PreselectFirstMatchWithPreserveInput steuert dann das TAB-Auswahl-Verhalten gefundener Werte aufgrund der 
 Eingabe in der Ergebnisliste: Ist diese Eigenschaft gesetzt, findet eine Selektierung des ersten gefundenen Wertes statt; TAB übernimmt in diesem Fall 
 NICHT den Wert als Auswahl; dieses passiert nur mit RETURN (wichtig: das gilt grundsätzlich nur für PreserveInput=True!). Ist diese Eigenschaft nicht 
 gesetzt, muss der Anwender einen Eintrag zunächst mit KeyUp oder KeyDown aus der Liste selektieren. TAB übernimmt in diesem Fall wie bei PreserveInput=false 
 bei einem Control-Fokus-Wechsel ebenfalls den Wert aus der Liste.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.MaxLength">
 <summary>
 Gets or sets the maximum number of characters that can be manually entered into the Textbox-Part of this control. NOTE: This also limits the search text length, when PreserveInput is not used!
 </summary>
 <value></value>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.RaiseIsDirtyOnPreserveInputTextChange">
 <summary>
 Bestimmt oder ermittelt, ob IsDirty ausgelöst werden soll, 
 wenn Preserve-Input gesetzt ist, und der Anwender bereits ein einzelnes Zeichen im Eingabefeld geändert hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Ein Sonderfall bei der Behandlung von Eingaben mit PreserveInput ist, dass das Control nicht bestimmen kann,
 ob eine Eingabe eines Zeichens Teil einer Neuerfassung eines Wertes ist (ValueText) wird ausgewertet als de-facto-Value oder 
 ob die Eingabe zur Bestimmung eines Wertes aus der Liste ist. Beim letzten ist das IsDirty-Auslösen bereits bei 
 der Eingabe von Zeichen NICHT erwünscht, beim ersten schon. Mithilfe dieser Eigenschaft kann die Verhaltensweise gesteuert werden. 
 Wenn die Fälle im Zusammenhang anders behandelt werden müssen, sollte die IsDirty-Eigenschaft entsprechend von 
 außen gesetzt werden, damit die angeschlossene Verarbeitungskette richtig mit diesen Grenzfällen umgehen kann. 
 Diese Eigenschaft hat Opt-In-Charakteristik.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.PreselectFirstMatchWithPreserveInput">
 <summary>
 Bestimmt oder ermittelt, ob der erste gefundene Eintrag vorselektiert werden soll, wenn PreserveInput eingeschaltet ist, und damit auch Neueingaben in diesem Control erfasst werden können.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Wenn PreserveInput ausgeschaltet ist, können im Eingabebereich nur Werte zu sehen sein, die einer Auswahl in der Liste entsprechen. 
 Die Formatierung des ausgewählten Wertes der Liste wird dabei durch die DisplayPattern-Eigenschaft definiert. Werte aus der Liste können dabei 
 mit TAB oder mit Return ausgewählt werden, wobei TAB auch gleichzeitig zum nächsten Feld springt (Fokusänderung). Neueingaben im Eingabebereich sind nur 
 möglich, wenn PreserveInput auf True gesetzt wurde. PreselectFirstMatchWithPreserveInput steuert dann das TAB-Auswahl-Verhalten gefundener Werte aufgrund der 
 Eingabe in der Ergebnisliste: Ist diese Eigenschaft gesetzt, findet eine Selektierung des ersten gefundenen Wertes statt; TAB übernimmt in diesem Fall 
 NICHT den Wert als Auswahl; dieses passiert nur mit RETURN (WICHTIG: das gilt grundsätzlich nur für PreserveInput=True!). Ist diese Eigenschaft nicht 
 gesetzt, muss der Anwender einen Eintrag zunächst mit KeyUp oder KeyDown aus der Liste selektieren. TAB übernimmt in diesem Fall wie bei PreserveInput=false 
 bei einem Control-Fokus-Wechsel ebenfalls den Wert aus der Liste.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.SuppressPreselectFirstMatch">
 <summary>
 Ermittelt, ob ein gefundener Eintrag in der Liste aufgrund der Eingabe im Textfeld direkt vorselektiert werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ReverseTextOverflowBehaviour">
 <summary>
 Bestimmt oder ermittelt, ob bei einem Überlauf in der TextBox der vordere oder der hintere Teiltext angezeigt wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ImitateTabByPageKeys">
 <summary>
 Returns or sets a flag which determines that the use can cycle between entry fields with Page up and Page down rather than Tab and Shift+Tab.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ParallelizeFiltering">
 <summary>
 Bestimmt oder ermittelt, ob der Filtervorgang bei der Eingabe von Suchbegriffen für eine große Anzahl von Elementen (>5000) parallelisiert werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueRelationPopup.ValueText">
 <summary>
 Bestimmt oder ermittelt wenn PreserveInput auf True gesetzt ist, welcher neue Wert (reiner Text) im Eingabebereich angezeigt wird, der nicht einem Wert der Liste entspricht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Diese Eigenschaft wird nur programmatisch gesetzt und steht im Designer nicht zur Verfügung.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValuePrimalTextBox">
 <summary>
 Infrastruktur-Klasse. Support-Control für alle auf TextBox-basierenden NullableValue-Controls.
 </summary>
 <remarks>Sie können dieses Steuerelement direkt verwenden, sein Einsatz ist aber in erster Linie als Basis für von 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2">NullableValueBase(Of NullableType, ControlType)</see> 
 vererbten Steuerelementen gedacht.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.FocusSelectionBehaviours">
 <summary>
 Definiert die Verhaltensweisen der Einfügemarke, wenn ein von <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2">NullableValueBase</see> 
 abgeleitetes Steuerelement den Fokus erhält.
 </summary>
 <remarks>Die Verhaltensweise ist über dessen FocusSelectionBehaviour-Eigenschaft einstellbar.</remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.FocusSelectionBehaviours.PlaceCarentUpFront">
 <summary>
 Platziert den Cursor beim Fokussieren vor dem Text.
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.FocusSelectionBehaviours.PreSelectInput">
 <summary>
 Selektiert den gesamten Text, und platziert den Cursor hinter dem Text.
 </summary>
 <remarks>Dies ist die Standardeinstellung.</remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.FocusSelectionBehaviours.PlaceCaretAtEnd">
 <summary>
 Platziert den Cursor beim Fokussieren hinter dem Text ohne zu Selektieren.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding">
 <summary>
 Definiert Ereignisse, Methoden und Eigenschaften, damit ein NullableValueControl automatisch 
 über einen FormToBusinessClassManager mit Werten befüllt werden kann.
 </summary>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding.ValueChanged">
 <summary>
 Ereignis, das ausgelöst wird, wenn sich der Wert des Steuerelements geändert hat.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding.IsLoading">
 <summary>
 Bestimmt oder ermittelt, ob die Maske, die das Steuerelement enthält, gerade die Steuerelemente mit Daten befüllt, oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Das Setzen dieser Eigenschaft sollte nur über diese Schnittstelle (in der Regel von der Maskensteuerung) vorgenommen werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding.DatafieldName">
 <summary>
 Bestimmt den Namen der Eigenschaft oder den Pfad der Eigenschaft, die an die Datenquelle mit ihrer Value-Eigenschaft gebunden wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Bei der Angabe der Eigenschaften sollten Steuerelemente auch den Pfad zu einer Eigenschaft auswerten können, der mit Punkten angegeben werden kann. 
 Also könnte beispielsweise mit dem DatafieldName "Contact.FirstName" auf eine Eigenschaft namens <i>Contact</i> zugegriffen werden, die eine Instanz vom Typ 
 <i>Contact</i> zurückliefert, die ihrerseits über <i>eine Firstname</i>-Eigenschaft verfügt, die erst die eigentlich zu bindende Eigenschaft darstellt.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding.DatafieldDescription">
 <summary>
 Bestimmt oder ermittelt die Beschreibung der Eigenschaft, die an die Value-Eigenschaft gebunden werden soll, um beispielsweise in Hilfe-Texten verarbeitet werden zu können.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.INullableValueRelationBinding">
 <summary>
 Definiert Funktionalitäten für das Binden von Werteauswahlen an FormsToBusinessClass-Manager.
 </summary>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.INullableValueRelationBinding.SelectedValueChanged">
 <summary>
 Ereignis, das ausgelöst wird, wenn sich der ausgewählte Wert geändert hat.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueRelationBinding.Datasource">
 <summary>
 Bestimmt oder ermittelt, aufgrund welcher Datenquelle die Auswahlliste bereitgestellt wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueRelationBinding.ValueMember">
 <summary>
 Bestimmt oder ermittelt den Namen der Eigenschaft, mit dem der Wert in der Liste eindeutig erkannt werden kann und über den gebunden wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IRequestAdditionalSnapBaselineOffset">
 <summary>
 Für die Designer-Infrastruktur für von 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2">NullableValueBase(Of NullableType, ControlType)</see> abgeleitete Steuerelemente.
 </summary>
 <remarks>Schnittstelle, die eine Anforderung definiert, bei der ein zusätzlicher Offset (von oben)
 für das Platzieren der Base-Snap-Line benötigt wird, da das Steuerelement ein konstituierendes
 Steuerelement ist, und sich die Offsets nach oben verschieben.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableCheckBox">
 <summary>
 CheckBox-Steuerelement, das Null-Werte verarbeitet, eine vereinheitlichende Value-Eigenschaft bietet, 
 Funktionen für Rechteverwaltung zur Verfügung stellt und von einer 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager-Komponente</see> verwaltet werden kann.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.DatafieldDescription">
 <summary>
 Bestimmt oder Ermittelt den ausgeschriebenen/lolkalisierten Namen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Wenn ein bindbares Feld in einem Tabellenschema beispielsweise den Namen ZipCity trägt, könnte 
 diese Eigenschaft "Postleitzahl/Ort" lauten. Diese Eigenschaft spiegelt also die Bezeichnung des 
 Datenfeldnamens in echter Sprache wider, sodass sie verständlich für den Endanwender wird. Bei automatisierter 
 Validierung einer Eingabemaske kann dann in der UI mit diesen Namen Bezug auf das entsprechende 
 Datenfeld genommen werden. Die Bezeichnung einer Datenfeldes in der UI beispielsweise durch ein Label sollte 
 daher genauso lauten, wie diese Eigenschaft. Diese Eigenschaft sollte bei Verwendung von automatischer 
 Validierung auch auf jedenfall gesetzt sein, weil anderenfalls eine Ausnahme ausgelöst werden kann.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.DatafieldName">
 <summary>
 Bestimmt oder Ermittelt den Datenquellen-Feldnamen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.NullValueMessage">
 <summary>
 Bestimmt oder Ermittelt den Text der ausgegeben werden soll, wenn der Anwender versucht ein Feld zu verlassen, 
 dass keine Eingaben enthält. Ist der Text nicht definiert, kann das Feld verlassen werden.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Mit dieser Eigenschaft bestimmen Sie einerseits, ob ein Eingabefeld Null-Werte enthalten darf oder nicht, und 
 andererseits wird gleichzeitig festgelegt, welche Fehlermeldung für den Benutzer ausgegeben werden soll, wenn er 
 versucht, ein Eingabefeld zu verlassen, das keine Null-Werte akzeptiert, er aber keinen Wert eingegeben hat.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.Value">
 <summary>
 Bestimmt oder ermittelt den Wert, den dieses Steuerelement repräsentiert.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.IsDirty">
 <summary>
 Ermittelt ob sich der Value-Wert seit der letzten (ersten) Zuweisung geändert hat, und ein Datensatz deswegen aktualisiert werden muss.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.IsLoading">
 <summary>
 Bestimmt oder ermittelt, ob die Maske, die das Steuerelement enthält, gerade die Steuerelemente mit Daten befüllt, oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Das Setzen dieser Eigenschaft kann nur über die Schnittstelle (in der Regel von der Maskensteuerung) vorgenommen werden.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.ResetIsDirty">
 <summary>
 Setzt den Status zurück, dass dieses Feld vom Anwender geändert wurde, und sein Value in der Datenquelle aktualisiert werden sollte.
 </summary>
 <remarks>Diese Methode wird von der Infrastruktur verwendet, und sollte nicht direkt angewendet werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.AssignedManagerComponent">
 <summary>
 Bestimmt oder ermittelt die FormToBusinessClassManager-Komponente, die die Verwaltung dieses NullableValue-Controls übernimmt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.ProcessingPriority">
 <summary>
 Bestimmt oder ermittelt einen Prioritätsindex, der bestimmt, in welcher Reihenfolge 
 das Steuerelement vom FormsToBusinessClass-Manager verarbeitet wird (Höhere Nummer, frühere Verarbeitung.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.IsManageable">
 <summary>
 Bestimmt oder ermittelt, ob dieses Steuerelement rechtemäßig von einem externen Controler verwaltet werden kann oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.ContentPresentPermission">
 <summary>
 Bestimmt oder ermittelt, in welcher Form eine Komponente auf Grund von Rechten oder Lizenzausbaustufen verwendet werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.UIGuid">
 <summary>
 Bestimmt oder ermittelt eine eindeutige GUID für das Steuerelement, um beispielsweise Rechte-Mappings in Datenbanken aufzubauen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Dass diese Eigenschaft UIGuid und nicht PermissionGuid lautet, hat historische Gründe. Diese Eigenschaft implementiert 
 IPermissionManageableUIContentElement.PermissionGuid.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.PermissionReason">
 <summary>
 Bestimmt oder ermittelt einen Grund, weswegen ein Benutzer nur eingeschränkten Zugriff auf das Steuerelement hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.SelectedForProcessing">
 <summary>
 Bestimmt oder ermittelt, ob eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz 
 diese Komponente verarbeiten soll, wenn seine AutoUpdateFields-Eigenschaft auf ProcessSelected gesetzt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.GroupName">
 <summary>
 Bestimmt oder ermittelt einen Gruppierungsnamen, um eine Möglichkeit zur Verfügung zu stellen, zentral eine Reihe von Steuerelementen zu steuern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.IsKeyField">
 <summary>
 Bestimmt oder ermittelt, ob es sich bei einem Eingabefeld um ein Key-Feld handelt oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableCheckBox.ImitateTabByPageKeys">
 <summary>
 Returns or sets if the user can cycle between entry fields with Page up and Page down in addition to Tab and Shift+Tab.
 </summary>
 <returns></returns>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableDateValue">
 <summary>
 Allows editing of date values, which can be retrieved/set over the Value property, 
 and which can handle Nothing (null in CSharp) on top.
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableDateValue.GetDefaultFormatterEngine">
 <summary>
 Gets the DateValue Formatter Engine, which controls string conversion to date and vice versa.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableDateValue.DaysDistanceBetweenLinkedControl">
 <summary>
 Bestimmt oder emittelt die minimale Distanz, die zwischen zwei NullableDateValue-Controls liegen muss. 
 Der Wert kann null (nothing in VB; keine Prüfung) oder negativ sein ('bis' kleiner als 'von').
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableNumValue">
 <summary>
 Allows editing of numerical values (Decimal), which can be retrieved/set over the Value property, 
 and which can handle Nothing (null in CSharp) on top.
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableNumValue.OnValueValidating(ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs{System.Nullable{System.Decimal}})">
 <summary>
 Behandelt die Beachtung Min-/und Max-Eigenschaften bei der Wertevalidierung.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.CurrencySymbolUpFront">
 <summary>
 Bestimmt oder ermittelt, ob das Währungszeichen voran (true) oder nachgestellt werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.CurrencySymbolString">
 <summary>
 Bestimmt oder ermittelt das Währungszeichen, das dem Betrag voran- oder nachgestellt werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.HasThousandsSeperator">
 <summary>
 Bestimmt oder ermittelt, ob das Tausendertrennzeichen bei Zahlen über 999 (unter -999) angezeigt werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.DecimalPlaces">
 <summary>
 Bestimmt oder ermittelt die Anzahl der Dezimalstellen, die bei Brüchen angezeigt werden sollen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.Increment">
 <summary>
 Bestimmt oder ermittelt, um welchen Wert der angegebene Wert mit den Up-/Down-Schaltflächen erhöht oder verkleinert werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.AllowFormular">
 <summary>
 Bestimmt oder ermittelt, ob anstelle von Werten auch mathematische, berechbare Ausdrücke eingegeben werden können (Formeln).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.LeadingZeros">
 <summary>
 Bestimmt oder ermittelt, ob der formatierte, anzuzeigende Wert mit der entsprechenden Anzahl führender Nullen aufgefüllt wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>HINWEIS: Wenn dieser Eigenschaft ein Wert größer Null zugewiesen wird, und damit führende Nullen angezeigt werden, 
 führt das gleichzeitig dazu, dass die <see cref="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.HasThousandsSeperator">HasThousandsSeperator</see>-Eigenschaft nicht zur Anwendung kommt.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.MaxValue">
 <summary>
 Bestimmt oder ermittelt den Maximalwert, der in diesem Steuerelement erfasst werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.MinValue">
 <summary>
 Bestimmt oder ermittelt den Minimalwert, der in diesem Steuerelement erfasst werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.MaxValueExceededMessage">
 <summary>
 Bestimmt oder ermittelt den Fehlertext, der ausgegebenen wird, wenn der Wert des Steuerelementes den Maximalwert überschreitet.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.MinValueExceededMessage">
 <summary>
 Bestimmt oder ermittelt den Fehlertext, der ausgegebenen wird, wenn der Wert des Steuerelementes den Minimalwert unterschreitet.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.DropDownCalculatorMode">
 <summary>
 Bestimmt ob und welcher Taschenrechner in dem Control angezeigt werden kann
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.DropDownCalculatorTrigger">
 <summary>
 Bestimmt wie der Taschenrechner angezeigt werden kann
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableNumValue.ToggleCalculator">
 <summary>
 Zeigt den Taschenrechner an oder blendet ihn aus, wenn er bereits angezeigt wird
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableNumValue.IsCalculatorOpen">
 <summary>
 If the calculator is visible/active this property returns true and false otherwise
 </summary>
 <returns></returns>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.CalculatorType">
 <summary>
 Controls the type of calculator to be used.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorType.None">
 <summary>
 Calculator is not used.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorType.Simple">
 <summary>
 Provides a simple visual calculator with basic arithmetics.
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger">
 <summary>
 Controls how to activate the calculator.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.None">
 <summary>
 Calculator cannot be used.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.Ctrl_R">
 <summary>
 Calculator can be shown by Ctrl-R
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.Cursor_UpOrDown">
 <summary>
 Calculator can be shown by Cursor Up or Down
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.F2">
 <summary>
 Calculator can be shown by F2
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.F3">
 <summary>
 Calculator can be shown by F3
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.F5">
 <summary>
 Calculator can be shown by F5
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.F6">
 <summary>
 Calculator can be shown by F5
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.BasicArithmeticKeys">
 <summary>
 Calculator can be shown by * / - + = NOTE: This deactivates AllowFormular Property.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.Letter_C">
 <summary>
 Calculator can by the Letter C NOTE: This deactivates AllowFormular Property.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.MinusSign">
 <summary>
 Calculator can be shown by Dash
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.Subtle">
 <summary>
 Calculator can be activated by Cursor up/down or Ctrl+R
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.Normal">
 <summary>
 Calculator can be activated by Cursor up/down, Ctrl+R and F2.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.SemiProminent">
 <summary>
 Calculator can be activated by Cursor up/down, Letter C or = + * / but NOT the Minus sign, so negative values can be entered.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.CalculatorActivationTrigger.Prominent">
 <summary>
 Calculator can be activated by Cursor up/down, Letter C or = + - * /.
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableTextValue">
 <summary>
 Allows editing of single-line text values, which can be retrieved over the Value property, 
 and which can handle Nothing (null in CSharp) on top.
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableTextValue.MaxLengthAttributeName">
 <summary>
 EXPERIMENTAL: Bestimmt oder ermittelt, ob eine FormsToBusinessManager-Instanz die MaxLength-Eigenschaft zur Laufzeit auf Basis des Business-Objektes setzen darf.
 </summary>
 <value>Name des Attributs, dass über der zu bindenden Eigenschaft stehen muss, dass die Länge des Strings angibt.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableTextValue.EliminateWhitespacesOnAssignment">
 <summary>
 Bestimmt oder ermittelt, ob WhiteSpaces (Füllzeichen) die vor oder hinter dem eigentlichen Text stehen, bei einer Zuweisung eliminiert werden sollen.
 </summary>
 <value>True, wenn WhiteSpaces bei der Zuweisung eliminiert werden sollen.</value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ValueChangingEventArgs`1">
 <summary>
 Parameter, mit denen Informationen zum ValueChanging-Ereignis übermittelt und zurückgegeben werden.
 </summary>
 <typeparam name="NullableType"></typeparam>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ValueChangingEventArgs`1.OriginalValue">
 <summary>
 Der Wert, der zum neuen Wert für die Value-Eigenschaft erklärt werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ValueChangingEventArgs`1.NewValue">
 <summary>
 Der Wert, der abweichend vom eingegebenen Wert für die Value-Eigenschaft gelten soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Mit NewValue kann der Wert, der eigentlich vom Anwender eingegeben wurde, durch einen frei wählbaren ersetzt werden.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.TypeMismatchException">
 <summary>
 Wird ausgelöst, wenn zwei Typen unterschiedlich sind, es aber nicht sein dürfen.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.TextBoxButtonBase`1.SetInitialDefaultBorderstyleOnDemand">
 <summary>
 Behandelt das Verhalten des Setzens des Borderstyles beim Instanziieren des Controls.
 </summary>
 <remarks>Da das Control *vor* dem Aufruf von DefaultSize von Control(Base) 
 keine Gelegenheit im Basiskonstruktor bekommt, den Borderstyle zu setzen, 
 müssen wir beim ersten Aufruf von DefaultSize UND im Konstruktor 
 den Borderstyle setzen. Das darf natürlich nur dann passieren, 
 wenn der Borderstyle noch nie initial gesetzt wurde - dafür 
 dient das entsprechende Flag. Dieses Verhalten sollte, wenn überhaupt, 
 nur mit Bedacht überschrieben werden!</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.TextBoxButtonBase`1.DefaultBorderStyle">
 <summary>
 Liefert den Default-Borderstyle-Wert zurück.
 </summary>
 <returns></returns>
 <remarks>Überschreiben Sie diese Methode, wenn Sie das BorderStyle-Verhalten 
 beim Instanziieren des Steuerelementes beeinflussen wollen.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ResizablePopup">
 <summary>
 Infrastruktur-Klasse. Support-Control für alle auf <see cref="T:ActiveDevelop.EntitiesFormsLib.TextBoxPopup">TextBoxPopup</see> basierenden Steuerelemente.
 </summary>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ResizablePopup.ValueTextChanged">
 <summary>
 Wird ausgelöst, wenn sich die ValueText-Eigenschaft ändert.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ResizablePopup.ResetButtonClick">
 <summary>
 Wird ausgelöst, wenn der Reset-Button (Null Value), geklickt wird.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ResizablePopup.ActionButtonClick">
 <summary>
 Wird ausgelöst, wenn der Aktions-Button geklickt wird.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ResizablePopup.PopupOpening">
 <summary>
 Wird ausgelöst, bevor das Popup geöffnet wird.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ResizablePopup.PopupOpened">
 <summary>
 Wird ausgelöst, nachdem das Popup geöffnet wurde.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ResizablePopup.PopupClosed">
 <summary>
 Wird ausgelöst, nachdem das Popup geschlossen wurde.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ResizablePopup.PopupClosing">
 <summary>
 Wird ausgelöst, bevor das Popup geschlossen wird.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ResizablePopup.IsResizable">
 <summary>
 Bestimmt oder ermittelt, ob sich das Popup-Control in der Größe verändern lässt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.TextBoxPopup.OnBeginOpenPopup(System.EventArgs)">
 <summary>
 Löst das BeforePopupOpen-Ereignis aus, das benötigt wird, um Dinge zu behandeln, kurz bevor das Öffnen des Popups beginnt.
 </summary>
 <param name="e"></param>
 <remarks>Gibt überschreibenden Steuerelementen die Möglichkeit, beispielsweise ein IsDirty-Handling für das Formular zu implementieren, 
 da das Öffnen des Popups unter Umständen mit werteverändernden Ereignissen innerhalb des Popup-Controls einher geht.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.TextBoxPopup.UndoBehaviour">
 <summary>
 Bestimmt oder ermittelt in welche Scenarien eine nicht-committete Benutzereingabe beim Zuklappen des Popup-Menüs ein Undo-Kandidat ist.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.TextBoxPopup.FocusSelectionBehaviour">
 <summary>
 Bestimmt oder Ermittelt die Verhaltensweise des Vorselektierens des Steuerelementtextes, wenn es den Fokus erhält. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.UndoBehaviours">
 <summary>
 Lists the Undo Behaviour Actions, when the User closes the Popup, but did not commit the value by Enter or Click.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.UndoBehaviours.AlwaysUndo">
 <summary>
 Undo is performed, not matter if the uncommited popup has been closed by ESC or by the popup opener buttons.
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.UndoBehaviours.EscapeUndoOnly">
 <summary>
 Undo is performed, but only by ESC. When the popup is closed though mouse-click, the entered value remains as it is.
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BindableDataGridLayoutException">
 <summary>
 Raised, when a NullableValueRelationPopup control retrieves unplausible values 
 by the GetColumnsSchema Event, and layouting the Grid causes an exception.
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableDataGridLayoutException.CurrentColumnWidth">
 <summary>
 The CurrentColumnWidth which most probable caused the exception.
 </summary>
 <returns></returns>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ContainsUIMessageException">
 <summary>
 Stellt Funktionalitäten für Ausnahme-Behandlungen bereit, die mit Fehlermeldung der Benutzeroberflächen verknüpft werden sollen.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ContainsUIMessageException.#ctor(System.String,System.String)">
 <summary>
 Erstellt eine neue Instanz dieser Ausnahmeklasse und bestimmt Ausnahmetext und Hinweistext für den Anwender.
 </summary>
 <param name="Message">Nachricht, die die Fehlermeldung dieser Ausnahme beschreibt.</param>
 <param name="UIMessage">Hinweistext für den Anwender, der diese Fehlermeldung beschreibt.</param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ContainsUIMessageException.#ctor(System.String,System.String,System.Exception)">
 <summary>
 Erstellt eine neue Instanz dieser Ausnahmeklasse und bestimmt Ausnahmetext, Hinweistext für den Anwender und eine innere Ausnahme, die zu dieser Ausnahme geführt hat.
 </summary>
 <param name="Message">Nachricht, die die Fehlermeldung dieser Ausnahme beschreibt.</param>
 <param name="UIMessage">Hinweistext für den Anwender, der diese Fehlermeldung beschreibt.</param>
 <param name="innerException">Innere Ausnahme, die zu dieser Ausnahme geführt hat.</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ContainsUIMessageException.UIMessage">
 <summary>
 Für den Benutzer bzw. das Front-End aufbereiteter Hinweistext beim Auftreten dieser Ausnahme.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ContainsUIMessageException.MessageShortName">
 <summary>
 Kurzname der Ausnahme, um ihn beispielsweise darunter als eindeutigen Namen in einer Datenquelle zur Sprach-Lokalisierung nachzuschlagen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ContainsUIMessageException.MessageGuid">
 <summary>
 Guid dieser Instanz, um ihn beispielsweise darunter in einer Datenquelle zur Sprach-Lokalisierung nachzuschlagen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MissingDatafieldNameException">
 <summary>
 Wird ausgelöst, wenn bei einem zugewiesenen NullableValueControl an einen 
 FormToBusinessclass-Manager die DataField-Eigenschaft nicht gesetzt wurde.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MissingObjectContextException">
 <summary>
 Wird ausgelöst, wenn im FormsToBusinessClass-Manager an einem Entitätsobjekt ein 
 Context-Wechsel durchgeführt werden müsste, aber ein entsprechender ObjectContext nicht zu finden war.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MissingViewAttributeException">
 <summary>
 Wird ausgelöst, wenn eine View aus einem ViewModel für ein MvvmViewSelectorContainer 
 abgeleitet werden soll, das erforderliche MvvmViewAttribut über der ViewModel-Klasse aber 
 nicht angegeben wurde.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.UnassignableValueException">
 <summary>
 Ausnahme, die ausgelöst wird, wenn bei einem NullableValue-Steuerelement versucht wird, einen nicht gültiger Wert zuzuweisen.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.UnassignableValueException.#ctor(System.String,System.String,ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding)">
 <summary>
 Erstellt eine Instanz dieser Klasse und bestimmt Exception-Text und das Steuerelement, das die Ausnahme ausgelöst hat.
 </summary>
 <param name="param"></param>
 <param name="message"></param>
 <param name="causingControl"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.UnassignableValueException.#ctor(System.String,System.Object,System.String,ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding)">
 <summary>
 Erstellt eine Instanz dieser Klasse und bestimmt Exception-Text und das Steuerelement, das die Ausnahme ausgelöst hat.
 </summary>
 <param name="param"></param>
 <param name="message"></param>
 <param name="causingControl"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.UnassignableValueException.#ctor(System.String,ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding)">
 <summary>
 Erstellt eine Instanz dieser Klasse und bestimmt Exception-Text und das Steuerelement, das die Ausnahme ausgelöst hat.
 </summary>
 <param name="message">Fehlertext.</param>
 <param name="causingControl">Steuerelement, das die Ausnahme ausgelöst hat.</param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.UnassignableValueException.#ctor(System.String,System.Exception,ActiveDevelop.EntitiesFormsLib.INullableValueDataBinding)">
 <summary>
 Erstellt eine Instanz dieser Klasse und bestimmt Exception-Text, innerException und das Steuerelement, das die Ausnahme ausgelöst hat.
 </summary>
 <param name="message">Fehlertext.</param>
 <param name="innerException">Die Ausnahme, die zu dieser Ausnahme ursächlich geführt hat.</param>
 <param name="causingControl">Steuerelement, das die Ausnahme ausgelöst hat.</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.UnassignableValueException.CausingControl">
 <summary>
 Bestimmt oder ermittelt das Steuerelement, das diese Ausnahme ausgelöst hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ExtendedTypeReflector.IsNumeric(System.Type)">
 <summary>
 Typprüfung auf Numerisch
 </summary>
 <param name="t"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TrySetProperty``1(ActiveDevelop.EntitiesFormsLib.IAssignableFormToBusinessClassManager,System.String,``0)">
 <summary>
 Versucht die Eigenschaft eines bestimmten Steuerelementes dynamisch zu setzen.
 </summary>
 <typeparam name="valueType">Typ des neuen Wertes der Eigenschaft.</typeparam>
 <param name="control">Steuerelement, dessen Eigenschaft gesetzt werden soll.</param>
 <param name="PropertyName">Name der Eigenschaft als Zeichenkette.</param>
 <param name="value">Neuer Wert der Eigenschaft.</param>
 <returns>True, falls die Methode erfolgreich ausgeführt werden konnte.</returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TrySetProperty``1(ActiveDevelop.EntitiesFormsLib.IAssignableFormToBusinessClassManager,System.String,``0,System.Int32)">
 <summary>
 Versucht die Eigenschaft, die über einen Integer-Parameter (Indexer) verfügt, eines bestimmten Steuerelementes dynamisch zu setzen.
 </summary>
 <typeparam name="valueType">Typ des neuen Wertes der Eigenschaft.</typeparam>
 <param name="control">Steuerelement, dessen Eigenschaft gesetzt werden soll.</param>
 <param name="PropertyName">Name der Eigenschaft als Zeichenkette.</param>
 <param name="value">Neuer Wert der Eigenschaft.</param>
 <param name="Index">Der Wert für den Index der Eigenschaft.</param>
 <returns>True, falls die Methode erfolgreich ausgeführt werden konnte.</returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TrySetProperties``1(System.Windows.Forms.ContainerControl,System.String,System.String,``0)">
 <summary>
 Versucht die Eigenschaften mit dem angegebenen Namen aller Steuerelement in der angegebenen Gruppe auf den entsprechenden Wert zu setzen.
 </summary>
 <typeparam name="valueType">Typ des neuen Wertes der Eigenschaft.</typeparam>
 <param name="containerControl">Container-Steuerelement, dass die Steuerelemente der angegebenen Gruppe enthält.</param>
 <param name="GroupName">Name der Gruppe der Steuerelemente, deren Eigenschaft auf denselben Wert gesetzt werden soll.</param>
 <param name="PropertyName">Name der Eigenschaft, der für alle Steuerelemente der Gruppe einen neuen Wert erhalten soll.</param>
 <param name="value">Wert, der den Eigenschaften der Steuerelemente der Gruppe neu zugewiesen werden soll.</param>
 <returns>True, falls die Methode erfolgreich ausgeführt werden konnte.</returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.GetGroupableControlsByPropertyValue``1(System.Windows.Forms.ContainerControl,System.String,``0)">
 <summary>
 Ermittelt alle Steuerelemente in einem ContainerControl, die über die entsprechende Eigenschaften und dort den angegebenen Wert verfügen.
 </summary>
 <typeparam name="valuetype"></typeparam>
 <param name="containerControl"></param>
 <param name="PropertyName"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TryBindEvent``1(System.Windows.Forms.Control,System.String,System.EventHandler{``0})">
 <summary>
 Versucht das Ereignis eines Steuerelementes dynamisch an eine Ereignisbehandlungsroutine zu binden.
 </summary>
 <typeparam name="eventArgsType"></typeparam>
 <param name="control">Steuerelement, dass das Ereignis auslöst, an das gebunden werden soll.</param>
 <param name="EventName">Name des Ereignisses als Zeichenkette.</param>
 <param name="EventProc">EventHandler auf die Methode mit entsprechender Signatur, die das Ereignis behandelt.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TryBindEvents``1(System.Windows.Forms.ContainerControl,System.String,System.String,System.EventHandler{``0})">
 <summary>
 Versucht das als Zeichenkette angegebene Ereignis aller Steuerelemente einer Gruppe im Container-Steuerelement an eine Ereignisbehandlungsmethode zu binden.
 </summary>
 <typeparam name="eventArgsType">Typ der EventArgs-Parameter, durch die die genaue Signatur der Ereignisbehandlungsmethode bestimmt werden kann.</typeparam>
 <param name="containerControl"></param>
 <param name="GroupName">Bestimmt die Gruppe der Steuerelemente, für die die Ereignisbindung eingerichtet werden soll.</param>
 <param name="Eventname">Name des Ereignisses als Zeichenkette, dessen Ereignisbehandlung eingerichtet werden soll.</param>
 <param name="EventProc">Delegat der Methode, die das Ereignis behandelt.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TryUnbindEvent``1(System.Windows.Forms.Control,System.String,System.EventHandler{``0})">
 <summary>
 Hebt die Bindung eines Ereignisses, die durch <see cref="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TryBindEvent``1(System.Windows.Forms.Control,System.String,System.EventHandler{``0})">TryBindEvent</see> erfolgte, wieder auf.
 </summary>
 <typeparam name="eventArgsType"></typeparam>
 <param name="control">Steuerelement, dass das Ereignis auslöst, von dem die Ereignisbehandlungsmethode gelöst werden soll.</param>
 <param name="EventName">Name des Ereignisses als Zeichenkette.</param>
 <param name="EventProc">EventHandler auf die Methode mit entsprechender Signatur, die das Ereignis behandelt.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TryUnbindEvent(System.Object,System.String,System.Delegate)">
 <summary>
 Hebt die Bindung eines Ereignisses, die durch <see cref="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TryBindEvent``1(System.Windows.Forms.Control,System.String,System.EventHandler{``0})">TryBindEvent</see> erfolgte, wieder auf.
 </summary>
 <param name="control">Steuerelement, dass das Ereignis auslöst, von dem die Ereignisbehandlungsmethode gelöst werden soll.</param>
 <param name="EventName">Name des Ereignisses als Zeichenkette.</param>
 <param name="EventProc">EventHandler auf die Methode mit entsprechender Signatur, die das Ereignis behandelt.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.TryUnbindEvents``1(System.Windows.Forms.ContainerControl,System.String,System.String,System.EventHandler{``0})">
 <summary>
 Hebt die Bindung des Ereignisses aller Steuerelemente im Container-Steuerelement wieder auf.
 </summary>
 <typeparam name="eventArgsType"></typeparam>
 <param name="containerControl"></param>
 <param name="GroupName">Bestimmt die Gruppe der Steuerelemente, für die die Ereignisbindung aufgehoben werden soll.</param>
 <param name="Eventname">Name des Ereignisses als Zeichenkette, dessen Ereignisbehandlung aufgehoben werden soll.</param>
 <param name="EventProc">Delegat der Methode, die das Ereignis behandelt.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.GetGroupableControls(System.Windows.Forms.ContainerControl)">
 <summary>
 Ermittelt eine Liste aller NullableValueControls auf dem ContainerControl.
 </summary>
 <param name="containerControl">ContainerControl, das die NullableValueControls enthält.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.GetGroupableControls(System.Windows.Forms.ContainerControl,System.String)">
 <summary>
 Ermittelt eine Liste der NullableValueControls auf dem ContainerControl, die über ihre GroupName-Eigenschaft der entsprechenden Gruppierung zugeordnet sind.
 </summary>
 <param name="containerControl">ContainerControl, das die NullableValueControls enthält.</param>
 <param name="GroupName">Name der Gruppe der Steuerelemente, die im Container-Steuerelement ermittelt werden sollen.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GroupFunctionalityExtender.GetGroupableControls(System.Windows.Forms.ContainerControl,System.Collections.Generic.List{System.String})">
 <summary>
 Ermittelt eine Liste der NullableValueControls auf dem ContainerControl, die über ihre GroupName-Eigenschaft den angegebenen Gruppierungen zugeordnet sind.
 </summary>
 <param name="containerControl">ContainerControl, das die NullableValueControls enthält.</param>
 <param name="GroupNames">Namen der Gruppen der Steuerelemente, die im Container-Steuerelement ermittelt werden sollen.</param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.INullableValueEditor">
 <summary>
 Stellt Eigenschaften und Methoden für ein NullableValueControl bereit, das über einen Eingabeeditor (beispielsweise TextBox-basierend) verfügt und 
 darüber eine entsprechende Infrastruktur für die Formatierung und Validierung der Eingabe zur Verfügung stellt.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueEditor.OriginalValue">
 <summary>
 Der ursprüngliche Wert der Eingabe.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueEditor.FormatterEngine">
 <summary>
 Eine Formatierungs-Engine, die die aufbereitung des Wertes für eine formatierte Darstellung übernimmt, wenn das Eingabefeld den Fokus verlässt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.INullableValueEditor.FormatString">
 <summary>
 Bestimmt oder ermittelt eine Formatzeichenfolge, mit der der Wert für die formatierte Darstellung über seine Formateirungs-Engine aufbereitet werden kann.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.INullableValueEditor.IsMultilineControl">
 <summary>
 Ermittelt, ob der Editor mehrzeilige Eingaben verarbeiten soll.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.INullableValueEditor.ValidateContent">
 <summary>
 Validiert die Eingabe und liefert im Bedarfsfall eine entsprechende Ausnahme oder Nothing zurück.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.INullableValueEditor.SetFailedValidation(System.String)">
 <summary>
 Bestimmt, dass die Validierung auf Formularebene fehlgeschlagen ist, und definiert eine entsprechende Fehlermeldung für die Anzeige.
 </summary>
 <param name="ErrorMessage"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.INullableValueEditor.ClearFailedValidation">
 <summary>
 Setzt die Validierung auf Formularebene zurück.
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2">
 <summary>
 Implements the basic functionality required by the derived type-safe datatype specific controls, 
 such as the <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableIntValue">NullableIntValue</see> control 
 or the <see cref="T:ActiveDevelop.EntitiesFormsLib.NullableDateValue">NullableDateValue</see> control.
 </summary>
 <typeparam name="NullableType">To make the derived control process only type-safe data, 
 the concrete datatype the control is supposed to process (DateTime, Int, Decimal, Custom Structures). 
 Must be Value Types.</typeparam>
 <typeparam name="ControlType">An underlying control which must derive from <see cref="T:System.Windows.Forms.Control">Control</see>, 
 can be instantiated and must implement the Interfaces
 <see cref="T:ActiveDevelop.EntitiesFormsLib.INullableValuePrimalControl">INullableValuePrimalControl</see> and 
 <see cref="T:ActiveDevelop.EntitiesFormsLib.ITextBoxBasedControl">ITextBoxBasedControl</see>/> 
 </typeparam>
 <remarks>
 This control holds the whole infrastructure for the type-safe specific controls, which are all TextBox based. The basic idea is, 
 that rather than only returning a String from an entry field, which the application has to convert to the specific types like 
 Currency, Dates, numeric values, etc. by itself, derived classed take care of the parsing into a specific data type, the formatting 
 (so that 3/1/12 automaticallt becomes 03/01/2012 on leaving the entry field), the error handling, and more.
 </remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.#ctor">
 <summary>
 Creates an instance of this control.
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.SetInitialDefaultBorderstyleOnDemand">
 <summary>
 Handles the behavior of setting the border style when the control is instantiated.
 </summary>
 <summary lang="de">
 Behandelt das Verhalten des Setzens des Borderstyles beim Instanziieren des Controls.
 </summary>
 <remarks>Since the Control does not get the opportunity to set the borderstyle 
 *before* calling DefaultSize from Control (Base) in the base class' constructor, 
 we have to set BorderStyle when calling DefaultSize AND in the constructor for the first time. 
 Of course, this should only happen if BorderStyle has never been set initially - 
 the corresponding flag is used for this. This behavior should, 
 if at all, only be overwritten with caution.</remarks>
 <remarks lang="de">Da das Control *vor* dem Aufruf von DefaultSize von Control(Base) 
 keine Gelegenheit im Basiskonstruktor bekommt, den Borderstyle zu setzen, 
 müssen wir beim ersten Aufruf von DefaultSize UND im Konstruktor 
 den Borderstyle setzen. Das darf natürlich nur dann passieren, 
 wenn der Borderstyle noch nie initial gesetzt wurde - dafür 
 dient das entsprechende Flag. Dieses Verhalten sollte, wenn überhaupt, 
 nur mit Bedacht überschrieben werden!</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.DefaultBorderStyle">
 <summary>
 Liefert den Default-Borderstyle-Wert zurück.
 </summary>
 <returns></returns>
 <remarks>Überschreiben Sie diese Methode, wenn Sie das BorderStyle-Verhalten 
 beim Instanziieren des Steuerelementes beeinflussen wollen.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.IsMultiLineControl">
 <summary>
 Ermittelt in abgeleiteten Klassen, ob es sich um ein mehrzeiliges Steuerelement handelt, bei dem 
 die Größenänderung dann in alle Richtungen im Designer ansonsten nur in X-Richtung möglich ist.
 </summary>
 <returns></returns>
 <remarks>Bei einzeiligen Steuerelementen kann die Höhe des Steuerelementes nicht verändert werden, sondern richtet sich nach der 
 Fontgröße. Bei der Standardeinstellung für Fonts beträgt die Höhe des einzeiligen Steuerelementes 20 Pixel.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.Borderstyle">
 <summary>
 Sets or retrieves the Borderstyle of this control.
 </summary>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnSetEditedValue">
 <summary>
 Setzt beim Fokussieren des Elements die editierbare Repräsentation des Wertes in die Textbox.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.EmulatedIsFocusedForUnitTesting">
 <summary>
 Infrastructure. Don't use directly, it's only meant for internal Unit-Test purposes. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnValueValidating(ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs{System.Nullable{`0}})">
 <summary>
 Löst das ValueValidating-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnValueValidated(ActiveDevelop.EntitiesFormsLib.NullableValueValidationEventArgs{System.Nullable{`0}})">
 <summary>
 Löst das ValueValidated-Ereignis aus.
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ChangeValuetypeInternally(System.Object)">
 <summary>
 Methode, in der ein Typ durch Mehrfachverwendung einer Formatter-Engine gewechselt werden kann.
 </summary>
 <param name="Value">Wert, dessen Typ geändert werden kann oder soll.</param>
 <returns>Wert als neuen Typ.</returns>
 <remarks>Mithilfe dieser Methode, die in abgeleiteten Klassen überschrieben werden kann, 
 lassen sich Formatter-Engines mehrfach verwenden, obwohl sie gleiche Typen 
 für unterschiedliche Eingabefeldtypen bedienen. Bei einem Integer-Eingabefeld kann 
 auf diese Weise zum Beispiel die Decimal-Formatter-Engine (NullableNumValueFormatterEngine) für die Formeleingabe verwendet werden; 
 der eigentliche Datentyp wird durch Überschreiben dieser Methode von Decimal in Integer geändert.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.RechangeValueTypeInternally(System.Nullable{`0})">
 <summary>
 Methode, in der ein Typ durch Mehrfachverwendung einer Formatter-Engine gewechselt werden kann.
 </summary>
 <param name="Value">Wert, dessen Typ in den Ausgangstyp geändert werden soll.</param>
 <returns>Wert als neuen Typ.</returns>
 <remarks>Mithilfe dieser Methode, die in abgeleiteten Klassen überschrieben werden kann, 
 lassen sich Formatter-Engines mehrfach verwenden, obwohl sie gleiche Typen 
 für unterschiedliche Eingabefeldtypen bedienen. Dabei bildet diese Methode das Gegenstück 
 zur Methode ChangeValueTypeInternally, bei der zum Beispiel bei einem Integer-Eingabefeld 
 auf diese Weise die Decimal-Formatter-Engine (NullableNumValueFormatterEngine) für die Formeleingabe verwendet werden kann; 
 der eigentliche Datentyp wird durch Überschreiben dieser Methode von Decimal in Integer geändert. 
 Durch das Überschreiben dieser Methode in abgeleiteten Klassen wird der Datentypen für die Anzeige wieder 
 vom konvertierten Datentyp (Integer) in den Ausgangsdatentyp (Decimal) geändert.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.FocusSelectionBehaviour">
 <summary>
 Sets or returns a value which determines how the preselection of text in the control is handled when it gets the focus. 
 Bestimmt oder Ermittelt die Verhaltensweise des Vorselektierens des Steuerelementtextes, wenn es den Fokus erhält. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.BeepOnFailedValidation">
 <summary>
 Sets or returns a value which determines if a beep tone should be sounded when a validation fails.
 Bestimmt oder ermittelt, ob ein Warnton bei einer fehlgeschlagenen Validierung ausgegeben werden soll.  
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnFocusColor">
 <summary>
 Sets or returns a value which determines if the control's background should be colored if it gets the focus. 
 Bestimmt oder ermittelt, ob das Steuerelement mit FocusColor eingefärbt werden soll, wenn das Steuerelement den Fokus erhält. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ErrorColor">
 <summary>
 Sets or returns a value which determines the error background color which is applied on a failed validation.
 Bestimmt oder ermittelt die Farbe, die das Steuerelement bei einer erlaubten Fehlvalidierung bekommt. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.FocusColor">
 <summary>
 Sets or returns a value which determines the background color which is applied when the controls gets the focus.
 Bestimmt oder ermittelt die Farbe, die im Bedarfsfall vorselektiert werden soll, wenn das Steuerelement den Fokus erhält. 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.AutoValidateOnLeaving">
 <summary>
 Sets or returns a value which determines if this control should be automatically validated, even if a different control which cannot raise GotFocus is selected by the user (e.g. a Toolbar Button). 
 Bestimmt oder ermittelt, ob das Steuerelement automatisch validiert werden soll, 
 wenn ein anderes Steuerelement selektiert wird, das aber keinen GotFocus auslöst (Toolbar-Button, z.B.).
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.Value">
 <summary>
 Sets or returns the value this (or a derived) control is representing.
 Bestimmt oder ermittelt den Wert, den dieses Steuerelement repräsentiert.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.SetValuePreserveOriginalValue(System.Nullable{`0})">
 <summary>
 Wird von ableitenden Klassen verwendet, zum Setzen eines Wertes, wie 
 wenn der Anwender den Wert verändert hätte, er also zum IsDirty führt,
 was beim reinen Setzen der Value-Eigenschaft nicht der Fall wäre. 
 </summary>
 <param name="value"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.BeginForceValueChangeCauseToUser">
 <summary>
 Wird von abgeleiteten Klassen dann aufgerufen, wenn sie den Value verändern, und anzeigen wollen, 
 dass Value durch den User von außen und nicht durch den Property Setter verändert wurde.
 </summary>
 <remarks>Dieser Aufruf muss mit EndChangeValue Internally abgeschlossen werden.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.EndValueChangeCauseToUser">
 <summary>
 Wird von abgeleiteten Klassen dann aufgerufen, nachdem sie den Value verändern, und anzeigen wollen, 
 dass Value durch den User von außen und nicht durch den Property Setter verändert wurde.
 </summary>
 <remarks>Diesem Aufruf muss EndChangeValueInternally voran gehen.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.LastCommittedValue">
 <summary>
 Retrieves the latest validated value this control (or a derived control) has represented. Does not cause a re-validation. 
 Ermittelt den letzten validierten Wert, den dieses Steuerelement repräsentiert; löst keine Neuvalidierung aus, wenn das Steuerelement den Fokus besitzt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnValueChanging(ActiveDevelop.EntitiesFormsLib.ValueChangingEventArgs{System.Nullable{`0}})">
 <summary>
 Raises the ValueChanging Event.
 Löst das ValueChanging-Ereignis aus.
 </summary>
 <param name="e">Die Ereignisparameter, die den alten und den neuen Wert enthalten.</param>
 <remarks>Überschreiben Sie diese Methode in abgeleiteten Klassen, um den Wert, in den die Value-Eigenschaft 
 geändert werden soll, beeinflussen zu können.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnValueChanged(ActiveDevelop.EntitiesFormsLib.ValueChangedEventArgs)">
 <summary>
 Raises the ValueChanged Event.
 Löst das ValueChanged-Ereignis aus.
 </summary>
 <param name="e">Leere Ereignisparameter.</param>
 <remarks>Überschreiben Sie diese Methode in abgeleiteten Klassen, um den Zeitpunkt 
 zu bestimmen, zu dem die Value-Eigenschaft geändert wurde.</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.UpdateValue">
 <summary>
 Wird aufgerufen, sobald der Value-Eigenschaft ein neuer Wert zugewiesen wird, und sorgt dafür, 
 dass die entsprechende Aktualisierung im Steuerelement stattfindet.
 </summary>
 <remarks>Berücksichtigt die unterschiedlicher Darstellung 
 des Wertes bei Fokussierung/Nicht-Fokussierung des Steuerelements.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.IsValueNull">
 <summary>
 Retrieves if the control currently represents a 'null' value (Nothing in VB).
 Ermittelt, ob die Value-Eigenschaft gegenwärtig 'null' (Nothing in VB) ist.
 </summary>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnGetEditedValue">
 <summary>
 Ermittelt die initiale editierbaren Repräsentation des Wertes, wenn die Value-Eigenschaft zugewiesen wird.
 </summary>
 <returns>Zeichenkette, die der editierbaren Repräsentation des Wertes entspricht.</returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.FormatterEngine">
 <summary>
 Gets or sets the FormattingEngine in a derived control which controls the formatting of the field's content when the focus got lost (e.g. 1/3/12 --> 01/03/2012).
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.FormatString">
 <summary>
 Bestimmt oder ermittelt die Format-Zeichenfolge, die die Formatierung für das Anzeigen des Wertes nach Verlassen des Feldes vorgibt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.GetDefaultFormatString">
 <summary>
 Liefert in abgeleiteten Klassen den Standardwert für die die Format-Zeichenfolge, die die Formatierung für das Anzeigen des Wertes nach Verlassen des Feldes vorgibt.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.NullValueString">
 <summary>
 Gets or sets a string which is shown on leaving the control when the control represents null (nothing in VB). This can be used as a placeholder text.
 Bestimmt oder ermittelt die Zeichenfolge, die beim Verlassen des Steuerelements angezeigt wird, wenn eine Null-Eingabe erfolgte. Kann als placeholder Eigenschaft verwendet werden.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.GetDefaultNullValueString">
 <summary>
 Liefert in abgeleiteten Klassen den Standardwert für die Zeichenfolge, die beim Verlassen des Steuerelements angezeigt wird, wenn eine Null-Eingabe erfolgte.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.NullValueColor">
 <summary>
 Gets or sets the content color which is used for the NullValueString which the control represents 'null' (nothing in VB).
 Bestimmt oder ermittelt die Farbe, mit der der Inhalt des Steuerelementes angezeigt werden soll, wenn es den Wert 'null' widerspiegelt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnInitializeEditedValue">
 <summary>
 Wird aufgerufen, wenn der bearbeitete Wert neu initialisiert wird (durch den Setter der Value-Eigenschaft)
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.OnIsDirtyChanged(ActiveDevelop.EntitiesFormsLib.IsDirtyChangedEventArgs)">
 <summary>
 Raises the IsDirty-Event.
 </summary>
 <param name="e"></param>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.IsDirty">
 <summary>
 Retrieves if the Value property has changed since its first assignment, e.g. to show that a record set on the screen, which this field is part of, has to be updated.
 Ermittelt, ob sich die Value-Eigenschaft seit der letzten (ersten) Zuweisung geändert hat, beispielsweise um anzuzeigen, dass ein Datensatz auf dem Bildschirm, zu dem dieses Feld gehört, aktualisiert werden muss.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ResetIsDirty">
 <summary>
 Resets the IsDirty state. Infrastructure, do not use directly.
 Setzt den Status zurück, dass dieses Feld vom Anwender geändert wurde, und sein Value in der Datenquelle aktualisiert werden sollte.
 </summary>
 <remarks>Diese Methode wird von der Infrastruktur verwendet, und sollte nicht direkt angewendet werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.IsLoading">
 <summary>
 Bestimmt oder ermittelt, ob die Maske, die das Steuerelement enthält, gerade die Steuerelemente mit Daten befüllt, oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Das Setzen dieser Eigenschaft kann nur über die Schnittstelle (in der Regel von der Maskensteuerung) vorgenommen werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.DatafieldName">
 <summary>
 Bestimmt oder Ermittelt den Datenquellen-Feldnamen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.AssignedManagerComponent">
 <summary>
 Bestimmt oder ermittelt die FormToBusinessClassManager-Komponente, die die Verwaltung dieses NullableValue-Controls übernimmt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.DatafieldDescription">
 <summary>
 Bestimmt oder Ermittelt den ausgeschriebenen/lolkalisierten Namen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Wenn ein bindbares Feld in einem Tabellenschema beispielsweise den Namen ZipCity trägt, könnte 
 diese Eigenschaft "Postleitzahl/Ort" lauten. Diese Eigenschaft spiegelt also die Bezeichnung des 
 Datenfeldnamens in echter Sprache wider, sodass sie verständlich für den Endanwender wird. Bei automatisierter 
 Validierung einer Eingabemaske kann dann in der UI mit diesen Namen Bezug auf das entsprechende 
 Datenfeld genommen werden. Die Bezeichnung einer Datenfeldes in der UI beispielsweise durch ein Label sollte 
 daher genauso lauten, wie diese Eigenschaft. Diese Eigenschaft sollte bei Verwendung von automatischer 
 Validierung auch auf jedenfall gesetzt sein, weil anderenfalls eine Ausnahme ausgelöst werden kann.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.NullValueMessage">
 <summary>
 Bestimmt oder Ermittelt den Text der ausgegeben werden soll, wenn der Anwender versucht ein Feld zu verlassen, 
 dass keine Eingaben enthält. Ist der Text nicht definiert, kann das Feld verlassen werden.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Mit dieser Eigenschaft bestimmen Sie einerseits, ob ein Eingabefeld Null-Werte enthalten darf oder nicht, und 
 andererseits wird gleichzeitig festgelegt, welche Fehlermeldung für den Benutzer ausgegeben werden soll, wenn er 
 versucht, ein Eingabefeld zu verlassen, das keine Null-Werte akzeptiert, er aber keinen Wert eingegeben hat.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ImitateTabByPageKeys">
 <summary>
 Returns or sets a flag which determines that the use can cycle between entry fields with Page up and Page down rather than Tab and Shift+Tab.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ReadOnly">
 <summary>
 Definiert, ob Daten im Steuerelement nur dargestellt (true) oder auch verändert werden können.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ObfuscationChar">
 <summary>
 Bestimmt oder ermittelt das Zeichen, das bei eingeschaltete Obfuskierung 
 anstelle des wirklichen Inhaltes angezeigt werden sollen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.IsKeyField">
 <summary>
 Bestimmt oder ermittelt, ob es sich bei einem Eingabefeld um ein Key-Feld handelt oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ExceptionBalloonDuration">
 <summary>
 Bestimmt die Dauer in Millisekunden, die ein Baloontip im Falle einer Fehlermeldung angezeigt wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.MaxLength">
 <summary>
 Bestimmt oder ermittelt die maximale Anzahl an Zeichen/Ziffern, die in dieses Feld eingegeben werden können.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ReverseTextOverflowBehaviour">
 <summary>
 Bestimmt oder ermittelt, ob bei einem Überlauf in der TextBox der vordere oder der hintere Teiltext angezeigt wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.TextAlign">
 <summary>
 Ermittelt oder bestimmt, wie der Text innerhalb des Steuerelementes ausgerichtet wird.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.TextBoxPart">
 <summary>
 Infrastruktur - dient nur zur Designer-Unterstützung.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.AdditionalSnapBaselineOffset">
 <summary>
 Bestimmt, dass 1 Pixel mehr an Snapline-Offset für die Baseline-Snapline-Designer-Funktionalität benötigt wird.
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.UIGuid">
 <summary>
 Bestimmt oder ermittelt eine eindeutige GUID für das Steuerelement, um beispielsweise Rechte-Mappings in Datenbanken aufzubauen.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Dass diese Eigenschaft UIGuid und nicht PermissionGuid lautet, hat historische Gründe. Diese Eigenschaft implementiert 
 IPermissionManageableUIContentElement.PermissionGuid.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ContentPresentPermission">
 <summary>
 Bestimmt oder ermittelt, in welcher Form eine Komponente auf Grund von Rechten oder Lizenzausbaustufen verwendet werden darf.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.PermissionReason">
 <summary>
 Bestimmt oder ermittelt einen Grund, weswegen ein Benutzer nur eingeschränkten Zugriff auf das Steuerelement hat.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ElementType">
 <summary>
 Definiert, um welche Art Element es sich bei dieser Komponente handelt.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.IsManageable">
 <summary>
 Bestimmt oder ermittelt, ob dieses Steuerelement rechtemäßig von einem externen Controler verwaltet werden kann oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.ProcessingPriority">
 <summary>
 Bestimmt oder ermittelt einen Prioritätsindex, der bestimmt, in welcher Reihenfolge 
 das Steuerelement vom FormsToBusinessClass-Manager verarbeitet wird (Höhere Nummer, frühere Verarbeitung.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.SelectedForProcessing">
 <summary>
 Bestimmt oder ermittelt, ob eine <see cref="T:ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager">FormToBusinessClassManager</see>-Instanz 
 diese Komponente verarbeiten soll, wenn seine AutoUpdateFields-Eigenschaft auf ProcessSelected gesetzt wurde.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueBase`2.GroupName">
 <summary>
 Bestimmt oder ermittelt einen Gruppierungsnamen, um eine Möglichkeit zur Verfügung zu stellen, zentral eine Reihe von Steuerelementen zu steuern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.StringValue">
 <summary>
 String, der als ValueType ausgelegt ist, um der Verarbeitung als Nullable zu genügen.
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableStringValueFormatterEngine.IgnoreWhiteSpace">
 <summary>
 Definiert, ob vorhandene WhiteSpaces ignoriert werden oder als reguläre Eingabe gelten.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Wenn ein String nur White Spaces enthält, aber keine anderen Zeichen, würde er als 
 Null/Nothing bewertet werden, ansonsten nicht.</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BindableTreeView">
 <summary>
 TreeView welche eine Liste für die Erstellung des Knotenbaums (auf Basis einer Objektstruktur) zur Bindung bereitstellt
 und zur Laufzeit eine Aktualisierung des aktuell ausgewählten Knotenelements zur Verfüfung stellt
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.BindableTreeView._childProps">
 <summary>
 Level/Property
 </summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableTreeView.DataSource">
 <summary>
 Die Quelle welche als Knoten abgebildet werden soll
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableTreeView.SelectedItem">
 <summary>
 Das Element welches in der TreeView ausgewählt wurde
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.BindableTreeView.SelectedRootItem">
 <summary>
 Das Element welches in der TreeView in erster Ebene ausgewählt wurde
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableTreeView.RefreshTree">
 <summary>
 Erstellt den Baum anhand der DataSource neu
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableTreeView.CreateNode(System.Object,System.Int32,System.Boolean)">
 <summary>
 Erstellt einen neues Knotenobjekt
 </summary>
 <param name="item"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableTreeView.OnAfterSelect(System.Windows.Forms.TreeViewEventArgs)">
 <summary>
 Selecteditem synchronisieren
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.BindableTreeView.NodesListDictionary._dictionary">
 <summary>
 Speichert eine Zuordnung die benachrichtigungsfähige Unterliste von einem gebundenen Knotenelement
 </summary>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.BindableTreeView.NodesListDictionary._additionalDictionary">
 <summary>
 Speichert die benachrichtigungsfähige Unterliste von einem gebundenen Knotenelement welche schon einmal in der TreeView verwendet wurden
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableTreeView.NodesListDictionary.Add(System.Collections.IEnumerable,ActiveDevelop.EntitiesFormsLib.DataTreeNode)">
 <summary>
 Fügt eine benachrichtigungsfähige Liste in eine lookup-Liste, wenn diese schon vorhanden ist (weil in der TreeView 
 die selbe Instanz vorher verwendet wurde, wird es in ein gesondertes Dic. geschoben)
 </summary>
 <param name="key"></param>
 <param name="item"></param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableTreeView.NodesListDictionary.GetTreeNodes(System.Collections.IEnumerable)">
 <summary>
 Liefert alle zu der übergebenen Liste zugehörigen Knoten (Können mehrere sein wenn in der TreeView die selbe Instanz schon vorher verwendet wurde)
 </summary>
 <param name="key"></param>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableTreeView.NodesListDictionary.GetLists">
 <summary>
 Liefert ALLE gespeicherten Listen
 </summary>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindableTreeView.NodesListDictionary.Remove(System.Collections.IEnumerable,ActiveDevelop.EntitiesFormsLib.DataTreeNode)">
 <summary>
 Löscht eine gebundene Liste vom übergebenen KNoten entweder aus der Hauptliste (oder wenn es sich um einen hinterliegendenen Knoten handelt) aus der Zusatz-Lookup
 </summary>
 <param name="nodeList"></param>
 <param name="node"></param>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.DataTreeNode">
 <summary>
 TreeNode welcher das entspechende Dataitem in einer Property speichert
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.DataTreeNode.DataItem">
 <summary>
 Das Item im Data-Backend
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.DataTreeNode.IsLoaded">
 <summary>
 Flag welches den Knoten als geladen kennzeichnet
 </summary>
 <returns></returns>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.CommandButton">
 <summary>
 Buttonableitung, welcher eine bindbare Command-Property zur Verfügung stellt
 </summary>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.CommandButton.BeforeCommandExecution">
 <summary>
 Fired before execution of the actual command.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.CommandButton.Command">
 <summary>
 Bindable Command of Type ICommand 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.CommandButton.ImitateTabByPageKeys">
 <summary>
 Returns or sets if the user can cycle between entry fields with Page up and Page down in addition to Tab and Shift+Tab.
 </summary>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.CommandButton.OnClick(System.EventArgs)">
 <summary>
 Hier wird der Command NACH Click-Event aufgerufen
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.CommandButton.OnBeforeCommandExecution(System.EventArgs)">
 <summary>
 Führt das BeforeCommandExecution-Event aus
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.CommandButton.AfterCommandExecution">
 <summary>
 Wird aufgerufen, sobald der gebundene Command aufgerufen wurde
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.CommandButton.OnAfterCommandExecution(System.EventArgs)">
 <summary>
 Führt das AfterCommandExecution-Event aus
 </summary>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ItemsDeletingEventArgs.Cancel">
 <summary>
 Wenn gesetzt, werden die selektierten Einträge nicht gelöscht
 </summary>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ExtendedTextBox.SetCursorToEnd">
 <summary>
 Moves the cursor to the end
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ExtDataGrid">
 <summary>
 Ableitung des WPF-DataGrids
 </summary>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ExtDataGrid.Sorted">
 <summary>
 Wird aufgerufen wenn die Sortierung bereits durchgelaufen ist
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ExtDataGrid.ItemsDeleted">
 <summary>
 Wird geworfen wenn Items mittels interner Loeschfunktion vom DataGrid geloescht wurden
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.ExtDataGrid.ItemsDeleting">
 <summary>
 Wird vor interner Loeschfunktion vom DataGrid geworfen
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ExtDataGrid.OnSorted(System.Windows.Controls.DataGridColumn)">
 <summary>
 Wirft NACH der Sortierung das Sorted-Event
 </summary>
 <param name="column"></param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColumnType">
 <summary>
 Der elementare Typ der Spalte
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnType.TextAndNumbers">
 <summary>
 Einfache TextBox welche auch bearbeitet werden kann und auch Zahlen anzeigen kann (ohne Converter)
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnType.CheckBox">
 <summary>
 Einfacher Spaltentyp fuer Booleanwerte
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnType.ComboBox">
 <summary>
 ComboBox-Spaltentyp, fuer die Auswahl von mehreren Werten
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnType.Hyperlink">
 <summary>
 Link zu einer Url
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnType.Image">
 <summary>
 Spaltentyp fuer die Verwendung eines Bildes
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.IMvvmColumnTemplateExtender">
 <summary>
 Dieses Interface kann vom Anwendungsentwickler verwdenet werden, um die Columneigenscahften via ein TemplateExtender zu erweitert. Dazu implementiert er an einer
 Klasse dieses Interface und ergaenzt dann die fehlenden Properties. ANschliessend muss er fuer die Initialisierung und der Bindungsueberfuehrung sorgren.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IMvvmColumnTemplateExtender.InitilizeColumn(System.Windows.Controls.DataGridTextColumn)">
 <summary>
 Initialisiert eine Text-Column
 </summary>
 <param name="column"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IMvvmColumnTemplateExtender.InitilizeColumn(System.Windows.Controls.DataGridCheckBoxColumn)">
 <summary>
 Initialisiert eine CheckBox-Column
 </summary>
 <param name="column"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IMvvmColumnTemplateExtender.InitilizeColumn(System.Windows.Controls.DataGridComboBoxColumn)">
 <summary>
 Initialisiert eine CBO-Column
 </summary>
 <param name="column"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.IMvvmColumnTemplateExtender.InitilizeColumn(System.Windows.Controls.DataGridTemplateColumn)">
 <summary>
 Initialisiert eine Template-Column
 </summary>
 <param name="column"></param>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn">
 <summary>
 Columnklasse welche die WPF-Column wrapped 
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.NewColumnName">
 <summary>
 Dieser Name wird für alle neu angelegten Spalten verwendet
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.TextWrapping">
 <summary>
 Definiert ob der Text in der Spalte umgebrochen werden soll
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.PropertyCellBindings">
 <summary>
 Hier werden die Bindungen fuer eine Zelle gespeichert
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.DataSourceType">
 <summary>
 Hier wird der Typ vom Anwendungsentwickler angegeben, welcher fuer die Bindungen einer Spalte verwendet werden soll
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.WpfColumn">
 <summary>
 Hier wird die intern verwendete WPF-Column-Instanz gespeichert
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.InitializeColumn">
 <summary>
 Erstellt anhand der MVVM-PropertyBindings die Bindungen fuer die WPF-Column und uebersetzt diese
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.GetPropertyBindings(System.Windows.Forms.Control)">
 <summary>
 Interfaceimplementierung
 </summary>
 <param name="ctrl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn._bindingMappings">
 <summary>
 Speichert statisch die Bindingmappings, welche dann in der Initialisierungsphase der Column verwendet werden
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.AddBindingMappings">
 <summary>
 Hier werden die Bindungen (welche der Anwendungsentwickler definiert hat) auf die WPF-Bindungen gemapped 
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.MapCommonColumnProperties(System.Windows.Controls.DataGridColumn)">
 <summary>
 Hier werden initial die allgmeinen Werte (welcher der Anwendungsentwickler definiert hat) um die Properties auf die WPF-Column zu mappen
 </summary>
 <param name="dataGridColumn"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.MapDataGridBoundColumnProperties(System.Windows.Controls.DataGridBoundColumn)">
 <summary>
 Hier werden die DataGridBoundColumn spezifischen Properties initial die Werte (welcher der Anwendungsentwickler definiert hat) um die Properties auf die WPF-Column zu mappen
 </summary>
 <param name="dataGridBoundColumn"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.FontFamily">
 <summary>
 Schriftart
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.FontWeight">
 <summary>
 Schriftform
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.FontStyle">
 <summary>
 FontStyle
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.ComboBoxItemsSource">
 <summary>
 Falls als Typ eine Combobox ausgewaehlt wurde, kann hier die Bindung zur ItemsSource definiert werden
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.Width">
 <summary>
 Spaltenbreite
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.WidthLengthUnitType">
 <summary>
 Typ der Angabe der Spaltenbreite
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.Visibility">
 <summary>
 Sichtbarkeit der Spalte
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.Content">
 <summary>
 Der Inhalt einer Zelle
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.CellPadding">
 <summary>
 Abstand der Zelle nach aussen
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.Header">
 <summary>
 Die Spaltenueberschrift
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.IsEnabled">
 <summary>
 Bolleanwert, welcher angibt ob die Zelle/Spalte ReadOnly ist
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.BackgroundColor">
 <summary>
 Hintergrundfarbe
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.ForegroundColor">
 <summary>
 Vordergrundfarbe
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.HorizontalAlignment">
 <summary>
 Hor. Ausrichtung
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.VerticalAlignment">
 <summary>
 Ver. Ausrichtung
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.ColumnHeaderFont">
 <summary>
 Betrifft die Schriftart der Kopfzeile einer Spalte
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.ColumnHeaderPadding">
 <summary>
  Betrifft das Padding der Kopfzeile einer Spalte
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.DisplayMemberPath">
 <summary>
 Falls Typ eine CBO ist, wird dieser MemberPath verwendet 
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.Name">
 <summary>
 Name der Spalte welcher fuer die Serialisierung verwendet wird
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.ColumnType">
 <summary>
 Der Typ der Spalte
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.Font">
 <summary>
 Schriftart etc.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.ColumnTemplateExtender">
 <summary>
 Hier wird die Instanz (falls ein Typ ausgeaehtl wurde) fuer die Columnerweiterung hinterlegt
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.AddSerializedColumn(System.String,System.CodeDom.CodeStatementCollection)">
 <summary>
 Serialisiert die aktuelle Columninstanz in CodeStatements und fuegt diese direkt der CodeStatementCollection hinzu
 </summary>
 <param name="columnName">Name der Spalte welche fuer die Serialisierung verwendet werden soll</param>
 <param name="statements">CodeStatementCollection fuer den serialisierten Code</param>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn._myManuelSerializedProperties">
 <summary>
 Hier werden die Propertynamen als String angegeben, welche vom CodeSerializer ignoriert werden sollen
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.GetMyPropertiesForSerialization">
 <summary>
 Liefert NUR die Properties, welche in dieser Klasse auch definiert wurden (und nicht die in der Basisklasse)
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.GetPropertyStatement(System.Reflection.PropertyInfo,System.String,System.Object)">
 <summary>
 Liefert das CodeAssignStatement, welches eine Property der Column in Code serialisiert
 </summary>
 <param name="prop"></param>
 <param name="varName"></param>
 <param name="host"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn.Clone">
 <summary>
 Klont mittels Reflection ICloneable-Interface eine Column-Instanz in eine neue MvvmDataGridColumn
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridComboBoxColumn">
 <summary>
 Klasse welche fuer die Identifizierung einer DataGridTemplateColumn als ComboBox verwendet wird
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridImageColumn">
 <summary>
 Klasse welche fuer die Identifizierung einer DataGridTemplateColumn als Image verwendet wird
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridSettings">
 <summary>
 Liste für alle Einstellungen von jedem DataGrid
 </summary>
 <remarks>Schlüssel ist der Name des Formulars</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridSetting">
 <summary>
 Datenklasse welche die einzelnen Einstellungen eines DataGrids abspeichert
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridDesigner">
 <summary>
 Designer für das MvvmDataGrid
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGridDesigner.MvvmDataGridInstance">
 <summary>
 Liefert die DataGrid-Instanz zu diesem Designer
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridDesigner.InsertColumns(System.Object,System.EventArgs)">
 <summary>
 Ruft auf dem MvvmDataGrid eine Methode auf, welche anhand des DataContextTypes bereits gebundene Spalten definiert
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridDesigner.SetDataContextType(System.Object,System.EventArgs)">
 <summary>
 Ruft das gleiche Bearbeitenfenster für den DataContextType auf dem MvvmDataGrid auf, wie das im Property-Window
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridDesigner.UpdateVerbEnablingStates">
 <summary>
 Prüft die Verfügbarkeit alle Designer Verbs
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ItemDoubleClickEventArgs">
 <summary>
 EventArgs für DoppelKlick im MvvmDataGrid in einer Zeile
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ItemDoubleClickEventArgs.Item">
 <summary>
 Ausgewählte Item innerhalb der Zeile
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ItemsDeletedEventArgs.DeletedItems">
 <summary>
 Die vom DataGrid geleoschten Items
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColumnBindingsUITypeEditor">
 <summary>
 TypeEditor welcher fuer Bearbeitung der Zellenbindungen einer Spalte verwendet werden soll
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColumnBindingsUITypeEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
 <summary>
 Wird aufgerufen, sobal die Bindungen bearbeitet werden sollen
 </summary>
 <param name="context"></param>
 <param name="provider"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.GridColumnCollection">
 <summary>
 ObservableCollection mit MvvmDataGridColumns welche mittels der MvvmDataGridColumnsCodeDomSerializer-Klasse serialisiert wird
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.GridColumnCollection.Clone">
 <summary>
 Klont den gesamten Inhalt der Collection in eine einfache Liste
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumnsCodeDomSerializer">
 <summary>
 CollectionSerializer fuer die Serialisierung der GridColumnCollection
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumnsCodeDomSerializer.SerializeCollection(System.ComponentModel.Design.Serialization.IDesignerSerializationManager,System.CodeDom.CodeExpression,System.Type,System.Collections.ICollection,System.Collections.ICollection)">
 <summary>
 Serialisert die Collection
 </summary>
 <param name="manager"></param>
 <param name="targetExpression"></param>
 <param name="targetType"></param>
 <param name="originalCollection"></param>
 <param name="valuesToSerialize"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid">
 <summary>
 DataGrid zur Anzeige und Bearbeiten von Daten welche aus eine ItemsSource stammen.
 </summary>
 <remarks>Wrapper fuer das WPF-DataGrid. Verwendet intern das WPF-DataGrid (mittels ElementHost) und somit auch die WPF-Columns und WPF-Bindungen.</remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid._isColumnDisplayIndexUpdating">
 <summary>
 Wahr wenn momentan die Spalten-Reihenfolge geladen wird
 </summary>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.Sorting">
 <summary>
 Wird aufgerufen wenn eine Spalte angefangen werden soll zu sortieren
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.ItemsDeleting">
 <summary>
 Wird von interner Loeschfunktion vom DataGrid geworfen
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.Settings">
 <summary>
 Hier kann initial bei Programmstart die Settingsinstanz für das Speichern der Einstellung eines MvvmDataGrids hinterlegt werden
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.HeadersVisibility">
 <summary>
 Gets or sets the value that specifies the visibility of the row and column headers.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.CanUserAddRows">
 <summary>
 Flag welches bestimmt ob neue Reihen angelegt werden dürfen
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.CanUserSortColumns">
 <summary>
 Gets or sets a value that indicates whether the user can sort columns by clicking the column header.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.SelectedItems">
 <summary>
 Gets the items in the System.Windows.Controls.Primitives.MultiSelector that are selected.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.ContextMenu">
 <summary>
 Gets or sets the context menu element that should appear whenever the context menu is requested through user interface (UI) from within this element.(Inherited from FrameworkElement.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.GridLinesVisibility">
 <summary>
 Anzeigeeinstellung der Linien im DataGrid
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.CanUserDeleteRows">
 <summary>
 Bestimmt ob der Benutzer auch Zeilen löschen kann
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.SelectionMode">
 <summary>
 
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.EnterAction">
 <summary>
 Action welche aufgerufen´wir beim Enter drücken
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.ItemsSource">
 <summary>
 Datenquelle
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.AutoGenerateColumns">
 <summary>
 True, wenn die Columns automatisch ergaenzt werden sollen
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.ItemDoubleClick">
 <summary>
 Wird geworfen sobald eine Zeile via Doppel-Klick angewählt wurde
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerKeyDown">
 <summary>
 Wird geworfen wenn eine Taske auf der Tastatur gedrueckt wurde
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.DataSourceType">
 <summary>
 Hier MUSS (wenn ein Cellbinding verwendet werden soll) der Datentyp ausgewaehlt werden, welcher innerhalb der ItemsSource verwendet werden soll
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Gleiche Vorraussetzung am Typ wie DataContextTyp am MvvmManager</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.IsFilteringEnabled">
 <summary>
 Wenn gesetzt wird das Filtern vom DataGrid bei String-Eigenschaften aktiviert
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Gleiche Vorraussetzung am Typ wie DataContextTyp am MvvmManager</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.FilterCaseSensitive">
 <summary>
 Filterung unterscheidet Groß- und Kleinschreibung
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Gleiche Vorraussetzung am Typ wie DataContextTyp am MvvmManager</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.AllowMultiColumnFiltering">
 <summary>
 An- und Ausschalten zum Filtern über mehrere Spalten
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Gleiche Vorraussetzung am Typ wie DataContextTyp am MvvmManager</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.CustomColumnTemplateType">
 <summary>
 Hier wird der Datentyp definiert, welche bei fuer die Erweiterung (durch den Anwendungsentwickler) des Templates verwendet werden soll
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.SelectedItem">
 <summary>
 Gibt das erste Element in der aktuellen Auswahl bzw. NULL zurück,
 wenn die Auswahl leer ist, oder legt das Element fest
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.SelectedIndex">
 <summary>
 Ruft den Index des ersten Elements in der aktuellen Auswahl ab bzw. legt diesen fest,
 oder gibt eine negative Eins ("-1") zurück, falls die Auswahl leer ist
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.IsGroupingEnabled">
 <summary>
 Gets or sets whether or not grouping is enabled for MvvmDataGrid.
 </summary>
 <value>true if grouping is enabled, false otherwise and by default.</value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.ItemsDeleted">
 <summary>
 Wird geworfen wenn Items mittels interner Loeschfunktion vom DataGrid geloescht wurden
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.Columns">
 <summary>
 Hier werden die Columns des DataGrid gespeichert
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.Columns_CollectionChanged(System.Object,System.Collections.Specialized.NotifyCollectionChangedEventArgs)">
 <summary>
 Sobald Columns durch den Designer oder zur Laufzeit hinzugefuegt werden, muessen diese in WPF-COlumns uebertragen werden und dem internen WPF-DataGrid hinzugefuegt werden
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.GridColumnProperty">
 <summary>
 Schluessel zur GridColumn-DependencyProperty
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.AddNewColumn(ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn)">
 <summary>
 Fuegt dem WPF-DataGrid eine neue Spalte hinzu
 </summary>
 <param name="newColumn"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.SynchronizeColumnCollections">
 <summary>
 Loescht alle Columns, die nicht mehr vorhanden sind
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.CreateColumnsDataSourceType">
 <summary>
 Wenn dem DataGrid schon ein DataSourceType bekannt gegeben wurde, können hiermit Spalten automatisch angelegt werden
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerDataGridView_SelectionChanged(System.Object,System.Windows.Controls.SelectionChangedEventArgs)">
 <summary>
 Wenn im WPF-Grid die Auswahl geaendert wurde, dann soll zum WinForms-Grid delegiert werden
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerDataGridView_MouseDoubleClick(System.Object,System.Windows.Input.MouseButtonEventArgs)">
 <summary>
 Delegiert das MouseDoubleClick des inneren Wpf-DataGrids an die WinForms-Umgebung
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.FocusGrid">
 <summary>
 Setzt den Fokus auf das interne DataGrid
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerDataGridView_ColumnDisplayIndexChanged(System.Object,System.Windows.Controls.DataGridColumnEventArgs)">
 <summary>
 Wenn der DisplayIndex vom Benutzer verschoben wurde, dann auch in Settings für nächsten Aufruf speichern
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerDataGridView_Sorted(System.Object,System.Windows.Controls.DataGridSortingEventArgs)">
 <summary>
 Wenn der Benutzer die Sortierung verändert, dann auch in Settings für nächsten Aufruf speichern
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerDataGridView_LayoutUpdated(System.Object,System.EventArgs)">
 <summary>
 Wenn sich das LAyout verändert hat, alle Spaltenbreiten abspeichern
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.UpdateAllColumnDefs">
 <summary>
 Aktualisiert anhand der WPF-Spalten die internen Danträger für das Abspeichern der Einstellungen
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerDataGridRow_MouseDoubleClick(System.Object,System.Windows.RoutedEventArgs)">
 <summary>
 Doppel-Klick auf eine Zeile, weiter delegieren mit ItemClickedEvent...
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerDataGridView_KeyDown(System.Object,System.Windows.Input.KeyEventArgs)">
 <summary>
 Ruft das InnerKeyDown-Event auf
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.InnerDataGridView_ItemsDeleted(System.Object,ActiveDevelop.EntitiesFormsLib.ItemsDeletedEventArgs)">
 <summary>
 Ruft das ItemsDeleted-Event auf
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.EndInit">
 <summary>
 Refresh:
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.Initialize">
 <summary>
 Initialisiert das MvvmDataGrid und konvertiert die Columns
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.LoadColumn(ActiveDevelop.EntitiesFormsLib.ExtDataGrid,System.Windows.Controls.DataGridLengthConverter,ActiveDevelop.EntitiesFormsLib.ColumnDefinition,ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn)">
 <summary>
 Load with the datagrid settings the wpf column
 </summary>
 <param name="innerGrid"></param>
 <param name="converter"></param>
 <param name="column"></param>
 <param name="innerColumn"></param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.ScrollIntoView(System.Object)">
 <summary>
 Scrollt zum übergebenen Objekt welches sich innerhalb der ItemsSource befindet
 </summary>
 <param name="item"></param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.GetHeader(System.Windows.Controls.DataGridColumn,System.Windows.DependencyObject)">
 <summary>
 Liefert en Spaltenkopf von einer Spalte (Da UI-Visualisierung im Grid selber gemacht wird, gibt es keine direkte Referenz)
 </summary>
 <param name="column"></param>
 <param name="reference"></param>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.UpdateFilterAddons">
 <summary>
 Aktualisiert -wenn eingeschaltet- die Filter-UI für die Spaltenköpfe
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.CloseAllFilter">
 <summary>
 Schließt alle eventuell geöffneten Filteraddons
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.ResetFilter">
 <summary>
 Setzt den Filter in der CVS zurück
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.FilterColumn(System.String,ActiveDevelop.EntitiesFormsLib.MvvmDataGridColumn)">
 <summary>
 Filtert eine Spalte
 </summary>
 <param name="filterString"></param>
 <param name="column"></param>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGrid.FilterColumnValue(System.String,System.String)">
 <summary>
 Filtert einen Wert in einer Spalte
 </summary>
 <param name="suchStr"></param>
 <param name="val"></param>
 <returns></returns>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ColumnsEditor">
 <summary>
 TypeEditor welcher fuer Bearbeitung der Spalten selber verwendet werden soll
 </summary>
 <remarks>Basiert auf dem CollectionEditor vom Framework. Erweitert allerdings die Klasse um eine korrekte Undo-Funktion</remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnsEditor._prevColumns">
 <summary>
 Speichert die ursprungs-Columns
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnsEditor._columnCollection">
 <summary>
 Aktuelle GridColumnCollection
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnsEditor._editCanceled">
 <summary>
 True wenn die Aenderungen abgebrochen wurden
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ColumnsEditor._collectionForm">
 <summary>
 Formular welches fuer das Bearbeiten (stammt aus Basis CollectionEditor) verwenden wird
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColumnsEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
 <summary>
 Ruft CollectionEditor.EditValue-Methode auf, klont jedoch erst die Columns VORHER um sie eventuell danach zu restaurieren
 </summary>
 <param name="context"></param>
 <param name="provider"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.ColumnsEditor.CreateCollectionForm">
 <summary>
 Fuegt ein FormClosed-Eventhandler an, um auch beim Schliessen des Forms bei "X" die Aenderungen zu verwerfen
 </summary>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridCustomColumnTemplateTypeUIEditor">
 <summary>
 UI-Editor um ein CustomColumnTemplateType eines MvvmDataGrids auszuwaehlen
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridCustomColumnTemplateTypeUIEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
 <summary>
 Wird aufgerufen, wenn ein TemplateExtenderTyp ausgewaehtl werden soll
 </summary>
 <param name="context"></param>
 <param name="provider"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.DataSourceSerializableTypeUIForm">
 <summary>
 Ableitung von DataSourceTypeUIForm, welches ein SerializableAttribute vorschreibt 
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmDataGridDataSourceTypeUIEditor">
 <summary>
 UI-Editor um ein DataSourceType eines MvvmDataGrids auszuwaehlen
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.MvvmDataGridDataSourceTypeUIEditor.EditValue(System.ComponentModel.ITypeDescriptorContext,System.IServiceProvider,System.Object)">
 <summary>
 Wird aufgerufen, wenn ein Typ fuer die DataSource festgelegt werden soll 
 </summary>
 <param name="context"></param>
 <param name="provider"></param>
 <param name="value"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.WPFDataGridViewWrapper">
<summary>
WPFDataGridViewWrapper
</summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.WPFDataGridViewWrapper.EnableGroupStyle">
 <summary>
 Set the GroupStyle of the DataGrid
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.WPFDataGridViewWrapper.DisableGroupStyle">
 <summary>
 Cleans the GroupStyle of the DataGrid
 </summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.WPFDataGridViewWrapper.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.MvvmViewSelectorContainer">
 <summary>
 Steuerelement, mit dessen Hilfe unterschiedliche Views in Abhängigkeit des an die DataContext-Property 
 zugewiesene ViewModel und dessen MvvmViewAttribute angezeigt wird.
 </summary>
 <remarks>Es gibt Anforderungen, bei denen durch Auswahl anderer Typen eines ViewModels entsprechend 
 andere Views zur Anzeige in denselben Container kommen müssen. Diese Anforderung wird durch dieses 
 Steuerelement abgedeckt. Es verfügt über eine DataContext-Eigenschaft, der verschiedene ViewModel-Typen 
 zugewiesen werden. Diese Unterschiedlichen ViewModels tragen über ihrer Klassesdefinition ein MvvmViewAttribute, 
 das die Relation zu einer View (Einem Formular oder einem UserControl herstellt). Jenachdem, welches ViewModel 
 diesem Steuerelement dann zur Laufzeit zugewiesen wird, sucht es dann die korrelierende View und blendet sie 
 in ihrem Child-Bereich an.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmViewSelectorContainer.AnchorView">
 <summary>
 Bestimmt oder ermittelt, ob die View auf die inneren Ausmaße des Containers 
 angepasst und an allen vier Seiten verankert werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.MvvmViewSelectorContainer.InitialViewSize">
 <summary>
 Bestimmt oder ermittelt, auf welche Ausmaße die View beim Initialisieren gesetzt werden soll.
 (Standard ist (0,0), die vordefinierte Größe der View wird dabei beibehalten.)
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ComboBoxRichTextBlock">
 <summary>
 RichTextBox-Ableitung eigens für die NullableValueComboBox
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox">
 <summary>
 Bindungsfähige ComboBox 
 </summary>
 <remarks>Basiert von inneren auf eine WPF-CBO mit UI-Elementen aus der EFL</remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.IsDirtyChanged">
 <summary>
 Wird ausgelöst wenn sich der Wert im Steuerelement geändert hat, um einen einbindenden Formular oder 
 User Control die Möglichkeit zu geben, den Benutzer zu informieren, dass er Änderungen speichern muss.
 </summary>
 <param name="sender">Steuerelement, das das Ereignis ausgelöst hat.</param>
 <param name="e"></param>
 <remarks></remarks>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.DropDownOpened">
 <summary>
 Occurs when the drop-down list of the combo box opens.
 </summary>
 <param name="sender"></param>
 <param name="e"></param>
</member>
<member name="E:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.ValueChanged">
 <summary>
 Wird ausgelöst, nachdem sich der Wert der Value-Eigenschaft geändert hat.
 </summary>
 <param name="sender">Objekt, dass das Ereignis ausgelöst hat.</param>
 <param name="e">Ereignisparameter vom Typ ValueChangedEventArgs, mit denen der Grund für die Werteänderung ermittelt werden kann.</param>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.DatafieldDescription">
 <summary>
 Bestimmt oder Ermittelt den ausgeschriebenen/lolkalisierten Namen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Wenn ein bindbares Feld in einem Tabellenschema beispielsweise den Namen ZipCity trägt, könnte 
 diese Eigenschaft "Postleitzahl/Ort" lauten. Diese Eigenschaft spiegelt also die Bezeichnung des 
 Datenfeldnamens in echter Sprache wider, sodass sie verständlich für den Endanwender wird. Bei automatisierter 
 Validierung einer Eingabemaske kann dann in der UI mit diesen Namen Bezug auf das entsprechende 
 Datenfeld genommen werden. Die Bezeichnung einer Datenfeldes in der UI beispielsweise durch ein Label sollte 
 daher genauso lauten, wie diese Eigenschaft. Diese Eigenschaft sollte bei Verwendung von automatischer 
 Validierung auch auf jedenfall gesetzt sein, weil anderenfalls eine Ausnahme ausgelöst werden kann.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.ImitateTabByPageKeys">
 <summary>
 Returns or sets a flag which determines that the use can cycle between entry fields with Page up and Page down rather than Tab and Shift+Tab.
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.DatafieldName">
 <summary>
 Bestimmt oder Ermittelt den Datenquellen-Feldnamen des Feldes, mit dem dieses Steuerelement verknüpft werden soll.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.ItemSource">
 <summary>
 DataSource der CBO
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.SelectedItem">
 <summary>
 Aktuell selektierte Item
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.SelectedValue">
 <summary>
 Gets or sets the value of the System.Windows.Controls.Primitives.Selector.SelectedItem,
 obtained by using System.Windows.Controls.Primitives.Selector.SelectedValuePath.
 </summary>
 <returns>The value of the selected item.</returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.SelectedValuePath">
 <summary>
 Gets or sets the path that is used to get the System.Windows.Controls.Primitives.Selector.SelectedValue
 from the System.Windows.Controls.Primitives.Selector.SelectedItem.
 </summary>
 <returns>The path used to get the System.Windows.Controls.Primitives.Selector.SelectedValue.
 The default is an empty string.</returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.PreviousItem">
 <summary>
 The previous selected Item
 </summary>
 <returns></returns>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.ValueNotFoundBehavior">
 <summary>
 Verhalten was passieren soll, wenn ein Wert eingegben wurde, welcher nicht in der DataSource nachgeschlagen werden kann
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.DisplayMemberPath">
 <summary>
 Pfad zur Property für die Anzeige
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Durch den MvvmManager bindbare View-Property</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.IsLoading">
 <summary>
 Bestimmt oder ermittelt, ob die Maske, die das Steuerelement enthält, gerade die Steuerelemente mit Daten befüllt, oder nicht.
 </summary>
 <value></value>
 <returns></returns>
 <remarks>Das Setzen dieser Eigenschaft kann nur über die Schnittstelle (in der Regel von der Maskensteuerung) vorgenommen werden.</remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.GroupName">
 <summary>
 Bestimmt oder ermittelt einen Gruppierungsnamen, um eine Möglichkeit zur Verfügung zu stellen, zentral eine Reihe von Steuerelementen zu steuern.
 </summary>
 <value></value>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.NullableValueComboBox.Text">
 <summary>
 Inner-Text-Property
 </summary>
 <returns></returns>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ValueNotFoundBehavior">
 <summary>
 Verhalten-Flag zur Steuerung des BindableComboBox
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ValueNotFoundBehavior.KeepFocus">
 <summary>
 Verbieten das Verlassen des Controls solange ein Wert enthalten ist, welcher nicht nachgeschlagen werden konnte
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ValueNotFoundBehavior.SelectFirst">
 <summary>
 Wählt immer den ersten Wert im Controls aus, solange etwas eingegeben wurde, was nicht in der ItemsSource enthalten ist
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ValueNotFoundBehavior.IsNotEditable">
 <summary>
 Control verbietet die Eingabe von anderen Werten
 </summary>
 <remarks></remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ValueNotFoundBehavior.PreserveInput">
 <summary>
 Erlaubt die Eingabe eines Wertes welcher nicht in der ItemsSource nachgeschlagen werden konnte
 </summary>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.ToggleButton">
 <summary>
 WPF-ToggleButton
 </summary>
 <remarks>WPF-ToggleButton welcher von der UI auf dem EFL-ComboButton</remarks>
</member>
<member name="F:ActiveDevelop.EntitiesFormsLib.ToggleButton.IsCheckedProperty">
 <summary>
 Schluessel zur IsChecked-DependencyProperty
 </summary>
 <remarks></remarks>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.ToggleButton.IsChecked">
 <summary>
 
 </summary>
 <value></value>
 <returns></returns>
 <remarks>(Dependency Property)</remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.WPFComboBoxWrapper">
<summary>
WPFComboBoxWrapper
</summary>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.WPFComboBoxWrapper.InitializeComponent">
<summary>
InitializeComponent
</summary>
</member>
<member name="P:ActiveDevelop.EntitiesFormsLib.InnerComboBox.ImitateTabByPageKeys">
 <summary>
 Returns or sets a flag which determines that the use can cycle between entry fields with Page up and Page down rather than Tab and Shift+Tab.
 </summary>
 <returns></returns>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.InnerComboBox.SetCursorToEnd">
 <summary>
 Moves the cursor to the end
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValueDataBindingControlCollection">
 <summary>
 Stellt Funktionen zur Verfügung, mit denen Steuerelemente, die die INullableValueDataBinding-Schnittstelle implementieren, 
 in einem ControlContainer ermittelt und zur Datenübertragung in Datenquellen überprüft werden können.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueDataBindingControlCollection.FromContainerControl(System.Windows.Forms.Control,ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager)">
 <summary>
 Liefert - rekursiv ermittelt - eine Liste aller Steuerelemente eines ContainerControls zurück, die die INullableValue-Schnittstelle implementieren.
 </summary>
 <param name="cControl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.NullableValueEditorControlCollection">
 <summary>
 Stellt Funktionen zur Verfügung, mit denen Steuerelemente, die die INullableValueDataBinding-Schnittstelle implementieren, 
 in einem ControlContainer ermittelt und zur Datenübertragung in Datenquellen überprüft werden können.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.NullableValueEditorControlCollection.FromContainerControl(System.Windows.Forms.Control,ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager)">
 <summary>
 Liefert - rekursiv ermittelt - eine Liste aller Steuerelemente eines ContainerControls zurück, die die INullableValueEditor-Schnittstelle implementieren.
 </summary>
 <param name="cControl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.UpdatableInfoControlCollection">
 <summary>
 Stellt Funktionen zur Verfügung, mit denen Steuerelemente, die die INullableValueDataBinding-Schnittstelle implementieren, 
 in einem ControlContainer ermittelt und zur Datenübertragung in Datenquellen überprüft werden können.
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.UpdatableInfoControlCollection.FromContainerControl(System.Windows.Forms.Control,ActiveDevelop.EntitiesFormsLib.FormToBusinessClassManager)">
 <summary>
 Liefert - rekursiv ermittelt - eine Liste aller Steuerelemente eines ContainerControls zurück, die die IUpdatableInfoControl-Schnittstelle implementieren.
 </summary>
 <param name="cControl"></param>
 <returns></returns>
 <remarks></remarks>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.GridPanel">
 <summary>
 !!!EXPERIMENTAL!!!: Stellt ein Grid zur Verfügung, in dem sich Steuerelemente automatisch 
 anhand ihrer Größer selbst anordnen und Layouten.
 </summary>
</member>
<member name="T:ActiveDevelop.EntitiesFormsLib.BindingInformationForPrinting">
 <summary>
 Klasse, welches die Bindungsinformationen und Controlinformationen eines Controls speichert
 </summary>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.BindingInformationForPrinting.#ctor(ActiveDevelop.EntitiesFormsLib.ExtenderProviderPropertyStoreItem{ActiveDevelop.EntitiesFormsLib.MvvmBindingItem},ActiveDevelop.EntitiesFormsLib.PropertyBindingItem)">
 <summary>
 Benötigt das MvvmBindingItem sowie das PropertyBindingItem um an alle Informationen zu gelangen
 </summary>
 <param name="bindingItem"></param>
 <param name="propBinding"></param>
 <remarks></remarks>
</member>
<member name="M:ActiveDevelop.EntitiesFormsLib.PropertyBindingsForPrinting.getBindingInformation(ActiveDevelop.EntitiesFormsLib.MvvmManager)">
 <summary>
 Funktion, welche die Bindungsinformationen anhand des mvvmManagers ermittelt und als List(Of BindingInformationForReport) zurückgibt.
 </summary>
 <param name="mvvmManager"></param>
 <returns></returns>
 <remarks></remarks>
</member>
</members>
</doc>
