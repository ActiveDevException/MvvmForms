++++++++++++++++++++++++++
MvvmForms Info: 2015-21-05
++++++++++++++++++++++++++

MvvmFormsBase is part of MvvmForms and offers support classes for creating ViewModels.
MvvmFormsBase is Open Source under the MIT licence; 
The main MvvmForms library, however, is Dual Licence.

You can use MvvmForms freely for evaluation, for acadamic purposes, for personal 
non-commercial purposes and for Open Source GPL Projects. If you want to use 
after evaluation in your commercial team projects, you need to obtain a per-developer-licence.
Please contact mvvmforms@activedevelop.de for further information.

<==================================
 CHANGELOG
 NEW IN 2.0.18 - 2015-05-21
 ==================================

 * Fixed HighDPIIssues with all NullableValueBase derived controls.
 * Changed direct project reference to EflViewModelBase to NuGet MvvmFormsBase.

<==================================
 CHANGELOG
 NEW IN 2.0.17 - 2015-05-05
 ==================================

INTRODUCTION: Have there been other Version?
Yes. But we at ActiveDevelop used them only internally. This is why we decided to pick this version number for the 
first public version. Said that, we have customers, who of course want to know, what changed between this first public 
release and our internal-only releases.

BIGGEST CHANGE: NuGet Support and Open Source!

NuGet-Support:
==============
That was the toughest decision. Why? Because in Windows Forms, there is no easy way to update the toolbox, if we don't want
to take the hazel of registering the DLLs in the Global Assembly Cache, patching the registry in HKY_LOCAL_MACHINE, and other 
stuff, we probably need Admin rights to. We didn't want that. Instead, there is a little detour for a project to get started
with MvvmForms:

TO GET THE TOOLBOX ITEMS: After adding the MvvmForms-Project to your project, just find the EntityFormsLib.DLL in the 
packages folder, and and drag and drop it to the toolbox - that let's your toolbox get populated. And: It's bound to 
just this project, and that's probably exactly, what you want.

Open Source:
============
Yes, the decision is made. From now on, we're putting MvvmForms under a Dual Licence model: MvvmForms will be 
GNU General Public Licence 2.0 and therefore free and forkable for all Open Source Projects. But, since GPL is a 
copyleft licence, in addition Developers will have a the option to buy a Propriatry Licence directly from ActiveDevelop, so 
they will be able to use MvvmForms even in their Propriatry Closed Source Commercial Software Projects. For more information,
also read the readme.md file on GitHub.

DETAILED OTHER CHANGES:
=======================

* Ported to Visual Basic/CSharp 2015 - 
  From now on, you'll need the new Roslyn Compilers to compile to source code for MvvmForms.
* Start of a WinForms/Windows 10 Sample Project:
  We will have a Sample Project, which demonstrates who MvvmForms provides a path 
 from WinForms to Windows Universal in Windows 10

* Nullable Value Base:
  - Introduced NullValueColor
    NullValueColor allows to set the ForeColor for the NullValueText (equal to a PlaceHolder Property in Windows Store), 
    when it gets displayed. NullValueColor is bindable.

  - Introduced TextAlign Property
    Behaves like TextAlign of the TextBox. TextAlign is bindable.
    !TextAlign and ReverseTextOverflowBehaviourChanged now interact with each other!

  - ExceptionBalloonDuration Property became bindable.

  - MaxLength became bindable.

  - ReverseTextOverflowBehaviourChanged became bindable.
    !TextAlign and ReverseTextOverflowBehaviourChanged now interact with each other!

==============================/>

